{"version":3,"sources":["UI/TodoList/ListFooter/ListFooter.module.css","UI/App.module.css","UI/TodoList/ListHeader/ListTitle/ListTitle.module.css","UI/TodoList/ListTasks/ListTask/ListTask.module.css","UI/TodoList/TodoList.module.css","UI/TodoList/ListHeader/ListHeader.module.css","UI/AddItemForm/AddItemForm.module.css","UI/TodoList/ListTasks/ListTask/TaskPriority/TaskPriority.module.css","UI/TodoList/ListTasks/ListTasks.module.css","UI/TodoList/ListTasks/ListTask/TaskTitle/TaskTitle.module.css","Assets/img/book.png","UI/Error404/Error404.module.css","UI/AddItemForm/AddItemForm.js","API/api.js","Redux/reducer.js","UI/Preloader/Preloader.js","UI/TodoList/ListHeader/ListTitle/ListTitle.js","UI/TodoList/ListHeader/ListHeader.js","UI/TodoList/ListTasks/ListTask/TaskPriority/TaskPriority.js","UI/TodoList/ListTasks/ListTask/TaskTitle/TaskTitle.js","UI/TodoList/ListTasks/ListTask/ListTask.js","UI/TodoList/ListTasks/ListTasks.js","UI/TodoList/ListFooter/ListFooter.js","UI/TodoList/ListFooter/ListFooterContainer.js","UI/TodoList/TodoList.js","UI/Error404/Error404.js","UI/App.js","Redux/store.js","index.js"],"names":["module","exports","tasksPagesLinks","filter_buttons","filter_active","pageLink","active","app","app_title","app_header","app_header_navigation","app_lists","list_header_title__input","error","delete_button","list_header_title","todoList_task","taskIsDone","todoList","todoList_main","list_header","list_header_add_form","newTaskForm","Middle","Low","High","Urgent","Later","todoList_tasks","__webpack_require__","p","error404","AddItemForm","state","inputError","itemTitle","setItemTitle","e","_this","setState","currentTarget","value","newTitle","length","match","addItem","props","listId","actionOnBlur","actionOnKey","key","keyCode","react_default","a","createElement","className","styles","this","onChange","onKeyDown","onBlur","autoFocus","type","placeholder","onClick","React","Component","instance","Axios","create","baseURL","withCredentials","headers","API-KEY","api","get","title","put","concat","post","delete","count","arguments","undefined","page","taskId","dataObj","_objectSpread","initialState","lists","listsProgress","listsLoading","tasksLoading","maxListsCount","reducer","action","renderBasis","RESTORE_LISTS","reducer_objectSpread","map","list","tasks","countOnPage","filterValue","footerProcess","ADD_LIST","extendedList","Object","toConsumableArray","UPDATE_LIST_TITLE","id","DELETE_LIST","filter","LIST_IS_LOADING","LIST_IN_PROCESS","defineProperty","process","SET_FILTER_VALUE","RESTORE_TASKS","totalCount","task","index","renderIndex","SET_TASKS_PAGE","DELETE_TASK","UPDATE_TASK","todoListId","TASK_IN_PROCESS","SET_FLTR_TASKS_PAGE","status","generalCount","DELETE_FLTR_TASK","listIsLoadingAC","listInProcessAC","setFilterValueAC","setFilterValue","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","stop","_x","apply","setTasksPage","setAllTasksPage","then","Response","_Response$data","data","items","taskInProcessAC","setFltrTasksPage","setFilteredPage","Preloader","height","width","fill","loaderStyle","Preloader_objectSpread","objectWithoutProperties","slice","indexOf","svg","xmlns","xlink","version","viewBox","space","style","cx","cy","r","attributeName","dur","begin","repeatCount","keyTimes","values","ListTitle","editMode","deleteList","history","push","updateListTitle","location","pathname","replace","setEditMode","setDisplayMode","editListTitle","trim","setTitleOnKey","disabled","listDeliting","titleUpdating","UI_Preloader_Preloader","position","bottom","right","compose","connect","deleteListAC","resultCode","updateListTitleAC","withRouter","ListHeader","maxTasksCount","addTask","_this$props","taskIsAdding","addTaskActive","_this$props2","totalTasksCount","ListHeader_ListTitle_ListTitle","UI_AddItemForm_AddItemForm","top","mdtp","TaskPriority","_useState","useState","_useState2","slicedToArray","setMode","priorityArray","priorityOptions","prior","getTaskPriority","priority","getTaskPriorityStyle","resetEditMode","defaultValue","findIndex","updateTask","TaskTitle","_useState3","_useState4","setTitle","_useState5","_useState6","setError","updateObj","getState","targetList","find","item","tasksLength","updatedTask","delTaskFromPage","pagesCount","Math","ceil","deleteTask","deleteFltrTask","_props$task","taskInProcess","completed","checked","ListTask_TaskTitle_TaskTitle","ListTask_TaskPriority_TaskPriority","ListTasks","restProps","tasksArray","ListTasks_ListTask_ListTask","assign","todoList_Tasks","ListFooter","isHidden","inProcess","pagesLinks","hideOnButtonClick","showOnButtonClick","getTasks","buttonAll","buttonActive","buttonCompleted","todoList_footer","ListFooterContainer","getPagesCount","_this$props3","getPagesLinks","_loop","i","cursor","TodoList_ListFooter_ListFooter","TodoList","render","_this$props$list","TodoList_ListHeader_ListHeader","TodoList_ListTasks_ListTasks","ListFooter_ListFooterContainer","restoreTasks","App","addList","restoreLists","_this2","listsRoutes","path","react_router","exact","UI_TodoList_TodoList","allLists","allListsLinks","link","react_router_dom","to","src","book","alt","app_header_icon","component","Error404","response","restoreTasksAC","store","createStore","composeWithDevTools","applyMiddleware","ThunkMiddleware","ReactDOM","es","UI_App","document","getElementById"],"mappings":"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","file":"static/js/main.8b799827.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksPagesLinks\":\"ListFooter_tasksPagesLinks__2ppX9\",\"filter_buttons\":\"ListFooter_filter_buttons__V_uPo\",\"filter_active\":\"ListFooter_filter_active__1bKZt\",\"pageLink\":\"ListFooter_pageLink__22oiy\",\"active\":\"ListFooter_active__116Vm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3Uwog\",\"app_title\":\"App_app_title___CSMS\",\"active\":\"App_active__2jTm6\",\"app_header\":\"App_app_header__2ML7u\",\"app_header_navigation\":\"App_app_header_navigation__2sBXL\",\"app_lists\":\"App_app_lists__XJiJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_header_title__input\":\"ListTitle_list_header_title__input__3hsj1\",\"error\":\"ListTitle_error__3wcGy\",\"delete_button\":\"ListTitle_delete_button__3fYOy\",\"list_header_title\":\"ListTitle_list_header_title__2xian\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList_task\":\"ListTask_todoList_task__3IMxd\",\"taskIsDone\":\"ListTask_taskIsDone__2i1Al\",\"delete_button\":\"ListTask_delete_button__2ymOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TodoList_todoList__XmGvD\",\"todoList_main\":\"TodoList_todoList_main__1kdBr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_header\":\"ListHeader_list_header__zEOiY\",\"list_header_add_form\":\"ListHeader_list_header_add_form__24FzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newTaskForm\":\"AddItemForm_newTaskForm__27Yum\",\"error\":\"AddItemForm_error__3PDJ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Middle\":\"TaskPriority_Middle__1hwuy\",\"Low\":\"TaskPriority_Low__3JO7V\",\"High\":\"TaskPriority_High__3FfI-\",\"Urgent\":\"TaskPriority_Urgent__2y1eq\",\"Later\":\"TaskPriority_Later__NpmW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList_tasks\":\"ListTasks_todoList_tasks__3hZhJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"TaskTitle_error__3WKI3\"};","module.exports = __webpack_public_path__ + \"static/media/book.6d8795b6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404\":\"Error404_error404__1VnlC\"};","import React from 'react'\r\nimport styles from './AddItemForm.module.css'\r\n\r\nclass AddItemForm extends React.Component {\r\n\r\n    state = {\r\n        inputError: false,\r\n        itemTitle: ''\r\n    }\r\n\r\n    setItemTitle = (e) => {\r\n        if (this.state.inputError) this.setState({ inputError: false });\r\n        this.setState({ itemTitle: e.currentTarget.value }, () => {\r\n            const newTitle = this.state.itemTitle\r\n            if (newTitle === '' || newTitle.length > 100 || newTitle.match(/%/))\r\n                this.setState({ inputError: true })\r\n        });\r\n    }\r\n\r\n    addItem = () => {\r\n        if (this.state.itemTitle === '') this.setState({ inputError: true })\r\n        else\r\n            if (!this.state.inputError) {\r\n                this.props.addItem(this.state.itemTitle, this.props.listId);\r\n                this.setState({ itemTitle: '' })\r\n            }\r\n    }\r\n\r\n    actionOnBlur = () => {\r\n        if (this.state.inputError && this.state.itemTitle.length <= 100) this.setState({ inputError: false })\r\n    }\r\n\r\n    actionOnKey = (e) => { \r\n        if (e.key === 'Enter') this.addItem()\r\n        if ( e.keyCode === 27 ) {\r\n            this.setState({ itemTitle: '', inputError: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.newTaskForm}>\r\n                <input\r\n                    className={this.state.inputError ? styles.error : ''}\r\n                    onChange={this.setItemTitle}\r\n                    onKeyDown={this.actionOnKey}\r\n                    onBlur={this.actionOnBlur}\r\n                    autoFocus={true}\r\n                    type=\"text\" placeholder={this.props.placeholder} value={this.state.itemTitle} />\r\n                <button onClick={this.addItem} >Add</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItemForm;","import Axios from 'axios';\r\n\r\n\r\nconst instance = Axios.create({ \r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/todo-lists',\r\n    withCredentials: true,\r\n    headers: { 'API-KEY': '5deaa5a9-bfea-4e80-bac8-d313181506e0' }\r\n })\r\n\r\nexport const api = {\r\n\r\n    restoreLists() {\r\n        return instance.get('')\r\n    },\r\n\r\n    updateListTitle( listId, title ) {\r\n        return instance.put(`/${listId}`, {title} )\r\n    },\r\n\r\n    addList(title) {\r\n        return instance.post('', { title } )\r\n    },\r\n\r\n    deleteList(listId) {\r\n        return instance.delete(`/${listId}`)\r\n    },\r\n\r\n    getTasks(listId, count = 10) {\r\n        return instance.get(`/${listId}/tasks?count=${count}`)\r\n    },\r\n\r\n    getAllTasks(listId) {\r\n        return instance.get(`/${listId}/tasks?count=100`)\r\n    },\r\n\r\n    getTasksOnPage(listId, page = 1) {\r\n        return instance.get(`/${listId}/tasks?count=10&page=${page}`)\r\n    },\r\n\r\n    addTask(listId, title) {\r\n        return instance.post(`/${listId}/tasks`, {title} )\r\n    },\r\n\r\n    updateTask(listId, taskId, dataObj) {\r\n        return instance.put(`/${listId}/tasks/${taskId}`, { ...dataObj } )\r\n    },\r\n\r\n    deleteTask(listId, taskId) {\r\n        return instance.delete(`/${listId}/tasks/${taskId}`)\r\n    }\r\n}","import {api} from '../API/api'\r\n\r\nconst initialState =  {\r\n    lists: [],\r\n    listsProgress: { listsLoading: false, tasksLoading: false },\r\n    maxListsCount: 10\r\n    /* lists: [\r\n        {\r\n            id: 0, title: 'Спорт', nextTaskId: 2, totalCount: 1, countOnPage: 10, filterValue: 'All',\r\n            page: 1, titleUpdating: false, taskIsAdding: false, listDeliting: false,\r\n            tasks: [{ id: 1, title: 'CSS', status: 0, priority: 'medium', taskDeliting: false}]\r\n        }\r\n    ] */\r\n    };\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    const countOnPage = 10;\r\n    const renderBasis = (action.page - 1)*countOnPage +1;\r\n\r\n    switch (action.type) {\r\n\r\n  // ---------------------------List Reducers -------------------------------\r\n        \r\n        case RESTORE_LISTS:\r\n            return {\r\n                ...state,\r\n                lists: action.lists.map( (list) => {\r\n                    return !list.tasks\r\n                        ? { ...list, page: 1, countOnPage, filterValue: 'All', tasks: [],\r\n                            footerProcess: false } \r\n                        : { ...list, page: 1, countOnPage, filterValue: 'All',\r\n                            footerProcess: false }\r\n                } )\r\n            }\r\n\r\n        case ADD_LIST:\r\n            const extendedList = { ...action.list, page: 1, countOnPage, filterValue: 'All', tasks: [] };\r\n            return {\r\n                ...state,\r\n                lists: [ extendedList, ...state.lists ]\r\n            }\r\n\r\n        case UPDATE_LIST_TITLE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( (list) => {\r\n                    if (list.id === action.listId) return ({ ...list, title: action.title })\r\n                    else return list\r\n                } )\r\n            }\r\n\r\n        case DELETE_LIST:\r\n            return {\r\n                ...state,\r\n                lists: \r\n                    state.lists.filter((list) => list.id !== action.listId)\r\n            }\r\n\r\n        case LIST_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                listsProgress: {...state.listsProgress, listsLoading: action.value}\r\n            }\r\n\r\n        case LIST_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) return { ...list, [action.process]: action.value }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n        case SET_FILTER_VALUE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) return { ...list, filterValue: action.value }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n\r\n // ---------------------------Tasks Reducers-------------------------------\r\n       \r\n\r\n        case RESTORE_TASKS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(list => {\r\n                    return list.id === action.listId\r\n                        ? {\r\n                            ...list,\r\n                            totalCount: action.totalCount,\r\n                            tasks: !action.tasks ? [] \r\n                                : action.tasks.filter( (task, index) => index < countOnPage )\r\n                                    .map( (task, index) => ({...task, renderIndex: index + 1 }) )\r\n                        }\r\n                        : list\r\n                })\r\n            }\r\n\r\n        case SET_TASKS_PAGE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( (list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: action.totalCount ? action.totalCount : list.totalCount,\r\n                            page: action.page,\r\n                            tasks: action.tasks\r\n                                .map((task, index) => ({ ...task, renderIndex: renderBasis + index }))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: list.totalCount-1,\r\n                            tasks:\r\n                                list.tasks.filter((task) => task.id !== action.taskId)\r\n                                    .map( (task, index) => ({ ...task, renderIndex: renderBasis + index })  )\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case UPDATE_TASK:\r\n\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.task.todoListId) {\r\n                        return {\r\n                            ...list,\r\n                            tasks: list.tasks.map((task) => {\r\n                                if (task.id === action.task.id) {\r\n                                    return { ...task, ...action.task }\r\n                                } else return task\r\n                            })\r\n                        }\r\n                    } else return list;\r\n                })\r\n            }\r\n        \r\n        case TASK_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            tasks: list.tasks.map( (task) => {\r\n                                if (task.id === action.taskId) { \r\n                                    return {...task, [action.process]:action.value}\r\n                                }\r\n                                else return task\r\n                            } )\r\n                        }\r\n                    }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n\r\n// ------------------------ Filtered Tasks Reducers --------------------\r\n\r\n\r\n        case SET_FLTR_TASKS_PAGE:\r\n            const totalCount = \r\n                action.tasks.filter((task) => task.status === action.status).length;\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            page: action.page,\r\n                            totalCount,\r\n                            generalCount: action.tasks.length,\r\n                            tasks: action.tasks\r\n                                .filter((task) => task.status === action.status)\r\n                                .map((task, index) => ({ ...task, renderIndex: index + 1}))\r\n                                .filter((task, index) =>\r\n                                    (index >= (action.page - 1) * countOnPage && index < action.page * countOnPage))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case DELETE_FLTR_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: list.totalCount -1,\r\n                            generalCount: list.generalCount -1,\r\n                            tasks: list.tasks.filter((task) => task.id !== action.taskId)\r\n                                .map((task, index) => ({ ...task, renderIndex: renderBasis + index }))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;\r\n\r\n\r\n// --------------------------- Lists Actions -----------------------------------\r\n\r\nconst RESTORE_LISTS = 'RESTORE-LISTS';\r\nconst restoreListsAC = (lists) => ({ type: RESTORE_LISTS, lists })\r\n\r\nexport const restoreLists = () => (dispatch) => {\r\n    dispatch(listIsLoadingAC(true))\r\n    api.restoreLists()\r\n        .then( response => {\r\n            dispatch(restoreListsAC(response.data));\r\n            dispatch(listIsLoadingAC(false))\r\n        })\r\n}\r\n\r\nconst LIST_IS_LOADING = 'LIST_IS_LOADING'\r\nconst listIsLoadingAC = (value) => ({ type: LIST_IS_LOADING, value })\r\n\r\nconst ADD_LIST = 'ADD_LIST';\r\nconst addListAC = (list) => ({type: ADD_LIST, list})\r\n\r\n\r\nexport const addList = (title) => (dispatch) => {\r\n    dispatch(listIsLoadingAC(true))\r\n    api.addList(title)\r\n            .then(Response => {\r\n                dispatch(addListAC(Response.data.data.item))\r\n                dispatch(listIsLoadingAC(false))\r\n            })\r\n}\r\n\r\nconst UPDATE_LIST_TITLE = 'UPDATE_LIST_TITLE';\r\nconst updateListTitleAC = (listId, title) => ({ type: UPDATE_LIST_TITLE, listId, title })\r\n\r\nexport const updateListTitle = (listId, title) => (dispatch) => {\r\n    dispatch(listInProcessAC(listId, 'titleUpdating', true))\r\n    api.updateListTitle(listId, title)\r\n        .then(Response => {\r\n            if (Response.data.resultCode === 0) {\r\n                dispatch(updateListTitleAC(listId, title))\r\n                dispatch(listInProcessAC(listId, 'titleUpdating', false))\r\n            }\r\n        })\r\n}\r\n\r\nconst LIST_IN_PROCESS = 'LIST_IN_PROCESS'\r\nconst listInProcessAC = (listId, process, value) => ({type: LIST_IN_PROCESS, listId, process, value})\r\n\r\nconst DELETE_LIST = 'DELETE_LIST';\r\nconst deleteListAC = (listId) => ({type: DELETE_LIST, listId})\r\n\r\nexport const deleteList = (listId) => (dispatch) => {\r\n    dispatch(listInProcessAC(listId, 'listDeliting', true))\r\n    api.deleteList(listId)\r\n            .then(() => {\r\n                dispatch(deleteListAC(listId))\r\n                dispatch(listInProcessAC(listId, 'listDeliting', false))\r\n            })\r\n}\r\n\r\n\r\nconst SET_FILTER_VALUE = 'SET_FILTER_VALUE'\r\nconst setFilterValueAC = (listId, value) => ({type: SET_FILTER_VALUE, listId, value})\r\n\r\nexport const setFilterValue = (listId, value) => async (dispatch) => {\r\n    dispatch( setFilterValueAC(listId, value) )\r\n}\r\n\r\n\r\n// --------------------------- Tasks Actions -----------------------------------\r\n\r\n\r\nconst RESTORE_TASKS = 'RESTORE_TASKS';\r\nconst restoreTasksAC = (listId, tasks, totalCount) => ({ type: RESTORE_TASKS, listId, tasks, totalCount })\r\n\r\nexport const restoreTasks = (listId) => (dispatch) => {\r\n    api.getTasks(listId)\r\n            .then(Response => {\r\n                dispatch(restoreTasksAC(listId, Response.data.items, Response.data.totalCount))\r\n            })\r\n}\r\n\r\nconst SET_TASKS_PAGE = 'SET_TASKS_PAGE';\r\nexport const setTasksPage = (listId, page, tasks, totalCount) =>\r\n    ({ type: SET_TASKS_PAGE, listId, page, tasks, totalCount })\r\n\r\n\r\n// set tasks page on \"All\" filter mode\r\nexport const setAllTasksPage = (listId, page) => (dispatch) => {\r\n    return api.getTasksOnPage(listId, page)\r\n        .then(Response => {\r\n            const { items: tasks, totalCount } = Response.data;\r\n            dispatch(setTasksPage(listId, page, tasks, totalCount))\r\n        })\r\n}\r\n\r\n\r\nconst DELETE_TASK = 'DELETE_TASK';\r\nexport const deleteTask = (listId, taskId, page) => ({ type: DELETE_TASK, listId, taskId, page })\r\n\r\nconst UPDATE_TASK = 'UPDATE_TASK';\r\nconst updateTaskAC = (task) => ({type: UPDATE_TASK, task })\r\n\r\nconst TASK_IN_PROCESS = 'TASK_IN_PROCESS'\r\nconst taskInProcessAC = (listId, taskId, process, value) => \r\n        ({type: TASK_IN_PROCESS, listId, taskId, process, value})\r\n\r\n\r\n// ------------------------ Filtered Tasks Actions ----------------------\r\n\r\nconst SET_FLTR_TASKS_PAGE = 'SET_FLTR_TASKS_PAGE';\r\nexport const setFltrTasksPage = (listId, page, tasks, status) =>\r\n    ({ type: SET_FLTR_TASKS_PAGE, listId, page, tasks, status })\r\n\r\nconst DELETE_FLTR_TASK = 'DELETE_FLTR_TASK';\r\nconst deleteFltrTask = (listId, taskId, page) => ({ type: DELETE_FLTR_TASK, listId, taskId, page })\r\n\r\n// set tasks page on \"Active\" or \"Completed\" filter mode\r\nexport const setFilteredPage = (listId, page, status) => (dispatch) => {\r\n    return api.getAllTasks(listId)\r\n        .then(Response => {\r\n            const tasks = Response.data.items;\r\n            dispatch(setFltrTasksPage(listId, page, tasks, status))\r\n        })\r\n}\r\n\r\n\r\n// ------------------------- Specified Tasks Actions -----------------------\r\n\r\n\r\nexport const addTask = (listId, title) => (dispatch) => {\r\n    dispatch(listInProcessAC(listId, 'taskIsAdding', true))\r\n    return api.addTask(listId, title)\r\n        .then((Response) => {\r\n            if (Response.data.resultCode === 0) {\r\n                dispatch(setAllTasksPage(listId, 1))\r\n                    .then(() => {\r\n                        dispatch(setFilterValueAC(listId, 'All'))\r\n                        dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n                    })\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport const addTaskActive = (listId, title) => (dispatch) => {\r\n    dispatch( listInProcessAC(listId, 'taskIsAdding', true) )\r\n    return api.addTask(listId, title)\r\n        .then(Response => {\r\n            if (Response.data.resultCode === 0) {\r\n                api.getAllTasks(listId)\r\n                    .then((Response) => {\r\n                        const status = 0;\r\n                        const tasks = Response.data.items;\r\n                        dispatch( setFltrTasksPage(listId, 1, tasks, status) )\r\n                        dispatch( listInProcessAC(listId, 'taskIsAdding', false) )\r\n                    })\r\n            }\r\n        })\r\n}\r\n\r\nexport const delTaskFromPage = (listId, taskId) => (dispatch, getState) => {\r\n    \r\n    // extract the target object from lists array & get all required parametrs\r\n    const targetList = getState().lists.find( (item) => item.id === listId )\r\n    const {page, filterValue, totalCount, countOnPage} = targetList\r\n    const tasksLength = targetList.tasks.length\r\n    const pagesCount = totalCount ? Math.ceil(totalCount/countOnPage) : 1\r\n    \r\n    dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', true) )\r\n    api.deleteTask(listId, taskId)\r\n            .then((Response) => {\r\n                if (Response.data.resultCode === 0) {\r\n                    // delete task from not last page\r\n                    if (tasksLength === 10 && page < pagesCount) {\r\n                        if (filterValue === 'All') {\r\n                            dispatch( setAllTasksPage(listId, page) )\r\n                        } else {\r\n                            const status = filterValue === 'Completed' ? 1 : 0\r\n                            dispatch( setFilteredPage(listId, page, status) )\r\n                        }\r\n                    } \r\n                    // delete last task from not first page\r\n                    if (tasksLength === 1 && page !== 1) {\r\n                        if (filterValue === 'All') {\r\n                            dispatch( setAllTasksPage(listId, page-1) )\r\n                        } else {\r\n                            const status = filterValue === 'Completed' ? 1 : 0\r\n                            dispatch( setFilteredPage(listId, page - 1, status) )\r\n                        }\r\n\r\n                    }\r\n                    // delete last task from first page\r\n                    if (tasksLength === 1 && page === 1 && filterValue !== 'All') {\r\n                        dispatch( setAllTasksPage(listId, 1) )\r\n                            .then(() => dispatch( setFilterValueAC(listId, 'All') ) )\r\n                    }\r\n                    // regular delete task case -> must be located at the end of chain\r\n                    if (filterValue === 'All') {\r\n                        dispatch( deleteTask(listId, taskId, page) )\r\n                    } else {\r\n                        dispatch( deleteFltrTask(listId, taskId, page) )\r\n                    }\r\n                }\r\n            }).then( () => dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', false) ) )\r\n}\r\n\r\n\r\nexport const updateTask = (listId, taskId, updateObj) => (dispatch, getState) => {\r\n\r\n    // extract the target object from lists array & get all required parametrs\r\n    const targetList = getState().lists.find( (item) => item.id === listId )\r\n    const { page, filterValue } = targetList\r\n    const tasksLength = targetList.tasks.length\r\n    const targetTask = targetList.tasks.find( (item) => item.id === taskId )\r\n    const updatedTask = { ...targetTask, ...updateObj }\r\n    \r\n    dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', true) )\r\n  \r\n    api.updateTask(listId, taskId, updatedTask)\r\n        .then(Response => {\r\n            if (Response.data.resultCode === 0) {\r\n                if (filterValue === 'All') {\r\n                    dispatch(updateTaskAC(Response.data.data.item))\r\n                } else {\r\n                    api.getAllTasks(listId)\r\n                        .then((Response) => {\r\n                            if (!Response.data.error) {\r\n                                const tasks = Response.data.items;\r\n                                const status = filterValue === 'Completed' ? 1 : 0\r\n                                // set previous filtered page\r\n                                if (tasksLength === 1 && page !== 1 && updateObj.status !== undefined) {\r\n                                    dispatch(setFltrTasksPage(listId, page - 1, tasks, status))\r\n                                } else if (tasksLength === 1 && page === 1 && updateObj.status !== undefined) {\r\n                                        dispatch(setAllTasksPage(listId, 1))\r\n                                        dispatch(setFilterValueAC(listId, 'All'))\r\n                                } else\r\n                                    dispatch(setFltrTasksPage(listId, page, tasks, status))\r\n                            }\r\n                        })\r\n                }\r\n            }\r\n        }).then( () => dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', false) ) )\r\n}","import React from 'react';\r\n\r\n\r\nconst Preloader = ({ height, width, fill, ...userStyles }) => {\r\n\r\n    const currentWidth = () => {\r\n        if ( width ) return width\r\n        if ( !width && height ) {\r\n            const wNum = +height.slice(0, height.indexOf('p'))*3.65\r\n            return (wNum+'px')\r\n        }\r\n        if ( !width && !height ) return '252px'\r\n    }\r\n    \r\n    const currentHeight = () => {\r\n        if ( height ) return height\r\n        if ( !height && width ) {\r\n            const hNum = +width.slice(0, width.indexOf('p'))*0.27\r\n            return (hNum+'px')\r\n        }\r\n        if ( !height && !width ) return '69px'\r\n    }\r\n\r\n    const loaderStyle = {\r\n        ...userStyles,\r\n        width: currentWidth(),\r\n        height: currentHeight()\r\n    };\r\n      \r\n    return(\r\n            <svg svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" version=\"1.0\" viewBox=\"0 0 128 35\" space=\"preserve\" style={loaderStyle}>\r\n                <g><circle fill={fill} cx=\"17.5\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.167;0.5;0.668;1\" values=\"0.3;1;1;0.3;0.3\"/></g>\r\n                <g><circle fill={fill} cx=\"110.5\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.334;0.5;0.835;1\" values=\"0.3;0.3;1;1;0.3\"/></g>\r\n                <g><circle fill={fill} cx=\"64\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.167;0.334;0.668;0.835;1\" values=\"0.3;0.3;1;1;0.3;0.3\"/></g>\r\n            </svg>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './ListTitle.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { deleteList, updateListTitle } from '../../../../Redux/reducer';\r\nimport Preloader from '../../../Preloader/Preloader';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ListTitle extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: '',\r\n        inputError: false,\r\n    }\r\n\r\n    deleteList = () => {\r\n        this.props.deleteList(this.props.listId)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    updateListTitle = (title) => {\r\n        if (!title.match(/%/)) {\r\n            this.props.updateListTitle(this.props.listId, title)\r\n            if (this.props.history.location.pathname !== '/') {\r\n                this.props.history.push(`/${title.replace(/\\s|\\?|#/g, '-')}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    setEditMode = () => this.setState({ editMode: true, title: this.props.title })\r\n    setDisplayMode = () => {\r\n        if (this.state.inputError) this.setState({ inputError: false })\r\n        this.setState({ editMode: false })\r\n    }\r\n\r\n    editListTitle = (e) => {\r\n        const newTitle = e.currentTarget.value;\r\n        if (this.state.inputError) this.setState({ inputError: false });\r\n        if (newTitle.trim() === '' || newTitle.length > 100 || newTitle.match(/%/)) {\r\n            this.setState({ title: newTitle, inputError: true })\r\n        } else this.setState({ title: newTitle })\r\n    }\r\n\r\n    setTitleOnKey = (e) => {\r\n        const title = e.currentTarget.value;\r\n        if (e.key === 'Enter' && !this.state.inputError) {\r\n            this.setDisplayMode()\r\n            this.updateListTitle(title);\r\n        }\r\n        if (e.keyCode === 27) {\r\n            this.setDisplayMode()\r\n            if (this.state.inputError) this.setState({ inputError: false })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const loaderStyle = {\r\n            fill: 'rgb(143, 59, 26)', height: '10px', position: 'absolute', bottom: '-12px', right: '50%'\r\n        }\r\n\r\n        if (this.state.editMode) {\r\n            return (\r\n                <div className={styles.list_header_title__input}>\r\n                    <input type=\"text\"\r\n                        value={this.state.title}\r\n                        className={this.state.inputError ? styles.error : ''}\r\n                        onChange={this.editListTitle}\r\n                        autoFocus={true}\r\n                        onBlur={this.setDisplayMode}\r\n                        onKeyDown={this.setTitleOnKey} />\r\n                    <button className={styles.delete_button} onClick={this.deleteList}>\r\n                        <i className='fa fa-close'></i></button>\r\n                </div>\r\n            )\r\n        } else return (\r\n            <div className={styles.list_header_title}>\r\n                <span onClick={this.setEditMode}>{this.props.title} &nbsp;</span>\r\n                <button className={styles.delete_button} onClick={this.deleteList} \r\n                    disabled={this.props.listDeliting}><i className='fa fa-close'></i></button>\r\n                {(this.props.listDeliting || this.props.titleUpdating)\r\n                    && <Preloader {...loaderStyle} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose (\r\n    connect(null, { deleteList, updateListTitle }),\r\n    withRouter\r\n)(ListTitle)","import React from 'react';\r\nimport styles from './ListHeader.module.css'\r\nimport { connect } from 'react-redux';\r\nimport AddItemForm from '../../AddItemForm/AddItemForm';\r\nimport ListTitle from './ListTitle/ListTitle';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport { addTask, addTaskActive, setTasksPage, \r\n        setFilterValue, setAllTasksPage } from '../../../Redux/reducer';\r\n\r\nclass ListHeader extends React.Component {\r\n\r\n    state = {\r\n        maxTasksCount: 33\r\n    }\r\n\r\n\r\n    addTask = (title) => {\r\n        const { listId, filterValue, taskIsAdding } = this.props;\r\n\r\n        if ( (filterValue === 'Completed' || filterValue === 'All') && !taskIsAdding )  {\r\n            this.props.addTask(listId, title)\r\n        }\r\n\r\n        if (filterValue === 'Active' && !taskIsAdding) {\r\n            this.props.addTaskActive(listId, title)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {listId, title, page, totalCount, filterValue,\r\n            generalCount, listDeliting, titleUpdating, taskIsAdding} = this.props\r\n        const { maxTasksCount } = this.state\r\n        const totalTasksCount = filterValue === 'All' ? totalCount : generalCount\r\n        const loaderStyle ={\r\n            fill: 'rgb(143, 59, 26)', height: '8px', position: 'absolute', right: '-3px', top: '5px'}\r\n\r\n        return (\r\n            <div className={styles.list_header}>\r\n                <ListTitle listId={listId} title={title} page={page} \r\n                listDeliting={listDeliting} titleUpdating={titleUpdating} />\r\n{/* форма добавления задач */}\r\n                { totalTasksCount < maxTasksCount \r\n                    && <div className={styles.list_header_add_form}>\r\n                        <AddItemForm\r\n                            placeholder='Add new task'\r\n                            listId={listId}\r\n                            addItem={this.addTask} />\r\n                        {taskIsAdding && <Preloader {...loaderStyle} />}\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mdtp = { \r\n    addTask, addTaskActive, setTasksPage, \r\n    setFilterValue, setAllTasksPage\r\n}\r\n\r\nexport default \r\n    connect(null, mdtp )(ListHeader);\r\n\r\n","import React, { useState } from 'react'\r\nimport styles from './TaskPriority.module.css'\r\n\r\n\r\nconst TaskPriority = (props) => {\r\n\r\n    const [editMode, setMode ] = useState(false)\r\n\r\n    const setTaskPriority = (e) => {\r\n        const priority = priorityArray.findIndex((prior) => prior === e.currentTarget.value);\r\n        props.updateTask({ priority });\r\n        resetEditMode()\r\n    }\r\n\r\n    const priorityArray = ['Low', 'Middle', 'High', 'Urgent', 'Later']\r\n\r\n    const priorityOptions = priorityArray.map(prior =>\r\n        <option className={styles[prior]} key={prior} >{prior}</option>)\r\n\r\n    const getTaskPriority = () => priorityArray[props.priority]\r\n    const getTaskPriorityStyle = () => styles[ priorityArray[props.priority] ]\r\n\r\n    const setEditMode = () => setMode(true)\r\n    const resetEditMode = () => setMode(false)\r\n\r\n    const priorityOnKey = (e) => { if (e.keyCode === 27) resetEditMode() }\r\n\r\n    if (!editMode) {\r\n        return (\r\n            <span onClick={setEditMode} className={getTaskPriorityStyle()}>\r\n                {getTaskPriority()} &nbsp;\r\n            </span>\r\n        )\r\n    } else {\r\n        return (\r\n            <select\r\n                defaultValue={getTaskPriority()}\r\n                className={getTaskPriorityStyle()}\r\n                onChange={setTaskPriority}\r\n                onBlur={resetEditMode}\r\n                onKeyDown={priorityOnKey}\r\n                autoFocus={true} > {priorityOptions} </select>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskPriority","import React, { useState } from 'react'\r\nimport styles from './TaskTitle.module.css'\r\n\r\n\r\nconst TaskTitle = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [title, setTitle] = useState('')\r\n    const [inputError, setError] = useState(false)\r\n\r\n\r\n    const setTitleEditMode = () => {\r\n        setEditMode(true)\r\n        setTitle(props.title)\r\n    }\r\n\r\n    const setDisplayMode = () => {\r\n        if (inputError) setError(false)\r\n        setEditMode(false)\r\n    }\r\n\r\n    const editTaskTitle = (e) => {\r\n        const newTitle = e.currentTarget.value;\r\n        if (inputError) setError(false)\r\n        if (newTitle.trim() === '' || newTitle.length > 100) {\r\n            setTitle(newTitle)\r\n            setError(true)\r\n        } else setTitle(newTitle)\r\n    }\r\n\r\n    const setTitleOnKey = (e) => {\r\n        const title = e.currentTarget.value;\r\n        if (e.key === 'Enter' && !inputError) {\r\n            props.updateTask({ title });\r\n            setDisplayMode()\r\n        }\r\n        if (e.keyCode === 27) {\r\n            setDisplayMode()\r\n            if (inputError) setError(false)\r\n        }\r\n    }\r\n\r\n\r\n    if (!editMode) {\r\n        return (\r\n            <span onClick={setTitleEditMode} >{props.title}, </span>\r\n        )\r\n    } else {\r\n        return (\r\n            <input type=\"text\"\r\n                value={title}\r\n                className={inputError ? styles.error : ''}\r\n                onChange={editTaskTitle}\r\n                autoFocus={true}\r\n                onBlur={setDisplayMode}\r\n                onKeyDown={setTitleOnKey} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskTitle","import React from 'react'\r\nimport styles from './ListTask.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { delTaskFromPage, updateTask } from '../../../../Redux/reducer'\r\nimport Preloader from '../../../Preloader/Preloader'\r\nimport TaskPriority from './TaskPriority/TaskPriority';\r\nimport TaskTitle from './TaskTitle/TaskTitle';\r\n\r\n\r\n\r\nconst ListTask = (props) => {\r\n\r\n    const { id: taskId, status, renderIndex, priority, title, taskInProcess } = props.task\r\n    const { listId} = props\r\n\r\n    const deleteTask = () => props.delTaskFromPage(listId, taskId)\r\n\r\n    const updateTask = (updateObj) => props.updateTask(listId, taskId, updateObj)\r\n\r\n    const setTaskStatus = (e) => {\r\n        const completed = e.currentTarget.checked ? 1 : 0  // completed server module is no longer supported,\r\n        updateTask({ status: completed })              // so status server module is used\r\n    }\r\n\r\n    const loaderStyle = { fill: 'rgb(143, 59, 26)', height: '8px' }\r\n\r\n    return (\r\n        <div className={styles.todoList_task}>\r\n            <div className={status ? styles.taskIsDone : ''}>\r\n                {/* чекбокс */}\r\n                <input\r\n                    onChange={setTaskStatus}\r\n                    type=\"checkbox\"\r\n                    checked={status} />\r\n                <span> {renderIndex} - </span>\r\n\r\n                <TaskTitle title={title} updateTask={updateTask} />\r\n                <TaskPriority priority={priority} updateTask={updateTask} />\r\n\r\n                {/* кнопка delete */}\r\n                <button className={styles.delete_button} onClick={deleteTask}\r\n                    disabled={taskInProcess}>\r\n                    <i className='fa fa-close'></i></button>\r\n\r\n                {taskInProcess && <Preloader {...loaderStyle} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, {updateTask, delTaskFromPage})(ListTask);\r\n\r\n","import React from 'react'\r\nimport styles from './ListTasks.module.css'\r\nimport ListTask from './ListTask/ListTask'\r\n\r\nconst ListTasks = ({ tasks, countOnPage, ...restProps}) => {\r\n\r\n    const tasksLength = tasks.length;\r\n\r\n    const tasksArray = tasks.filter(( task, index ) => index < countOnPage )\r\n    .map((task) => \r\n        <ListTask key={task.id} task={task} tasksLength={tasksLength} { ...restProps } /> \r\n    );\r\n\r\n\r\n    return (\r\n        <div className={styles.todoList_Tasks}>\r\n            {tasksArray}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ListTasks;\r\n\r\n","import React from 'react'\r\nimport Preloader from '../../Preloader/Preloader'\r\nimport styles from './ListFooter.module.css'\r\n\r\nconst ListFooter = (props) => {\r\n\r\n    const { isHidden, inProcess, filterValue, pagesCount, pagesLinks,\r\n            hideOnButtonClick, showOnButtonClick, getTasks } = props\r\n        \r\n        const buttonAll = filterValue === 'All' ? styles.filter_active : ''\r\n        const buttonActive = filterValue === 'Active' ? styles.filter_active : ''\r\n        const buttonCompleted = filterValue === 'Completed' ? styles.filter_active : ''\r\n        const loaderStyle ={\r\n            fill: 'rgb(143, 59, 26)', height: '10px', position: 'absolute', top: '5px', right: '5px'}\r\n        \r\n        const getAllTasks = () => getTasks('All')\r\n        const getCompletedTasks = () => getTasks('Completed')\r\n        const getActiveTasks = () => getTasks('Active')\r\n\r\n        return (\r\n            <div className={styles.todoList_footer}>\r\n                {pagesCount > 1 && \r\n                    <div className={styles.tasksPagesLinks}>{ pagesLinks }</div>}\r\n                {!isHidden &&\r\n                    <div className={styles.filter_buttons}>\r\n                        <button onClick={ getAllTasks } \r\n                            className={buttonAll} disabled={inProcess}>All</button>\r\n                        <button onClick={ getCompletedTasks } \r\n                            className={buttonCompleted} disabled={inProcess}>Completed</button>\r\n                        <button onClick={ getActiveTasks } \r\n                            className={buttonActive} disabled={inProcess}>Active</button>\r\n                        { inProcess && <Preloader {...loaderStyle} /> }\r\n                    </div>\r\n                }\r\n                {!isHidden && <span onClick={ hideOnButtonClick } >Hide</span>}\r\n                {isHidden && <span onClick={ showOnButtonClick } >Show</span>}\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\n\r\nexport default ListFooter\r\n\r\n","import React from 'react'\r\nimport styles from './ListFooter.module.css'\r\nimport { setTasksPage, setFilterValue, setFilteredPage, setAllTasksPage } from '../../../Redux/reducer'\r\nimport { connect } from 'react-redux';\r\nimport ListFooter from './ListFooter'\r\n\r\n\r\nclass ListFooterContainer extends React.Component {\r\n\r\n    state = {\r\n        isHidden: false,\r\n        inProcess: false\r\n    }\r\n\r\n    showOnButtonClick = () => { this.setState({ isHidden: false }) }\r\n    hideOnButtonClick = () => { this.setState({ isHidden: true }) }\r\n\r\n    getTasks = (filterValue) => {\r\n        const { listId, setFilterValue } = this.props\r\n        setFilterValue(listId, filterValue)\r\n            .then( () => this.setTasksPage(1) )\r\n    }\r\n\r\n    setTasksPage = (page) => {\r\n        const { listId, setFilteredPage, setAllTasksPage } = this.props;\r\n        this.setState({inProcess: true});\r\n\r\n        switch (this.props.filterValue) {\r\n            \r\n            case 'Active':\r\n                setFilteredPage(listId, page, 0)   // status = 0\r\n                    .then(() => this.setState({ inProcess: false }) )\r\n            break\r\n\r\n            case 'Completed':\r\n                setFilteredPage(listId, page, 1)   // status = 1\r\n                    .then(() => this.setState({ inProcess: false }) )\r\n            break\r\n\r\n            default:\r\n                setAllTasksPage(listId, page)\r\n                this.setState({ inProcess: false })\r\n        }\r\n    }\r\n\r\n    getPagesCount = () => {\r\n        const { totalCount, countOnPage } = this.props\r\n            return totalCount ? Math.ceil(totalCount / countOnPage) : 1\r\n    }\r\n\r\n    getPagesLinks = () => {\r\n        const {page} = this.props;\r\n        const pagesLinks = []\r\n        for ( let i = 1; i <= this.getPagesCount(); i++ ) {\r\n            const pageLink = <span \r\n                    className={ i === page ? `${styles.pageLink} ${styles.active}` : styles.pageLink} \r\n                    style={{ 'cursor': 'pointer' }} key={i}\r\n                    onClick={() => this.setTasksPage(i)} >{i}\r\n                </span>\r\n            pagesLinks.push(pageLink)\r\n        }\r\n        return pagesLinks\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ListFooter \r\n                isHidden={this.state.isHidden}\r\n                inProcess={this.state.inProcess}\r\n                filterValue={this.props.filterValue}\r\n                pagesCount={this.getPagesCount()}\r\n                pagesLinks={this.getPagesLinks()}\r\n                getTasks={this.getTasks}\r\n                hideOnButtonClick={this.hideOnButtonClick}\r\n                showOnButtonClick={this.showOnButtonClick}\r\n            />\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mdtp = { setTasksPage, setFilterValue, setFilteredPage, setAllTasksPage }\r\n\r\nexport default connect(null, mdtp )(ListFooterContainer)\r\n","import React from 'react'\r\nimport styles from './TodoList.module.css'\r\nimport ListHeader from './ListHeader/ListHeader'\r\nimport ListTasks from './ListTasks/ListTasks'\r\nimport ListFooterContainer from './ListFooter/ListFooterContainer'\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.restoreTasks(this.props.list.id)\r\n    }\r\n\r\n    \r\n    render = () => {\r\n        const { title, id, page, totalCount, countOnPage, tasks, generalCount, \r\n                listDeliting, titleUpdating, taskIsAdding, filterValue } = this.props.list;\r\n        return (\r\n            <div className={styles.todoList}>\r\n                <section className={styles.todoList_main}>\r\n                    <ListHeader \r\n                        title = { title } \r\n                        listId = { id }\r\n                        filterValue = { filterValue }\r\n                        page = { page }\r\n                        generalCount = {generalCount}\r\n                        totalCount={totalCount} \r\n                        listDeliting = {listDeliting}\r\n                        titleUpdating={titleUpdating} \r\n                        taskIsAdding={taskIsAdding} />\r\n                    <ListTasks\r\n                        tasks={tasks}\r\n                        listId={id}\r\n                        page={page}\r\n                        countOnPage={countOnPage}\r\n                        filterValue={filterValue}\r\n                    />\r\n                </section>\r\n                <ListFooterContainer \r\n                    listId={id}\r\n                    page = {page}\r\n                    filterValue = { filterValue }\r\n                    countOnPage ={ countOnPage }\r\n                    totalCount={totalCount} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styles from './Error404.module.css'\r\n\r\n\r\nconst Error404 = (props) => {\r\n    return(\r\n        <div className={styles.error404}>\r\n            <h3>No match for <code>\"{props.location.pathname}\"</code>. Please, check URL.</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Error404);","import React from 'react';\r\nimport styles from './App.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, Route, withRouter, Switch } from 'react-router-dom';\r\nimport TodoList from './TodoList/TodoList';\r\nimport AddItemForm from './AddItemForm/AddItemForm';\r\nimport Preloader from './Preloader/Preloader';\r\nimport {restoreLists, restoreTasks, addList} from '../Redux/reducer';\r\nimport book from '../Assets/img/book.png';\r\nimport { compose } from 'redux';\r\nimport Error404 from './Error404/Error404';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.restoreLists()\r\n    }\r\n\r\n    addList = (title) => {\r\n        if (!title.match(/%/)) {\r\n            this.props.addList(title)\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    restoreTasks = (listId) => this.props.restoreTasks(listId)\r\n\r\n\r\n    render() {\r\n        const listsRoutes = this.props.lists.map((list) =>{\r\n            const path = list.title.replace(/\\s|\\?|#/g, '-')\r\n            return (\r\n            <Route path={`/${path}`} exact key={list.id} render={() => \r\n                <TodoList list={list} key={list.id} restoreTasks={this.restoreTasks} />} \r\n            />) \r\n        })\r\n\r\n        const allLists = this.props.lists.map( (list) => \r\n            <TodoList list={list} key={list.id} restoreTasks={this.restoreTasks} /> )\r\n\r\n        const allListsLinks = this.props.lists.map( ( list ) => {\r\n            const link = list.title.replace(/\\s|\\?|#/g, '-')\r\n            return(\r\n                <li key={list.id}><NavLink to={`/${link}`}>{list.title}</NavLink></li>\r\n            )\r\n        } )\r\n\r\n        const preloaderStyles = {\r\n            position: 'absolute', height: '12px', top: '1.75em', right: '34%', fill: 'white'\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={styles.app}>\r\n                <div className={styles.app_header}>\r\n                    { this.props.listsLoading && <Preloader {...preloaderStyles}/>\r\n                    }\r\n                    <NavLink to='/' exact className={styles.app_title}>\r\n                        <h2>\r\n                            <img src={book} alt='book' className={styles.app_header_icon} />\r\n                            Tasks Organizer\r\n                        </h2>\r\n                    </NavLink>\r\n                    {this.props.lists.length < this.props.maxListsCount \r\n                        && <AddItemForm addItem={this.addList} placeholder='Add list' />}\r\n                </div>\r\n                <nav className={styles.app_header_navigation}>\r\n                    <ul>{allListsLinks}</ul>\r\n                </nav>\r\n                <div className={styles.app_lists}>\r\n                    <Switch>\r\n                        {listsRoutes}\r\n                        <Route path='/' exact>{allLists}</Route>\r\n                        <Route component={Error404} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        lists: state.lists,\r\n        listsLoading: state.listsProgress.listsLoading,\r\n        maxListsCount: state.maxListsCount\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {restoreLists, restoreTasks ,addList}),\r\n    withRouter\r\n)(App);","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport reducer from './reducer';\r\n\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(ThunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './UI/App';\r\nimport store from './Redux/store';\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store = {store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}