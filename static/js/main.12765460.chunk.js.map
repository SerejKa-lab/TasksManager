{"version":3,"sources":["UI/TodoList/ListFooter/StatusFilter/StatusFilter.module.css","UI/App.module.css","UI/TodoList/ListFooter/ListOrder/ListOrder.module.css","UI/AddItemForm/AddItemForm.module.css","UI/TodoList/ListTasks/ListTask/ListTask.module.css","UI/TodoList/ListHeader/ListHeader.module.css","UI/TodoList/ListHeader/ListTitle/ListTitle.module.css","UI/TodoList/ListFooter/PagesLinks/PagesLinks.module.css","UI/TodoList/ListTasks/ListTask/TaskPriority/TaskPriority.module.css","UI/TodoList/TodoList.module.css","UI/TodoList/ListTasks/ListTask/TaskTitle/TaskTitle.module.css","UI/TodoList/ListTasks/ListTasks.module.css","UI/TodoList/ListTasks/ListTask/TaskOrder/TaskOrder.module.css","UI/TodoList/ListFooter/ListFooter.module.css","Assets/img/book.png","UI/Error404/Error404.module.css","UI/AddItemForm/Tooltip.js","UI/AddItemForm/AddItemForm.js","API/api.js","Redux/reducer.js","UI/Preloader/Preloader.js","UI/TodoList/ListHeader/ListTitle/ListTitle.js","UI/TodoList/ListHeader/ListHeader.js","UI/TodoList/ListTasks/ListTask/TaskPriority/TaskPriority.js","UI/TodoList/ListTasks/ListTask/TaskTitle/TaskTitle.js","UI/TodoList/ListTasks/ListTask/TaskOrder/TaskOrder.js","UI/TodoList/ListTasks/ListTask/ListTask.js","UI/TodoList/ListTasks/ListTasks.js","UI/TodoList/ListFooter/ListOrder/ListOrder.js","UI/TodoList/ListFooter/StatusFilter/StatusFilter.js","UI/TodoList/ListFooter/PagesLinks/PagesLinks.js","UI/TodoList/ListFooter/ListFooter.js","UI/TodoList/TodoList.js","UI/Error404/Error404.js","UI/App.js","Redux/store.js","index.js"],"names":["module","exports","Tooltip","props","useState","display","setDisplay","tooltipStyle","styles","tooltip","isHidden","className","onClick","hint","AddItemForm","state","inputError","itemTitle","setItemTitle","e","setState","currentTarget","value","newTitle","validationFunc","addItem","actionOnBlur","validationResult","actionOnKey","key","keyCode","newItemForm","this","error","onChange","onKeyDown","onBlur","autoFocus","type","placeholder","React","Component","instance","Axios","create","baseURL","withCredentials","headers","api","get","listId","title","put","post","putAfterItemId","delete","page","taskId","dataObj","initialState","lists","listsOrder","listsProgress","listsLoading","maxListsCount","reducer","action","countOnPage","renderBasis","RESTORE_LISTS","map","list","index","tasks","order","filterValue","ALL_S","footerProcessing","id","ADD_LIST","extendedList","UPDATE_LIST_TITLE","REORDER_LIST","reorderedLists","DELETE_LIST","filter","LIST_IS_LOADING","LIST_IN_PROCESS","process","SET_FILTER_VALUE","RESTORE_TASKS","totalCount","tasksOrder","task","renderIndex","SET_TASKS_PAGE","SET_TASKS_ORDER","DELETE_TASK","UPDATE_TASK","todoListId","TASK_IN_PROCESS","SET_FLTR_TASKS_PAGE","status","length","newTasksOrder","generalCount","DELETE_FLTR_TASK","SET_PREV_ACT_ID","prevActiveId","listIsLoadingAC","listInProcessAC","setTasksPageAC","taskInProcessAC","COMPLETED","statusObj","setFilterValueAC","setPrevActId","setFilteredPageAC","setFilteredPage","dispatch","then","Response","data","items","setAllTasksPage","getState","find","res","setTasksOrder","setTasksPage","Preloader","height","width","fill","userStyles","loaderStyle","slice","indexOf","svg","xmlns","xlink","version","viewBox","space","style","cx","cy","r","attributeName","dur","begin","repeatCount","keyTimes","values","ListTitle","editMode","updateListTitle","match","history","location","pathname","push","replace","setEditMode","setDisplayMode","editListTitle","equalTitles","listTitles","el","toLowerCase","trim","setTitleOnKey","list_title__input","list_title","listDeliting","titleUpdating","position","bottom","right","compose","connect","resultCode","updateListTitleAC","withRouter","ListHeader","maxTasksCount","deleteList","addTask","taskIsAdding","addTaskActive","totalTasksCount","list_header","list_header_add_form","delete_button","mdtp","item","deleteListAC","TaskPriority","setMode","priorityArray","priorityOptions","prior","getTaskPriority","priority","getTaskPriorityStyle","taskPriority","resetEditMode","defaultValue","findIndex","updateTask","TaskTitle","setTitle","setError","taskTitle","reorderTask","currPos","nextRenderPos","nextPos","undefined","targerList","getAfterId","console","log","t","currId","i","getTasksOrder","Math","ceil","response","tasksCount","selectMode","resetMode","optionArr","getOptions","taskOrder","updateObj","targetList","tasksLength","targetTask","updatedTask","delTaskFromPage","pagesCount","deleteTask","deleteFltrTask","taskInProcess","todoList_task","taskIsDone","isDoneCheck","completed","checked","ListTasks","restProps","tasksArray","listTasks","ListOrder","handleClickOutside","showOrder","toggleMode","reorderOnClick","reorderList","listsCount","pagesArr","numberStyle","orderNumber","active","getPagesArr","orderBtnStyle","pressed","listOrder","orderBox","currList","getReorderedLists","reorderListAC","onClickOutside","StatusFilter","toggleOnClick","setFilterValue","buttonAll","buttonActive","buttonCompleted","filterButtonStyle","frontButton","statusFilter","ACTIVE","filterButtons","disabled","l","setDisabled","useEffect","tasksPagesLinks","pagesLinks","disabledValue","linkStyle","pageLink","getPagesLinks","list_footer","TodoList","render","todoList","todoList_wrapper","restoreTasks","error404","App","restoreLists","listsRoutes","path","exact","allLists","allListsLinks","link","to","app","app_header","top","app_title","src","book","alt","app_header_icon","app_addItemForm","addList","app_header_navigation","app_lists","component","Error404","restoreTasksAC","store","createStore","composeWithDevTools","applyMiddleware","ThunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.12765460.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusFilter\":\"StatusFilter_statusFilter__3SB93\",\"pressed\":\"StatusFilter_pressed__1w_GI\",\"filterButtons\":\"StatusFilter_filterButtons__2KFkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3Uwog\",\"app_title\":\"App_app_title___CSMS\",\"active\":\"App_active__2jTm6\",\"app_addItemForm\":\"App_app_addItemForm__3kjE9\",\"app_header\":\"App_app_header__2ML7u\",\"app_header_navigation\":\"App_app_header_navigation__2sBXL\",\"app_lists\":\"App_app_lists__XJiJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listOrder\":\"ListOrder_listOrder__3DpKe\",\"pressed\":\"ListOrder_pressed__2Ajuu\",\"orderBox\":\"ListOrder_orderBox__1W92q\",\"orderNumber\":\"ListOrder_orderNumber__SESdU\",\"active\":\"ListOrder_active__1HKTR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newItemForm\":\"AddItemForm_newItemForm__3gOv1\",\"error\":\"AddItemForm_error__3PDJ1\",\"tooltip\":\"AddItemForm_tooltip__1spJD\",\"isHidden\":\"AddItemForm_isHidden__20OF5\",\"delete_button\":\"AddItemForm_delete_button__2221V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList_task\":\"ListTask_todoList_task__3IMxd\",\"taskIsDone\":\"ListTask_taskIsDone__2i1Al\",\"delete_button\":\"ListTask_delete_button__2ymOr\",\"isDoneCheck\":\"ListTask_isDoneCheck__2OTrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_header\":\"ListHeader_list_header__zEOiY\",\"list_header_add_form\":\"ListHeader_list_header_add_form__24FzJ\",\"delete_button\":\"ListHeader_delete_button__1N4Pl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_title__input\":\"ListTitle_list_title__input__3Aoo0\",\"error\":\"ListTitle_error__3wcGy\",\"list_title\":\"ListTitle_list_title__s4OXq\",\"tooltip\":\"ListTitle_tooltip__1tuiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksPagesLinks\":\"PagesLinks_tasksPagesLinks__2PUSo\",\"pageLink\":\"PagesLinks_pageLink__10VUZ\",\"active\":\"PagesLinks_active__T9EFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskPriority\":\"TaskPriority_taskPriority__2ACAr\",\"Middle\":\"TaskPriority_Middle__1hwuy\",\"Low\":\"TaskPriority_Low__3JO7V\",\"High\":\"TaskPriority_High__3FfI-\",\"Urgent\":\"TaskPriority_Urgent__2y1eq\",\"Later\":\"TaskPriority_Later__NpmW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList_wrapper\":\"TodoList_todoList_wrapper__17l1B\",\"todoList\":\"TodoList_todoList__XmGvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskTitle\":\"TaskTitle_taskTitle__2cTEe\",\"error\":\"TaskTitle_error__3WKI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listTasks\":\"ListTasks_listTasks__q-a1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskOrder\":\"TaskOrder_taskOrder__13iIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_footer\":\"ListFooter_list_footer__qaFYD\"};","module.exports = __webpack_public_path__ + \"static/media/book.6d8795b6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404\":\"Error404_error404__1VnlC\"};","import React, { useState } from 'react'\r\nimport styles from './AddItemForm.module.css'\r\n\r\n\r\nconst Tooltip = (props) => {\r\n\r\n    const [display, setDisplay] = useState(true)\r\n    const hideToollip = () => setDisplay(false)\r\n\r\n    const tooltipStyle = display ? styles.tooltip : styles.isHidden\r\n\r\n    return(\r\n        <div className={tooltipStyle} onClick={hideToollip}>\r\n            {props.hint}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tooltip","import React from 'react'\r\nimport styles from './AddItemForm.module.css'\r\nimport Tooltip from './Tooltip';\r\n\r\nclass AddItemForm extends React.Component {\r\n\r\n    state = {\r\n        inputError: false,\r\n        itemTitle: ''\r\n    }\r\n\r\n    setItemTitle = (e) => {\r\n        if (this.state.inputError) this.setState({ inputError: false });\r\n        this.setState({ itemTitle: e.currentTarget.value }, () => {\r\n            const newTitle = this.state.itemTitle\r\n            const validationResult = this.props.validationFunc \r\n                ? this.props.validationFunc(newTitle) : null\r\n            if (validationResult)\r\n                this.setState({ inputError: true })\r\n        });\r\n    }\r\n\r\n    addItem = () => {\r\n        if (this.state.itemTitle === '') this.setState({ inputError: true })\r\n        else\r\n            if (!this.state.inputError) {\r\n                this.props.addItem(this.state.itemTitle);\r\n                this.setState({ itemTitle: '' })\r\n            }\r\n    }\r\n\r\n    actionOnBlur = () => {\r\n        const validationResult = this.props.validationFunc \r\n                ? this.props.validationFunc(this.state.itemTitle) : null\r\n        if (this.state.inputError && !validationResult) {\r\n            this.setState({ inputError: false })\r\n        }\r\n    }\r\n\r\n    actionOnKey = (e) => { \r\n        if (e.key === 'Enter') this.addItem()\r\n        if ( e.keyCode === 27 ) {\r\n            this.setState({ itemTitle: '', inputError: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.newItemForm}>\r\n                <input\r\n                    className={this.state.inputError ? styles.error : ''}\r\n                    onChange={this.setItemTitle}\r\n                    onKeyDown={this.actionOnKey}\r\n                    onBlur={this.actionOnBlur}\r\n                    autoFocus={true}\r\n                    type=\"text\" placeholder={this.props.placeholder} value={this.state.itemTitle} />\r\n\r\n                <button onClick={this.addItem} >Add</button>\r\n                \r\n                { this.state.inputError && <Tooltip hint={this.props.hint} /> }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItemForm;","import Axios from 'axios';\r\n\r\n\r\nconst instance = Axios.create({ \r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/todo-lists',\r\n    withCredentials: true,\r\n    headers: { 'API-KEY': '5deaa5a9-bfea-4e80-bac8-d313181506e0' }\r\n })\r\n\r\nexport const api = {\r\n\r\n    restoreLists() {\r\n        return instance.get('')\r\n    },\r\n\r\n    updateListTitle( listId, title ) {\r\n        return instance.put(`/${listId}`, {title} )\r\n    },\r\n\r\n    addList(title) {\r\n        return instance.post('', { title } )\r\n    },\r\n\r\n    reorderList(listId, putAfterItemId) {\r\n        return instance.put(`/${listId}/reorder`, { putAfterItemId })\r\n    },\r\n\r\n    deleteList(listId) {\r\n        return instance.delete(`/${listId}`)\r\n    },\r\n\r\n    getTasks(listId, count = 10) {\r\n        return instance.get(`/${listId}/tasks?count=${count}`)\r\n    },\r\n\r\n    getAllTasks(listId) {\r\n        return instance.get(`/${listId}/tasks?count=100`)\r\n    },\r\n\r\n    getTasksOnPage(listId, page = 1) {\r\n        return instance.get(`/${listId}/tasks?count=10&page=${page}`)\r\n    },\r\n\r\n    addTask(listId, title) {\r\n        return instance.post(`/${listId}/tasks`, {title} )\r\n    },\r\n\r\n    updateTask(listId, taskId, dataObj) {\r\n        return instance.put(`/${listId}/tasks/${taskId}`, { ...dataObj } )\r\n    },\r\n\r\n    deleteTask(listId, taskId) {\r\n        return instance.delete(`/${listId}/tasks/${taskId}`)\r\n    },\r\n\r\n    reorderTask(listId, taskId, putAfterItemId) {\r\n        return instance.put(`/${listId}/tasks/${taskId}/reorder`, {putAfterItemId})\r\n    }\r\n}","import {api} from '../API/api'\r\n\r\nconst initialState =  {\r\n    lists: [],  \r\n    listsOrder: [],\r\n    listsProgress: { listsLoading: false },\r\n    maxListsCount: 10\r\n    /* lists: [\r\n        {\r\n            id: 0, title: 'Спорт', nextTaskId: 2, totalCount: 1, countOnPage: 10, filterValue: ALL_S,\r\n            page: 1, titleUpdating: false, taskIsAdding: false, listDeliting: false, footerProcessing: false,\r\n            tasksOrder: [], prevActiveID: 'some_id'\r\n            tasks: [{ id: 1, title: 'CSS', status: 0, priority: 'Middle', taskDeliting: false}]\r\n        }\r\n    ] */\r\n    };\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    const countOnPage = 10;\r\n    const renderBasis = (action.page - 1)*countOnPage +1;\r\n\r\n    switch (action.type) {\r\n\r\n  // ---------------------------List Reducers -------------------------------\r\n        \r\n        case RESTORE_LISTS:\r\n            return {\r\n                ...state,\r\n                lists: action.lists.map( (list, index) => {\r\n                    if (!list.tasks) return(\r\n                        { ...list, order: index, page: 1, countOnPage, filterValue: ALL_S, tasks: [],\r\n                            footerProcessing: false } \r\n                    )\r\n                    else return (\r\n                        { ...list, order: index, page: 1, countOnPage, filterValue: ALL_S,\r\n                            footerProcessing: false }\r\n                    )\r\n                } ),\r\n                listsOrder: action.lists.map( (list) => list.id )\r\n            }\r\n\r\n        case ADD_LIST:\r\n            const extendedList = { ...action.list, page: 1, countOnPage, filterValue: ALL_S, tasks: [] };\r\n            return {\r\n                ...state,\r\n                lists: [ extendedList, ...state.lists ].map((list, index) => ({...list, order: index}))\r\n            }\r\n\r\n        case UPDATE_LIST_TITLE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( (list) => {\r\n                    if (list.id === action.listId) return ({ ...list, title: action.title })\r\n                    else return list\r\n                } )\r\n            }\r\n\r\n        case REORDER_LIST:\r\n            return {\r\n                ...state,\r\n                lists: action.reorderedLists.map( (list, index) => ({...list, order: index }) ),\r\n                listsOrder: action.reorderedLists.map((list) => list.id)\r\n            }\r\n\r\n        case DELETE_LIST:\r\n            return {\r\n                ...state,\r\n                lists: \r\n                    state.lists\r\n                        .filter((list) => list.id !== action.listId)\r\n                        .map( (list, index) => ({...list, order: index}) )  // change list order\r\n            }\r\n\r\n        case LIST_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                listsProgress: {...state.listsProgress, listsLoading: action.value}\r\n            }\r\n\r\n        case LIST_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) return { ...list, [action.process]: action.value }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n        case SET_FILTER_VALUE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) return { ...list, filterValue: action.value }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n\r\n // ---------------------------Tasks Reducers-------------------------------\r\n       \r\n\r\n        case RESTORE_TASKS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(list => {\r\n                   if (list.id === action.listId)\r\n                        return {\r\n                            ...list,\r\n                            totalCount: action.totalCount,\r\n                            tasksOrder: !action.tasks ? [] \r\n                                : action.tasks.map((task) => task.id),\r\n                            tasks: !action.tasks ? [] \r\n                                : action.tasks.filter( (task, index) => index < countOnPage )\r\n                                    .map( (task, index) => ({...task, renderIndex: index + 1 }) )\r\n                        }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n        case SET_TASKS_PAGE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( (list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: action.totalCount ? action.totalCount : list.totalCount,\r\n                            page: action.page,\r\n                            tasks: action.tasks\r\n                                .map((task, index) => ({ ...task, renderIndex: renderBasis + index }))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case SET_TASKS_ORDER:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return { ...list, tasksOrder: action.tasksOrder }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: list.totalCount-1,\r\n                            tasksOrder: list.tasksOrder.filter((id) => id !== action.taskId),\r\n                            tasks:\r\n                                list.tasks.filter((task) => task.id !== action.taskId)\r\n                                    .map( (task, index) => ({ ...task, renderIndex: renderBasis + index })  )\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case UPDATE_TASK:\r\n\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.task.todoListId) {\r\n                        return {\r\n                            ...list,\r\n                            tasks: list.tasks.map((task) => {\r\n                                if (task.id === action.task.id) {\r\n                                    return { ...task, ...action.task }\r\n                                } else return task\r\n                            })\r\n                        }\r\n                    } else return list;\r\n                })\r\n            }\r\n        \r\n        case TASK_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            tasks: list.tasks.map( (task) => {\r\n                                if (task.id === action.taskId) { \r\n                                    return {...task, [action.process]:action.value}\r\n                                }\r\n                                else return task\r\n                            } )\r\n                        }\r\n                    }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n\r\n// ------------------------ Filtered Tasks Reducers --------------------\r\n\r\n\r\n        case SET_FLTR_TASKS_PAGE:\r\n            const totalCount =          // get tasks count on filtered page\r\n                action.tasks.filter((task) => task.status === action.status).length;\r\n            const newTasksOrder = action.tasks\r\n                .filter((task) => task.status === action.status)\r\n                .map((task) => task.id)\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            page: action.page,\r\n                            totalCount, \r\n                            generalCount: action.tasks.length,  // general tasks count\r\n                            tasksOrder: newTasksOrder,\r\n                            tasks: action.tasks\r\n                                .filter((task) => task.status === action.status)\r\n                                .map((task, index) => ({ ...task, renderIndex: index + 1}))\r\n                                .filter((task, index) =>\r\n                                    (index >= (action.page - 1) * countOnPage && index < action.page * countOnPage))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case DELETE_FLTR_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: list.totalCount -1,\r\n                            generalCount: list.generalCount -1,\r\n                            tasksOrder: list.tasksOrder.filter((id) => id !== action.taskId) ,\r\n                            tasks: list.tasks.filter((task) => task.id !== action.taskId)\r\n                                .map((task, index) => ({ ...task, renderIndex: renderBasis + index }))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case SET_PREV_ACT_ID:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            prevActiveId: action.prevActiveId\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;\r\n\r\n// ------------------------------ TEMPORARY ----------------------------------\r\n\r\n\r\n\r\n\r\n\r\n// --------------------------- Lists Actions -----------------------------------\r\n\r\n\r\nconst LIST_IS_LOADING = 'LIST_IS_LOADING'\r\nconst listIsLoadingAC = (value) => ({ type: LIST_IS_LOADING, value })\r\n\r\nconst LIST_IN_PROCESS = 'LIST_IN_PROCESS'\r\nconst listInProcessAC = (listId, process, value) => {\r\n    return({type: LIST_IN_PROCESS, listId, process, value})\r\n}\r\n\r\n\r\nconst RESTORE_LISTS = 'RESTORE-LISTS';\r\nconst restoreListsAC = (lists) => ({ type: RESTORE_LISTS, lists })\r\n\r\nexport const restoreLists = () => (dispatch) => {\r\n    dispatch(listIsLoadingAC(true))\r\n    api.restoreLists()\r\n        .then( response => {\r\n            dispatch(restoreListsAC(response.data));\r\n            dispatch(listIsLoadingAC(false))\r\n        })\r\n}\r\n\r\n\r\nconst ADD_LIST = 'ADD_LIST';\r\nconst addListAC = (list) => ({type: ADD_LIST, list})\r\n\r\nexport const addList = (title) => (dispatch) => {\r\n    dispatch(listIsLoadingAC(true))\r\n    api.addList(title)\r\n            .then(Response => {\r\n                dispatch(addListAC(Response.data.data.item))\r\n                dispatch(listIsLoadingAC(false))\r\n            })\r\n}\r\n\r\nconst UPDATE_LIST_TITLE = 'UPDATE_LIST_TITLE';\r\nconst updateListTitleAC = (listId, title) => ({ type: UPDATE_LIST_TITLE, listId, title })\r\n\r\nexport const updateListTitle = (listId, title) => (dispatch) => {\r\n    dispatch(listInProcessAC(listId, 'titleUpdating', true))\r\n    api.updateListTitle(listId, title)\r\n        .then(Response => {\r\n            if (Response.data.resultCode === 0) {\r\n                dispatch(updateListTitleAC(listId, title))\r\n                dispatch(listInProcessAC(listId, 'titleUpdating', false))\r\n            }\r\n        })\r\n}\r\n\r\n\r\nconst DELETE_LIST = 'DELETE_LIST';\r\nconst deleteListAC = (listId) => ({type: DELETE_LIST, listId})\r\n\r\nexport const deleteList = (listId) => (dispatch) => {\r\n    dispatch(listInProcessAC(listId, 'listDeliting', true))\r\n    return api.deleteList(listId)\r\n            .then((res) => {\r\n                if (res.data.resultCode === 0) {\r\n                    dispatch(deleteListAC(listId))\r\n                }\r\n            }).then( () => dispatch(listInProcessAC(listId, 'listDeliting', false)) )\r\n}\r\n\r\n\r\n\r\nconst REORDER_LIST = 'REORDER_LIST'\r\nconst reorderListAC = (reorderedLists) => ({type: REORDER_LIST, reorderedLists })\r\n\r\nexport const reorderList = (listId, currPos, nextRenderPos) => (dispatch, getState) => {\r\n    \r\n    const nextPos = nextRenderPos !== ( null || undefined ) ? +nextRenderPos - 1 : null   //define next element position\r\n   \r\n    const getAfterId = () => {\r\n        // if nextRenderPos undefined or null element position should'n change\r\n        // this is insurence check or for case of using reorderListAC\r\n        if (nextPos === null && currPos === 0) return null\r\n        if (nextPos === null) return getState().listsOrder[currPos-1]\r\n        \r\n        // if next position defined find 'put after element' Id\r\n        if (nextPos === 0) return null\r\n        if (nextPos <= +currPos) return getState().listsOrder[nextPos-1]\r\n        if (nextPos > +currPos) return getState().listsOrder[nextPos]\r\n    }\r\n    \r\n    const getReorderedLists = () => {\r\n        const lists = [...getState().lists]\r\n        if (nextPos < currPos) {\r\n            const currList = lists[currPos]\r\n            for (let i = currPos-1; i >= nextPos; i--) {\r\n                lists[i+1] = lists[i]\r\n            }\r\n            lists[nextPos] = currList\r\n            return lists\r\n        }\r\n        if (nextPos > currPos) {\r\n            const currList = lists[currPos]\r\n            for (let i = currPos; i < nextPos; i++) {\r\n                lists[i] = lists[i+1]\r\n            }\r\n            lists[nextPos] = currList\r\n            return lists\r\n        }\r\n        return lists    // default value for unchanged lists ---> insurance check\r\n    }\r\n\r\n    if ( nextPos !== null && nextPos !== +currPos ) {\r\n        const putAfterItemId = getAfterId()              // get putAfterItemId for API request\r\n        const reorderedLists = getReorderedLists()       // get reordered lists for dispatch\r\n\r\n        dispatch(listIsLoadingAC(true))\r\n        api.reorderList(listId, putAfterItemId)\r\n            .then((response) => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(reorderListAC(reorderedLists))\r\n                    dispatch(listIsLoadingAC(false))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// --------------------------- Tasks Actions -----------------------------------\r\n\r\n\r\nconst RESTORE_TASKS = 'RESTORE_TASKS';\r\nconst restoreTasksAC = (listId, tasks, totalCount) => ({ type: RESTORE_TASKS, listId, tasks, totalCount })\r\n\r\nexport const restoreTasks = (listId) => (dispatch) => {\r\n    api.getAllTasks(listId)\r\n            .then(Response => {\r\n                dispatch(restoreTasksAC(listId, Response.data.items, Response.data.totalCount))\r\n            })\r\n}\r\n\r\nconst SET_TASKS_PAGE = 'SET_TASKS_PAGE';\r\nexport const setTasksPageAC = (listId, page, tasks, totalCount) =>\r\n    ({ type: SET_TASKS_PAGE, listId, page, tasks, totalCount })\r\n\r\nconst DELETE_TASK = 'DELETE_TASK';\r\nexport const deleteTask = (listId, taskId, page) => ({ type: DELETE_TASK, listId, taskId, page })\r\n\r\nconst UPDATE_TASK = 'UPDATE_TASK';\r\nconst updateTaskAC = (task) => ({type: UPDATE_TASK, task })\r\n\r\nconst TASK_IN_PROCESS = 'TASK_IN_PROCESS'\r\nconst taskInProcessAC = (listId, taskId, process, value) => \r\n        ({type: TASK_IN_PROCESS, listId, taskId, process, value})\r\n\r\n\r\n// ------------------------ Filtered Tasks Actions ----------------------\r\n\r\n\r\n// status filter values\r\nexport const ALL_S = 'ALL_S'\r\nexport const COMPLETED = 'COMPLETED'\r\nexport const ACTIVE = 'ACTIVE'\r\n\r\nexport const statusObj = {completed: 1, active: 0}\r\n\r\n\r\nconst SET_FILTER_VALUE = 'SET_FILTER_VALUE'\r\nconst setFilterValueAC = (listId, value) => ({type: SET_FILTER_VALUE, listId, value})\r\n\r\nexport const setFilterValue = (listId, filterValue) => (dispatch, getState) => {\r\n    \r\n    // get tasks id before the first completed task in list and save it to state\r\n    // for reorderTasks in case of filterValue === COMPLETED\r\n    const targetList = getState().lists.find((l) => l.id === listId)\r\n    const currFilter = targetList.filterValue\r\n\r\n    if (currFilter !== COMPLETED) {\r\n        const firstComplInd = targetList.tasks.findIndex((t) => t.status === statusObj.completed)\r\n        const prevActiveId = (firstComplInd === 0 || targetList.tasks.length === 0)\r\n            ? null\r\n            : targetList.tasks[0].id\r\n        dispatch(setPrevActId(listId, prevActiveId))\r\n    }\r\n    // <-----\r\n    \r\n    dispatch(setTasksPage(listId, filterValue, 1))  \r\n    // !!! dispatch(setTasksPage(...)) must be called before dispatch(setFelterValueAC(...))\r\n    // to get correct current filterValue in setAllTasksPage call\r\n    \r\n    dispatch( setFilterValueAC(listId, filterValue) )\r\n}\r\n\r\n\r\nconst SET_PREV_ACT_ID = 'SET_PREV_ACT_ID'\r\nconst setPrevActId = (listId, prevActiveId) => ({type: SET_PREV_ACT_ID, listId, prevActiveId})\r\n\r\nconst SET_FLTR_TASKS_PAGE = 'SET_FLTR_TASKS_PAGE';\r\nconst setFilteredPageAC = (listId, page, tasks, status) =>\r\n    ({ type: SET_FLTR_TASKS_PAGE, listId, page, tasks, status })\r\n\r\nconst DELETE_FLTR_TASK = 'DELETE_FLTR_TASK';\r\nconst deleteFltrTask = (listId, taskId, page) => ({ type: DELETE_FLTR_TASK, listId, taskId, page })\r\n\r\n\r\n\r\n// set tasks page on \"Active\" or \"Completed\" filter mode\r\nconst setFilteredPage = (listId, page, status) => (dispatch) => {\r\n    return api.getAllTasks(listId)\r\n        .then(Response => {\r\n            const tasks = Response.data.items;\r\n            dispatch(setFilteredPageAC(listId, page, tasks, status))\r\n        })\r\n}\r\n\r\n// set tasks page on \"All\" filter mode\r\nconst setAllTasksPage = (listId, page) => (dispatch, getState) => {\r\n    \r\n    //  get previous filterValue\r\n    const { filterValue: prevFilterVal } = getState().lists.find((list) => list.id === listId)\r\n\r\n    switch (prevFilterVal) {\r\n\r\n        // if previous filter was 'Active' or 'Completed' --> set new tasksOrder\r\n        case COMPLETED:\r\n        case ACTIVE:\r\n            return api.getAllTasks(listId)\r\n                .then((res) => {\r\n                    const newTasksOrder = res.data.items.map((task) => task.id)\r\n                    dispatch(setTasksOrder(listId, newTasksOrder))\r\n                    api.getTasksOnPage(listId, page)\r\n                        .then(Response => {\r\n                            const { items: tasks, totalCount } = Response.data;\r\n                            dispatch(setTasksPageAC(listId, page, tasks, totalCount))\r\n                        })\r\n                })\r\n\r\n        default:      // case previous filterValue === ALL_S\r\n            return api.getTasksOnPage(listId, page)\r\n                .then(Response => {\r\n                    const { items: tasks, totalCount } = Response.data;\r\n                    dispatch(setTasksPageAC(listId, page, tasks, totalCount))\r\n                })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setTasksPage = (listId, filterValue, page) => (dispatch) => {\r\n    \r\n    dispatch( listInProcessAC(listId, 'footerProcessing', true) )\r\n\r\n    let status = statusObj.active\r\n    switch (filterValue) {\r\n        \r\n        case ACTIVE:\r\n            dispatch(setFilteredPage(listId, page, status))\r\n                .then(() => dispatch(listInProcessAC(listId, 'footerProcessing', false)))\r\n        break\r\n\r\n        case COMPLETED:\r\n            status = statusObj.completed\r\n            dispatch(setFilteredPage(listId, page, status))\r\n                .then(() => dispatch(listInProcessAC(listId, 'footerProcessing', false)))\r\n        break\r\n\r\n        default:    //case filterValue === ALL_S\r\n            dispatch(setAllTasksPage(listId, page))\r\n                .then(() => dispatch(listInProcessAC(listId, 'footerProcessing', false)))\r\n    }\r\n}\r\n\r\n\r\nexport const addTask = (listId, title) => (dispatch, getState) => {\r\n\r\n    // get current tasksOrder\r\n    const tasksOrder = getState().lists.find((list) => list.id === listId).tasksOrder\r\n\r\n    dispatch(listInProcessAC(listId, 'taskIsAdding', true))\r\n    return api.addTask(listId, title)\r\n        .then((Response) => {\r\n            if (Response.data.resultCode === 0) {\r\n                const newTaskId = Response.data.data.item.id\r\n                const newTasksOrder = [newTaskId, ...tasksOrder]\r\n                dispatch(setTasksOrder(listId, newTasksOrder))\r\n                dispatch(setAllTasksPage(listId, 1))\r\n                    .then(() => {\r\n                        dispatch(setFilterValueAC(listId, ALL_S))\r\n                        dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n                    })\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport const addTaskActive = (listId, title) => (dispatch, getState) => {\r\n\r\n    // get current tasksOrder\r\n    const tasksOrder = getState().lists.find((list) => list.id === listId).tasksOrder\r\n\r\n    dispatch( listInProcessAC(listId, 'taskIsAdding', true) )\r\n    return api.addTask(listId, title)\r\n        .then(Response => {\r\n            if (Response.data.resultCode === 0) {\r\n                const newTaskId = Response.data.data.item.id\r\n                const newTasksOrder = [newTaskId, ...tasksOrder]\r\n                dispatch(setTasksOrder(listId, newTasksOrder))\r\n                api.getAllTasks(listId)\r\n                    .then((Response) => {\r\n                        const status = statusObj.active\r\n                        const tasks = Response.data.items;\r\n                        dispatch( setFilteredPageAC(listId, 1, tasks, status) )\r\n                        dispatch( listInProcessAC(listId, 'taskIsAdding', false) )\r\n                    })\r\n            }\r\n        })\r\n}\r\n\r\nexport const delTaskFromPage = (listId, taskId) => (dispatch, getState) => {\r\n    \r\n    // extract the target object from lists array & get all required parametrs\r\n    const targetList = getState().lists.find( (item) => item.id === listId )\r\n    const {page, filterValue, totalCount, countOnPage} = targetList\r\n    const tasksLength = targetList.tasks.length\r\n    const pagesCount = totalCount ? Math.ceil(totalCount/countOnPage) : 1\r\n    \r\n    dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', true) )\r\n    api.deleteTask(listId, taskId)\r\n            .then((Response) => {\r\n                if (Response.data.resultCode === 0) {\r\n                    // delete task from not last page\r\n                    if (tasksLength === 10 && page < pagesCount) {\r\n                        if (filterValue === ALL_S) {\r\n                            dispatch( setAllTasksPage(listId, page) )\r\n                        } else {\r\n                            const status = filterValue === COMPLETED \r\n                                ? statusObj.completed\r\n                                : statusObj.active\r\n                            dispatch( setFilteredPage(listId, page, status) )\r\n                        }\r\n                    } \r\n                    // delete last task from not first page\r\n                    if (tasksLength === 1 && page !== 1) {\r\n                        if (filterValue === ALL_S) {\r\n                            dispatch( setAllTasksPage(listId, page-1) )\r\n                        } else {\r\n                            const status = filterValue === COMPLETED \r\n                                ? statusObj.completed\r\n                                : statusObj.active\r\n                            dispatch( setFilteredPage(listId, page - 1, status) )\r\n                        }\r\n\r\n                    }\r\n                    // delete last task from first page\r\n                    if (tasksLength === 1 && page === 1 && filterValue !== ALL_S) {\r\n                        dispatch( setAllTasksPage(listId, 1) )\r\n                            .then(() => dispatch( setFilterValueAC(listId, ALL_S) ) )\r\n                    }\r\n                    // regular delete task case -> must be located at the end of chain\r\n                    if (filterValue === ALL_S) {\r\n                        dispatch( deleteTask(listId, taskId, page) )\r\n                    } else {\r\n                        dispatch( deleteFltrTask(listId, taskId, page) )\r\n                    }\r\n                }\r\n            }).then( () => dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', false) ) )\r\n}\r\n\r\n\r\nexport const updateTask = (listId, taskId, updateObj) => (dispatch, getState) => {\r\n\r\n    // extract the target object from lists array & get all required parametrs\r\n    const targetList = getState().lists.find( (item) => item.id === listId )\r\n    const { page, filterValue } = targetList\r\n    const tasksLength = targetList.tasks.length\r\n    const targetTask = targetList.tasks.find( (item) => item.id === taskId )\r\n    const updatedTask = { ...targetTask, ...updateObj }\r\n    \r\n    dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', true) )\r\n  \r\n    api.updateTask(listId, taskId, updatedTask)\r\n        .then(Response => {\r\n            if (Response.data.resultCode === 0) {\r\n                if (filterValue === ALL_S) {\r\n                    dispatch(updateTaskAC(Response.data.data.item))\r\n                } else {\r\n                    api.getAllTasks(listId)\r\n                        .then((Response) => {\r\n                            if (!Response.data.error) {\r\n                                const tasks = Response.data.items;\r\n                                const status = filterValue === COMPLETED \r\n                                    ? statusObj.completed \r\n                                    : statusObj.active\r\n                                // set previous filtered page\r\n                                if (tasksLength === 1 && page !== 1 && updateObj.status !== undefined) {\r\n                                    dispatch(setFilteredPageAC(listId, page - 1, tasks, status))\r\n                                } else if (tasksLength === 1 && page === 1 && updateObj.status !== undefined) {\r\n                                        dispatch(setAllTasksPage(listId, 1))\r\n                                        dispatch(setFilterValueAC(listId, ALL_S))\r\n                                } else\r\n                                    dispatch(setFilteredPageAC(listId, page, tasks, status))\r\n                            }\r\n                        })\r\n                }\r\n            }\r\n        }).then( () => dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', false) ) )\r\n}\r\n\r\n\r\nconst SET_TASKS_ORDER = 'SET_TASKS_ORDER'\r\nconst setTasksOrder = (listId, tasksOrder) => ({ type: SET_TASKS_ORDER, listId, tasksOrder })\r\n\r\n\r\nexport const reorderTask = (listId, taskId, currPos, nextRenderPos) => (dispatch, getState) => {\r\n\r\n    const nextPos = nextRenderPos !== (null || undefined) ? +nextRenderPos - 1 : null   //define next element position\r\n    const targerList = getState().lists.find((list) => list.id === listId)\r\n\r\n    const getAfterId = () => {\r\n        const { filterValue, prevActiveId } = targerList\r\n        // if nextRenderPos undefined or null element position should'n change\r\n        // this is insurence check or for case of using reorderTaskAC\r\n        if (nextPos === null && currPos === 0) return null\r\n        if (nextPos === null) return targerList.tasksOrder[currPos - 1]\r\n\r\n        // if next position defined find 'put after element' Id\r\n        if (filterValue === COMPLETED && nextPos === 0) return prevActiveId\r\n        if (nextPos === 0) return null\r\n        if (nextPos <= +currPos) return targerList.tasksOrder[nextPos - 1]\r\n        if (nextPos > +currPos) return targerList.tasksOrder[nextPos]\r\n    }\r\n\r\n    const getTasksOrder = () => {\r\n        const tasksOrder = [...targerList.tasksOrder]\r\n        if (nextPos < currPos) {\r\n            const currId = tasksOrder[currPos]\r\n            for (let i = currPos - 1; i >= nextPos; i--) {\r\n                tasksOrder[i + 1] = tasksOrder[i]\r\n            }\r\n            tasksOrder[nextPos] = currId\r\n            return tasksOrder\r\n        }\r\n        if (nextPos > currPos) {\r\n            const currId = tasksOrder[currPos]\r\n            for (let i = currPos; i < nextPos; i++) {\r\n                tasksOrder[i] = tasksOrder[i + 1]\r\n            }\r\n            tasksOrder[nextPos] = currId\r\n            return tasksOrder\r\n        }\r\n        return tasksOrder    // default value for unchanged lists ---> insurance check\r\n    }\r\n\r\n\r\n    // reorder functional block\r\n    if (nextPos !== null && nextPos !== +currPos) {\r\n        const putAfterItemId = getAfterId()              // get putAfterItemId for API request\r\n        console.log(putAfterItemId)\r\n        const { countOnPage, filterValue } = targerList\r\n        // determine status of filtered tasks for dispatch(setFilteredPage(...))\r\n        const { status } = targerList.tasks.find((t) => t.id === taskId )\r\n        const tasksOrder = getTasksOrder()               // determine new tasksOrder\r\n\r\n        const page = nextRenderPos ? Math.ceil(nextRenderPos / countOnPage) : 1\r\n        // determine which page will appear on after the reorder\r\n\r\n        dispatch(listInProcessAC(listId, 'taskIsAdding', true))\r\n        api.reorderTask(listId, taskId, putAfterItemId)\r\n            .then((response) => {\r\n                if (response.data.resultCode === 0) {\r\n                    if (filterValue === ALL_S) {\r\n                        dispatch(setAllTasksPage(listId, page))\r\n                            .then(() => {\r\n                                dispatch(setTasksOrder(listId, tasksOrder))\r\n                                dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n                            })\r\n                    }\r\n                    if (filterValue === ACTIVE || filterValue === COMPLETED) {\r\n                        dispatch(setFilteredPage(listId, page, status))\r\n                        .then(() => {\r\n                            // dispatch(setTasksOrder(listId, tasksOrder))\r\n                            dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nconst Preloader = ({ height, width, fill, ...userStyles }) => {\r\n\r\n    const currentWidth = () => {\r\n        if ( width ) return width\r\n        if ( !width && height ) {\r\n            const wNum = +height.slice(0, height.indexOf('p'))*3.65\r\n            return (wNum+'px')\r\n        }\r\n        if ( !width && !height ) return '252px'\r\n    }\r\n    \r\n    const currentHeight = () => {\r\n        if ( height ) return height\r\n        if ( !height && width ) {\r\n            const hNum = +width.slice(0, width.indexOf('p'))*0.27\r\n            return (hNum+'px')\r\n        }\r\n        if ( !height && !width ) return '69px'\r\n    }\r\n\r\n    const loaderStyle = {\r\n        ...userStyles,\r\n        width: currentWidth(),\r\n        height: currentHeight()\r\n    };\r\n      \r\n    return(\r\n            <svg svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" version=\"1.0\" viewBox=\"0 0 128 35\" space=\"preserve\" style={loaderStyle}>\r\n                <g><circle fill={fill} cx=\"17.5\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.167;0.5;0.668;1\" values=\"0.3;1;1;0.3;0.3\"/></g>\r\n                <g><circle fill={fill} cx=\"110.5\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.334;0.5;0.835;1\" values=\"0.3;0.3;1;1;0.3\"/></g>\r\n                <g><circle fill={fill} cx=\"64\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.167;0.334;0.668;0.835;1\" values=\"0.3;0.3;1;1;0.3;0.3\"/></g>\r\n            </svg>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './ListTitle.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { updateListTitle } from '../../../../Redux/reducer';\r\nimport Preloader from '../../../Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass ListTitle extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: '',\r\n        inputError: false,\r\n    }\r\n\r\n    updateListTitle = (title) => {\r\n        if (!title.match(/%/)) {\r\n            this.props.updateListTitle(this.props.listId, title)\r\n            if (this.props.history.location.pathname !== '/') {\r\n                this.props.history.push(`/${title.replace(/\\s|\\?|#/g, '-')}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    setEditMode = () => this.setState({ editMode: true, title: this.props.title })\r\n    setDisplayMode = () => {\r\n        if (this.state.inputError) this.setState({ inputError: false })\r\n        this.setState({ editMode: false })\r\n    }\r\n\r\n    editListTitle = (e) => {\r\n        const newTitle = e.currentTarget.value;\r\n        const equalTitles = this.props.listTitles.find((el) => {\r\n            return (el.title.toLowerCase() === newTitle.toLowerCase() && el.id !== this.props.listId)\r\n        })\r\n        \r\n        if (this.state.inputError) this.setState({ inputError: false });\r\n        if (newTitle.trim() === '' || newTitle.length > 100 \r\n            || newTitle.match(/%/) || equalTitles) {\r\n            this.setState({ title: newTitle, inputError: true })\r\n        } else this.setState({ title: newTitle })\r\n    }\r\n\r\n    setTitleOnKey = (e) => {\r\n        const title = e.currentTarget.value;\r\n        if (e.key === 'Enter' && !this.state.inputError) {\r\n            this.setDisplayMode()\r\n            this.updateListTitle(title);\r\n        }\r\n        if (e.keyCode === 27) {\r\n            this.setDisplayMode()\r\n            if (this.state.inputError) this.setState({ inputError: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const loaderStyle = {\r\n            fill: 'rgb(85, 47, 11)', height: '10px', position: 'absolute', bottom: '-12px', right: '43%'\r\n        }\r\n\r\n        const listTitleHint = \r\n            'Please, check the % sign is missing and enter a unique title between 1 and 100 chars long, or press \"Esc\" to exit'\r\n\r\n        if (this.state.editMode) {\r\n            return (\r\n                <div className={styles.list_title__input}>\r\n                    <input type=\"text\"\r\n                        value={this.state.title}\r\n                        className={this.state.inputError ? styles.error : ''}\r\n                        onChange={this.editListTitle}\r\n                        autoFocus={true}\r\n                        onBlur={this.setDisplayMode}\r\n                        onKeyDown={this.setTitleOnKey} />\r\n                    \r\n                    {this.state.inputError && \r\n                        <div className={styles.tooltip}>\r\n                            {listTitleHint}\r\n                        </div> \r\n                    }\r\n                </div>\r\n            )\r\n        } else return (\r\n            <div className={styles.list_title}>\r\n                <span onClick={this.setEditMode}>{this.props.title}</span>\r\n                {(this.props.listDeliting || this.props.titleUpdating)\r\n                    && <Preloader {...loaderStyle} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(null, { updateListTitle }),\r\n    withRouter\r\n)(ListTitle)","import React from 'react';\r\nimport styles from './ListHeader.module.css'\r\nimport { connect } from 'react-redux';\r\nimport AddItemForm from '../../AddItemForm/AddItemForm';\r\nimport ListTitle from './ListTitle/ListTitle';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport { addTask, addTaskActive, deleteList, ALL_S, COMPLETED, ACTIVE } from '../../../Redux/reducer';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ListHeader extends React.Component {\r\n\r\n    state = {\r\n        maxTasksCount: 33\r\n    }\r\n\r\n    deleteList = () => {\r\n        this.props.deleteList(this.props.listId)\r\n            .then(() => {\r\n                if (this.props.history.location.pathname !== '/') {\r\n                    this.props.history.push('/')\r\n                }\r\n            })\r\n    }\r\n\r\n    addTask = (title) => {\r\n        const { listId, filterValue, taskIsAdding } = this.props;\r\n\r\n        if ( (filterValue === COMPLETED || filterValue === ALL_S) && !taskIsAdding )  {\r\n            this.props.addTask(listId, title)\r\n        }\r\n\r\n        if (filterValue === ACTIVE && !taskIsAdding) {\r\n            this.props.addTaskActive(listId, title)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {listId, title, page, totalCount, filterValue, listTitles,\r\n            generalCount, listDeliting, titleUpdating, taskIsAdding} = this.props\r\n        const { maxTasksCount } = this.state\r\n        const totalTasksCount = filterValue === ALL_S ? totalCount : generalCount\r\n\r\n        const taskTitleValidation = (newTitle) => {\r\n            if (newTitle === '' || newTitle.length > 100) {\r\n                return true\r\n            }\r\n        }\r\n\r\n        const loaderStyle ={\r\n            fill: 'rgb(85, 47, 11)', height: '8px', position: 'absolute', right: '50%', bottom: '-14px'}\r\n\r\n            const addTaskHint = \r\n            'Please, enter a title with length from 1 to 100 chars or press \"Esc\" to reset'\r\n\r\n        return (\r\n            <div className={styles.list_header}>\r\n                <ListTitle listId={listId} title={title} page={page} listTitles={listTitles}\r\n                    listDeliting={listDeliting} titleUpdating={titleUpdating} />\r\n                {/* форма добавления задач */}\r\n                {totalTasksCount < maxTasksCount\r\n                    && <div className={styles.list_header_add_form}>\r\n                        <AddItemForm\r\n                            placeholder='Add new task'\r\n                            hint={addTaskHint}\r\n                            validationFunc={taskTitleValidation}\r\n                            addItem={this.addTask} />\r\n                        {taskIsAdding && <Preloader {...loaderStyle} />}\r\n                    </div>}\r\n                \r\n                {/*delete icon display modes */}\r\n                { !listDeliting\r\n                    &&<i className={'fa fa-close ' + styles.delete_button} onClick={this.deleteList} />\r\n                }\r\n                { listDeliting\r\n                    &&<i className={'fa fa-close ' + styles.delete_button}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mdtp = { addTask, addTaskActive, deleteList }\r\n\r\nexport default compose (\r\n    connect(null, mdtp ),\r\n    withRouter\r\n)(ListHeader);\r\n\r\n","import React, { useState } from 'react'\r\nimport styles from './TaskPriority.module.css'\r\n\r\n\r\nconst TaskPriority = (props) => {\r\n\r\n    const [editMode, setMode ] = useState(false)\r\n\r\n    const setTaskPriority = (e) => {\r\n        const priority = priorityArray.findIndex((prior) => prior === e.currentTarget.value);\r\n        props.updateTask({ priority });\r\n        resetEditMode()\r\n    }\r\n\r\n    const priorityArray = ['Low', 'Middle', 'High', 'Urgent', 'Later']\r\n\r\n    const priorityOptions = priorityArray.map(prior =>\r\n        <option className={styles[prior]} key={prior} >{prior}</option>)\r\n\r\n    const getTaskPriority = () => priorityArray[props.priority]\r\n    const getTaskPriorityStyle = () => styles[ priorityArray[props.priority] ] + ' ' + styles.taskPriority\r\n\r\n    const setEditMode = () => setMode(true)\r\n    const resetEditMode = () => setMode(false)\r\n\r\n    const priorityOnKey = (e) => { if (e.keyCode === 27) resetEditMode() }\r\n\r\n    if (!editMode) {\r\n        return (\r\n            <span onClick={setEditMode} className={getTaskPriorityStyle()}>\r\n                {getTaskPriority()} &nbsp;\r\n            </span>\r\n        )\r\n    } else {\r\n        return (\r\n            <select\r\n                defaultValue={getTaskPriority()}\r\n                className={getTaskPriorityStyle()}\r\n                onChange={setTaskPriority}\r\n                onBlur={resetEditMode}\r\n                onKeyDown={priorityOnKey}\r\n                autoFocus={true} > {priorityOptions} </select>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskPriority","import React, { useState } from 'react'\r\nimport styles from './TaskTitle.module.css'\r\n\r\n\r\nconst TaskTitle = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [title, setTitle] = useState('')\r\n    const [inputError, setError] = useState(false)\r\n\r\n\r\n    const setTitleEditMode = () => {\r\n        setEditMode(true)\r\n        setTitle(props.title)\r\n    }\r\n\r\n    const setDisplayMode = () => {\r\n        if (inputError) setError(false)\r\n        setEditMode(false)\r\n    }\r\n\r\n    const editTaskTitle = (e) => {\r\n        const newTitle = e.currentTarget.value;\r\n        if (inputError) setError(false)\r\n        if (newTitle.trim() === '' || newTitle.length > 100) {\r\n            setTitle(newTitle)\r\n            setError(true)\r\n        } else setTitle(newTitle)\r\n    }\r\n\r\n    const setTitleOnKey = (e) => {\r\n        const title = e.currentTarget.value;\r\n        if (e.key === 'Enter' && !inputError) {\r\n            props.updateTask({ title });\r\n            setDisplayMode()\r\n        }\r\n        if (e.keyCode === 27) {\r\n            setDisplayMode()\r\n            if (inputError) setError(false)\r\n        }\r\n    }\r\n\r\n\r\n    if (!editMode) {\r\n        return (\r\n            <span onClick={setTitleEditMode} className={styles.taskTitle}>{props.title}, </span>\r\n        )\r\n    } else {\r\n        return (\r\n            <input type=\"text\"\r\n                value={title}\r\n                className={inputError ? styles.error : ''}\r\n                onChange={editTaskTitle}\r\n                autoFocus={true}\r\n                onBlur={setDisplayMode}\r\n                onKeyDown={setTitleOnKey} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskTitle","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './TaskOrder.module.css'\r\nimport { reorderTask } from '../../../../../Redux/reducer'\r\n\r\n\r\nconst TaskOrder = ({ listId, taskId, tasksCount, renderIndex, reorderTask }) => {\r\n\r\n    const [selectMode, setMode] = useState(false)\r\n    const setOnMode = () => setMode(true)\r\n    const resetMode = () => setMode(false)\r\n    const resetOnKey = (e) => { if (e.keyCode === 27) resetMode() }\r\n\r\n    const reorderOnSelect = (e) => {\r\n        const nextRenderPos = e.currentTarget.value\r\n        const currPos = renderIndex - 1\r\n        reorderTask(listId, taskId, currPos, nextRenderPos)\r\n        resetMode()\r\n    }\r\n\r\n    const getOptions = () => {\r\n        let optionArr = []\r\n        for (let i = 1; i <= tasksCount; i++) {\r\n            const el = <option value={i}>{i}</option>\r\n            optionArr.push(el)\r\n        }\r\n        return optionArr\r\n    }\r\n\r\n    const optionArr = getOptions()\r\n\r\n    if (selectMode) return (\r\n        <select autoFocus\r\n            onBlur={resetMode}\r\n            onKeyDown={resetOnKey}\r\n            onChange={reorderOnSelect}\r\n            defaultValue={renderIndex}>{optionArr}</select>\r\n    )\r\n\r\n    return <span className={styles.taskOrder} onClick={setOnMode}> {renderIndex} - </span>\r\n}\r\n\r\nexport default connect(null, { reorderTask })(TaskOrder)","import React from 'react'\r\nimport styles from './ListTask.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { delTaskFromPage, updateTask, statusObj } from '../../../../Redux/reducer'\r\nimport Preloader from '../../../Preloader/Preloader'\r\nimport TaskPriority from './TaskPriority/TaskPriority';\r\nimport TaskTitle from './TaskTitle/TaskTitle';\r\nimport TaskOrder from './TaskOrder/TaskOrder';\r\n\r\n\r\n\r\nconst ListTask = (props) => {\r\n\r\n    const { id: taskId, status, renderIndex, priority, title, taskInProcess } = props.task\r\n    const { listId, tasksCount } = props\r\n\r\n\r\n    const deleteTask = () => props.delTaskFromPage(listId, taskId)\r\n\r\n    const updateTask = (updateObj) => props.updateTask(listId, taskId, updateObj)\r\n\r\n    const setTaskStatus = (e) => {\r\n        const completed = e.currentTarget.checked \r\n            ? statusObj.completed \r\n            : statusObj.active\r\n        updateTask({ status: completed })\r\n    }\r\n\r\n    const loaderStyle = { fill: 'rgb(85, 47, 11)', height: '8px' }\r\n\r\n    return (\r\n        <div className={styles.todoList_task}>\r\n            <div className={status ? styles.taskIsDone : ''}>\r\n                {/* чекбокс */}\r\n                <input\r\n                    className={styles.isDoneCheck}\r\n                    onChange={setTaskStatus}\r\n                    type=\"checkbox\"\r\n                    checked={status} />\r\n                \r\n                <TaskOrder listId={listId} taskId={taskId} \r\n                    renderIndex={renderIndex} tasksCount={tasksCount}/>\r\n                <TaskTitle title={title} updateTask={updateTask} />\r\n                <TaskPriority priority={priority} updateTask={updateTask} />\r\n\r\n                {/* кнопка delete */}\r\n                {!taskInProcess\r\n                    && < i className={'fa fa-close ' + styles.delete_button} onClick={deleteTask}/> }\r\n                {taskInProcess\r\n                    && < i className={'fa fa-close ' + styles.delete_button}/> \r\n                    && <Preloader {...loaderStyle} /> }\r\n                 {/* {taskInProcess && <Preloader {...loaderStyle} />} */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, {updateTask, delTaskFromPage})(ListTask);\r\n\r\n","import React from 'react'\r\nimport styles from './ListTasks.module.css'\r\nimport ListTask from './ListTask/ListTask'\r\n\r\nconst ListTasks = ({ tasks, ...restProps}) => {\r\n\r\n    const tasksArray = tasks.map((task) => \r\n        <ListTask key={task.id} task={task} { ...restProps } /> \r\n    );\r\n\r\n\r\n    return (\r\n        <div className={styles.listTasks}>\r\n            {tasksArray}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ListTasks;\r\n\r\n","import React from 'react'\r\nimport styles from './ListOrder.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { reorderList } from '../../../../Redux/reducer'\r\nimport onClickOutside from 'react-onclickoutside'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass ListOrder extends React.Component {\r\n\r\n    // configure the onClickOutside click handler\r\n    handleClickOutside = () => this.setState({ showOrder: false })\r\n\r\n    state = {\r\n        showOrder: false\r\n    }\r\n\r\n    toggleMode = () => this.setState({ showOrder: !this.state.showOrder })\r\n\r\n    reorderOnClick = (nextRenderPos) => {\r\n        const { listId, order: currPos, reorderList } = this.props\r\n        reorderList(listId, currPos, nextRenderPos)\r\n        this.toggleMode()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { listsCount, order } = this.props\r\n\r\n        const getPagesArr = () => {\r\n            let pagesArr = []\r\n            for (let i = 1; i <= listsCount; i++) {\r\n                const reorder = () => this.reorderOnClick(i)\r\n                const numberStyle = (i - 1) !== order\r\n                    ? styles.orderNumber : styles.orderNumber + ' ' + styles.active\r\n                const page = <button className={numberStyle} onClick={reorder} key={i}>{i}</button>\r\n                pagesArr.push(page)\r\n            }\r\n            return pagesArr\r\n        }\r\n        const pagesArr = getPagesArr()\r\n\r\n        const orderBtnStyle = this.state.showOrder ? styles.pressed : ''\r\n\r\n        return (\r\n            <div className={styles.listOrder}>\r\n                <button className={orderBtnStyle} onClick={this.toggleMode}>\r\n                    {order + 1 + '/' + listsCount}\r\n                </button>\r\n                {this.state.showOrder\r\n                    && < div className={styles.orderBox}>{pagesArr}</div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(null, { reorderList }),\r\n    onClickOutside\r\n)(ListOrder)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './StatusFilter.module.css'\r\nimport { setFilterValue, ALL_S, COMPLETED, ACTIVE } from '../../../../Redux/reducer'\r\nimport onClickOutside from 'react-onclickoutside'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass StatusFilter extends React.Component {\r\n\r\n    // configure the onClickOutside click handler\r\n    handleClickOutside = () => this.setState({ isHidden: true })\r\n\r\n    state = {\r\n        isHidden: true\r\n    }\r\n\r\n    toggleOnClick = () => this.setState({ isHidden: !this.state.isHidden })\r\n\r\n    render() {\r\n\r\n        const { listId, filterValue, footerProcessing, setFilterValue } = this.props\r\n\r\n        const buttonAll = filterValue === ALL_S ? styles.pressed : ''\r\n        const buttonActive = filterValue === ACTIVE ? styles.pressed : ''\r\n        const buttonCompleted = filterValue === COMPLETED ? styles.pressed : ''\r\n\r\n        const filter = { ALL_S: 'All', COMPLETED: 'Completed', ACTIVE: 'Active' }\r\n\r\n        const getAllTasks = () => {\r\n            if (filterValue !== ALL_S) setFilterValue(listId, ALL_S)\r\n        }\r\n        const getCompletedTasks = () => {\r\n            if (filterValue !== COMPLETED) setFilterValue(listId, COMPLETED)\r\n        }\r\n        const getActiveTasks = () => {\r\n            if (filterValue !== ACTIVE) setFilterValue(listId, ACTIVE)\r\n        }\r\n\r\n        const filterButtonStyle =\r\n            this.state.isHidden ? styles.frontButton : styles.frontButton + ' ' + styles.pressed\r\n\r\n        return (\r\n            <div className={styles.statusFilter}>\r\n                <button className={filterButtonStyle} onClick={this.toggleOnClick}>\r\n                   {filter[filterValue]}</button>\r\n                {!this.state.isHidden &&\r\n                    <div className={styles.filterButtons}>\r\n                        <button onClick={getAllTasks}\r\n                            className={buttonAll} disabled={footerProcessing}>All</button>\r\n                        <button onClick={getCompletedTasks}\r\n                            className={buttonCompleted} disabled={footerProcessing}>Completed</button>\r\n                        <button onClick={getActiveTasks}\r\n                            className={buttonActive} disabled={footerProcessing}>Active</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(null, { setFilterValue }),\r\n    onClickOutside\r\n)(StatusFilter)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './PagesLinks.module.css'\r\nimport { setTasksPage } from '../../../../Redux/reducer'\r\n\r\n\r\nconst PagesLinks = ({listId, filterValue, page, pagesCount, setTasksPage}) => {\r\n\r\n    // block the button immediately after clicking on it\r\n    const [disabled, setDisabled] = useState(false)\r\n    useEffect(() => setDisabled(false), [page])\r\n    \r\n    const getPagesLinks = () => {\r\n        const pagesLinks = []\r\n        for ( let i = 1; i <= pagesCount; i++ ) {\r\n            const onClick = () => {\r\n                setTasksPage(listId, filterValue, i)\r\n                setDisabled(true)\r\n            }\r\n            \r\n            const disabledValue = i === page || disabled ? true : false\r\n            const linkStyle = i === page ? `${styles.pageLink} ${styles.active}` : styles.pageLink\r\n            \r\n            const pageLink = \r\n                <button key={i} disabled={disabledValue}\r\n                    className={ linkStyle } onClick={ onClick } >{i}</button>\r\n            pagesLinks.push(pageLink)\r\n        }\r\n        return pagesLinks\r\n    }\r\n\r\n\r\n    return(\r\n        <div className={styles.tasksPagesLinks}>{ getPagesLinks() }</div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { setTasksPage })(PagesLinks)","import React from 'react'\r\nimport Preloader from '../../Preloader/Preloader'\r\nimport styles from './ListFooter.module.css'\r\nimport ListOrder from './ListOrder/ListOrder'\r\nimport StatusFilter from './StatusFilter/StatusFilter'\r\nimport PagesLinks from './PagesLinks/PagesLinks'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst ListFooter = (props) => {\r\n\r\n    const { listId, filterValue, listsCount, order,\r\n        totalCount, countOnPage, page, footerProcessing } = props\r\n\r\n    const loaderStyle = {\r\n        fill: 'rgb(85, 47, 11)', height: '10px', position: 'absolute', bottom: '5px', right: '45%'\r\n    }\r\n\r\n    const pagesCount = totalCount ? Math.ceil(totalCount / countOnPage) : 1\r\n\r\n    // define conditions to show/hide order button\r\n    const showOrder = props.history.location.pathname === '/' ? true : false\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.list_footer}>\r\n            { pagesCount > 1\r\n                && <PagesLinks page={page} pagesCount={pagesCount} \r\n                        listId={listId} filterValue={filterValue} />\r\n            }\r\n            \r\n            <StatusFilter listId={listId} filterValue={filterValue}\r\n                footerProcessing={footerProcessing} />\r\n            \r\n\r\n            {showOrder && listsCount !== 1\r\n                && <ListOrder order={order} listsCount={listsCount} listId={listId} />}\r\n            {footerProcessing && <Preloader {...loaderStyle} />}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withRouter(ListFooter)\r\n\r\n","import React from 'react'\r\nimport styles from './TodoList.module.css'\r\nimport ListHeader from './ListHeader/ListHeader'\r\nimport ListTasks from './ListTasks/ListTasks'\r\nimport ListFooter from './ListFooter/ListFooter'\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.restoreTasks(this.props.list.id)\r\n    }\r\n\r\n    \r\n    render = () => {\r\n        const { listsCount, listTitles } = this.props\r\n        const { title, id, page, totalCount, countOnPage, tasks, generalCount, \r\n            order, filterValue, listDeliting, titleUpdating, taskIsAdding, \r\n                footerProcessing, tasksOrder } = this.props.list;\r\n        const tasksCount = tasksOrder ? tasksOrder.length : null\r\n\r\n\r\n        return (\r\n            <div className={styles.todoList}>\r\n                <section className={styles.todoList_wrapper}>\r\n                    <ListHeader \r\n                        title = { title } \r\n                        listId = { id }\r\n                        filterValue = { filterValue }\r\n                        page = { page }\r\n                        generalCount = {generalCount}\r\n                        totalCount={totalCount}\r\n                        listTitles={listTitles}\r\n                        listDeliting = {listDeliting}\r\n                        titleUpdating={titleUpdating} \r\n                        taskIsAdding={taskIsAdding} />\r\n                    <ListTasks\r\n                        tasks={tasks}\r\n                        listId={id}\r\n                        tasksCount={tasksCount}\r\n                    />\r\n                </section>\r\n                <ListFooter \r\n                    listId={id}\r\n                    page = {page}\r\n                    order={order}\r\n                    listsCount={listsCount}\r\n                    filterValue = { filterValue }\r\n                    countOnPage ={ countOnPage }\r\n                    totalCount={totalCount} \r\n                    footerProcessing={footerProcessing} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styles from './Error404.module.css'\r\n\r\n\r\nconst Error404 = (props) => {\r\n    return(\r\n        <div className={styles.error404}>\r\n            <h3>No match for <code>\"{props.location.pathname}\"</code>. Please, check URL.</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Error404);","import React from 'react';\r\nimport styles from './App.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, Route, withRouter, Switch } from 'react-router-dom';\r\nimport TodoList from './TodoList/TodoList';\r\nimport AddItemForm from './AddItemForm/AddItemForm';\r\nimport Preloader from './Preloader/Preloader';\r\nimport {restoreLists, restoreTasks, addList} from '../Redux/reducer';\r\nimport book from '../Assets/img/book.png';\r\nimport { compose } from 'redux';\r\nimport Error404 from './Error404/Error404';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.restoreLists()\r\n    }\r\n\r\n\r\n    restoreTasks = (listId) => this.props.restoreTasks(listId)\r\n\r\n\r\n    render() {\r\n\r\n        const listTitles = this.props.lists.map((list) => ({title: list.title, id: list.id}) )\r\n\r\n        const listsRoutes = this.props.lists.map((list) =>{\r\n            const path = list.title.replace(/\\s|\\?|#/g, '-')\r\n            return (\r\n            <Route path={`/${path}`} exact key={list.id} render={() => \r\n                <TodoList list={list} key={list.id} \r\n                    restoreTasks={this.restoreTasks} listTitles={listTitles} />} \r\n            />) \r\n        })\r\n\r\n        const allLists = this.props.lists.map((list) => {\r\n            return( \r\n                <TodoList list={list} key={list.id} listTitles={listTitles}\r\n                    restoreTasks={this.restoreTasks} listsCount={this.props.listsCount}/>\r\n            )}\r\n        )\r\n\r\n        const allListsLinks = this.props.lists.map( ( list ) => {\r\n            const link = list.title.replace(/\\s|\\?|#/g, '-')\r\n            return(\r\n                <li key={list.id}><NavLink to={`/${link}`}>{list.title}</NavLink></li>\r\n            )\r\n        } )\r\n\r\n        const listTitleValidation = (newTitle) => {\r\n\r\n            const equalTitles = listTitles.find((el) => {\r\n                return (el.title.toLowerCase() === newTitle.toLowerCase() && el.id !== this.props.listId)\r\n            })\r\n\r\n            if (newTitle.trim() === '' || newTitle.length > 100 || newTitle.match(/%/) || equalTitles) {\r\n                return true\r\n            }\r\n        }\r\n\r\n        const addList = (title) => {\r\n            this.props.addList(title)\r\n            if (this.props.history.location.pathname !== '/') {\r\n                this.props.history.push('/')\r\n            }\r\n        }\r\n\r\n        const preloaderStyles = {\r\n            position: 'absolute', height: '12px', top: '1.75em', right: '34%', fill: 'white'\r\n        }\r\n\r\n        const addListHint = \r\n            'Please, check the % sign is missing and enter a unique title between 1 and 100 chars long, or press \"Esc\" to reset'\r\n\r\n        return (\r\n            <div className={styles.app}>\r\n                <div className={styles.app_header}>\r\n                    { this.props.listsLoading && <Preloader {...preloaderStyles}/>\r\n                    }\r\n                    <NavLink to='/' exact className={styles.app_title}>\r\n                        <h2>\r\n                            <img src={book} alt='book' className={styles.app_header_icon} />\r\n                            Tasks Organizer\r\n                        </h2>\r\n                    </NavLink>\r\n                    {this.props.lists.length < this.props.maxListsCount \r\n                        && <div className={styles.app_addItemForm}>\r\n                                <AddItemForm addItem={addList} hint={addListHint}\r\n                                    validationFunc={listTitleValidation} placeholder='Add list' />\r\n                            </div>}\r\n                </div>\r\n                <nav className={styles.app_header_navigation}>\r\n                    <ul>{allListsLinks}</ul>\r\n                </nav>\r\n                <div className={styles.app_lists}>\r\n                    <Switch>\r\n                        {listsRoutes}\r\n                        <Route path='/' exact>{allLists}</Route>\r\n                        <Route component={Error404} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        lists: state.lists,\r\n        listsCount: state.lists.length,\r\n        listsLoading: state.listsProgress.listsLoading,\r\n        maxListsCount: state.maxListsCount\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {restoreLists, restoreTasks ,addList}),\r\n    withRouter\r\n)(App);","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport reducer from './reducer';\r\n\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(ThunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './UI/App';\r\nimport store from './Redux/store';\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store = {store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}