{"version":3,"sources":["UI/TodoList/ListFooter/StatusFilter/StatusFilter.module.css","UI/App.module.css","UI/TodoList/ListFooter/ListOrder/ListOrder.module.css","UI/TodoList/ListTasks/ListTask/ListTask.module.css","UI/TodoList/ListHeader/ListHeader.module.css","UI/TodoList/ListFooter/PagesLinks/PagesLinks.module.css","UI/TodoList/ListHeader/ListTitle/ListTitle.module.css","UI/TodoList/ListTasks/ListTask/TaskPriority/TaskPriority.module.css","UI/TodoList/ListTasks/ListTask/TaskTitle/TaskTitle.module.css","UI/TodoList/TodoList.module.css","UI/AddItemForm/AddItemForm.module.css","UI/Tooltip/Tooltip.module.css","UI/TodoList/ListTasks/ListTasks.module.css","UI/TodoList/ListTasks/ListTask/TaskOrder/TaskOrder.module.css","UI/TodoList/ListFooter/ListFooter.module.css","Assets/img/book.png","UI/Error404/Error404.module.css","UI/Tooltip/Tooltip.js","UI/AddItemForm/AddItemForm.js","API/api.js","Redux/reducer.js","UI/Preloader/Preloader.js","UI/TodoList/ListHeader/ListTitle/ListTitle.js","UI/TodoList/ListHeader/ListHeader.js","UI/TodoList/ListTasks/ListTask/TaskPriority/TaskPriority.js","UI/TodoList/ListTasks/ListTask/TaskTitle/TaskTitle.js","UI/TodoList/ListTasks/ListTask/TaskOrder/TaskOrder.js","UI/TodoList/ListTasks/ListTask/ListTask.js","UI/TodoList/ListTasks/ListTasks.js","UI/TodoList/ListFooter/ListOrder/ListOrder.js","UI/TodoList/ListFooter/StatusFilter/StatusFilter.js","UI/TodoList/ListFooter/PagesLinks/PagesLinks.js","UI/TodoList/ListFooter/ListFooter.js","UI/TodoList/TodoList.js","UI/Error404/Error404.js","UI/App.js","Redux/store.js","index.js"],"names":["module","exports","Tooltip","props","useState","display","setDisplay","tooltipStyle","styles","tooltip","isHidden","className","onClick","hint","AddItemForm","state","inputError","itemTitle","setItemTitle","e","setState","currentTarget","value","newTitle","validationFunc","addItem","actionOnBlur","validationResult","actionOnKey","key","keyCode","newItemForm","this","error","onChange","onKeyDown","onBlur","autoFocus","type","placeholder","React","Component","instance","Axios","create","baseURL","withCredentials","headers","api","get","listId","title","put","post","putAfterItemId","delete","page","taskId","dataObj","initialState","lists","listsOrder","listsProgress","listsLoading","maxTasksCount","maxListsCount","reducer","action","countOnPage","renderBasis","RESTORE_LISTS","map","list","index","tasks","order","filterValue","ALL_S","footerProcessing","id","ADD_LIST","extendedList","UPDATE_LIST_TITLE","REORDER_LIST","reorderedLists","DELETE_LIST","filter","LIST_IS_LOADING","LIST_IN_PROCESS","process","SET_FILTER_VALUE","RESTORE_TASKS","totalCount","tasksOrder","task","renderIndex","SET_TASKS_PAGE","SET_TASKS_ORDER","DELETE_TASK","UPDATE_TASK","todoListId","TASK_IN_PROCESS","SET_FLTR_TASKS_PAGE","status","length","newTasksOrder","generalCount","DELETE_FLTR_TASK","SET_PREV_ACT_ID","prevActiveId","listIsLoadingAC","listInProcessAC","setTasksPageAC","taskInProcessAC","COMPLETED","statusObj","setFilterValueAC","setPrevActId","setFilteredPageAC","setFilteredPage","dispatch","then","Response","data","items","setAllTasksPage","getState","find","res","setTasksOrder","setTasksPage","Preloader","height","width","fill","userStyles","loaderStyle","slice","indexOf","svg","xmlns","xlink","version","viewBox","space","style","cx","cy","r","attributeName","dur","begin","repeatCount","keyTimes","values","ListTitle","editMode","updateListTitle","match","history","location","pathname","push","replace","setEditMode","setDisplayMode","editListTitle","equalTitles","listTitles","el","toLowerCase","trim","setTitleOnKey","list_title__input","list_title","listDeliting","titleUpdating","position","bottom","right","compose","connect","resultCode","updateListTitleAC","withRouter","ListHeader","deleteList","addTask","taskIsAdding","addTaskActive","totalTasksCount","list_header","list_header_add_form","delete_button","mdtp","item","deleteListAC","TaskPriority","setMode","priorityArray","priorityOptions","prior","getTaskPriority","priority","getTaskPriorityStyle","taskPriority","resetEditMode","defaultValue","findIndex","updateTask","TaskTitle","setTitle","setError","taskTitle","reorderTask","currPos","nextRenderPos","nextPos","undefined","targerList","getAfterId","t","currId","i","getTasksOrder","Math","ceil","response","tasksCount","selectMode","resetMode","optionArr","getOptions","taskOrder","updateObj","targetList","tasksLength","targetTask","updatedTask","delTaskFromPage","pagesCount","deleteTask","deleteFltrTask","taskInProcess","todoList_task","taskIsDone","isDoneCheck","completed","checked","ListTasks","restProps","tasksArray","listTasks","ListOrder","handleClickOutside","showOrder","toggleMode","reorderOnClick","reorderList","listsCount","pagesArr","numberStyle","orderNumber","active","getPagesArr","orderBtnStyle","pressed","listOrder","orderBox","currList","getReorderedLists","reorderListAC","onClickOutside","StatusFilter","toggleOnClick","setFilterValue","buttonAll","buttonActive","buttonCompleted","filterButtonStyle","frontButton","statusFilter","ACTIVE","filterButtons","disabled","l","setDisabled","useEffect","tasksPagesLinks","pagesLinks","disabledValue","linkStyle","pageLink","getPagesLinks","list_footer","TodoList","render","todoList","todoList_wrapper","restoreTasks","error404","App","restoreLists","listsRoutes","path","exact","allLists","allListsLinks","link","to","app","app_header","top","app_title","src","book","alt","app_header_icon","app_addItemForm","addList","app_header_navigation","app_lists","component","Error404","restoreTasksAC","store","createStore","composeWithDevTools","applyMiddleware","ThunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.09b70a04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusFilter\":\"StatusFilter_statusFilter__3SB93\",\"pressed\":\"StatusFilter_pressed__1w_GI\",\"filterButtons\":\"StatusFilter_filterButtons__2KFkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3Uwog\",\"app_title\":\"App_app_title___CSMS\",\"active\":\"App_active__2jTm6\",\"app_addItemForm\":\"App_app_addItemForm__3kjE9\",\"app_header\":\"App_app_header__2ML7u\",\"app_header_navigation\":\"App_app_header_navigation__2sBXL\",\"app_lists\":\"App_app_lists__XJiJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listOrder\":\"ListOrder_listOrder__3DpKe\",\"pressed\":\"ListOrder_pressed__2Ajuu\",\"orderBox\":\"ListOrder_orderBox__1W92q\",\"orderNumber\":\"ListOrder_orderNumber__SESdU\",\"active\":\"ListOrder_active__1HKTR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList_task\":\"ListTask_todoList_task__3IMxd\",\"taskIsDone\":\"ListTask_taskIsDone__2i1Al\",\"delete_button\":\"ListTask_delete_button__2ymOr\",\"isDoneCheck\":\"ListTask_isDoneCheck__2OTrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_header\":\"ListHeader_list_header__zEOiY\",\"list_header_add_form\":\"ListHeader_list_header_add_form__24FzJ\",\"delete_button\":\"ListHeader_delete_button__1N4Pl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksPagesLinks\":\"PagesLinks_tasksPagesLinks__2PUSo\",\"pageLink\":\"PagesLinks_pageLink__10VUZ\",\"active\":\"PagesLinks_active__T9EFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_title__input\":\"ListTitle_list_title__input__3Aoo0\",\"error\":\"ListTitle_error__3wcGy\",\"list_title\":\"ListTitle_list_title__s4OXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskPriority\":\"TaskPriority_taskPriority__2ACAr\",\"Middle\":\"TaskPriority_Middle__1hwuy\",\"Low\":\"TaskPriority_Low__3JO7V\",\"High\":\"TaskPriority_High__3FfI-\",\"Urgent\":\"TaskPriority_Urgent__2y1eq\",\"Later\":\"TaskPriority_Later__NpmW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskTitle\":\"TaskTitle_taskTitle__2cTEe\",\"error\":\"TaskTitle_error__3WKI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList_wrapper\":\"TodoList_todoList_wrapper__17l1B\",\"todoList\":\"TodoList_todoList__XmGvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newItemForm\":\"AddItemForm_newItemForm__3gOv1\",\"error\":\"AddItemForm_error__3PDJ1\",\"delete_button\":\"AddItemForm_delete_button__2221V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Tooltip_tooltip__2Bqiy\",\"isHidden\":\"Tooltip_isHidden__3Glcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listTasks\":\"ListTasks_listTasks__q-a1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskOrder\":\"TaskOrder_taskOrder__13iIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_footer\":\"ListFooter_list_footer__qaFYD\"};","module.exports = __webpack_public_path__ + \"static/media/book.6d8795b6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404\":\"Error404_error404__1VnlC\"};","import React, { useState } from 'react'\r\nimport styles from './Tooltip.module.css'\r\n\r\n\r\nconst Tooltip = (props) => {\r\n\r\n    const [display, setDisplay] = useState(true)\r\n    const hideToollip = () => setDisplay(false)\r\n\r\n    const tooltipStyle = display ? styles.tooltip : styles.isHidden\r\n\r\n    return(\r\n        <div className={tooltipStyle} onClick={hideToollip}>\r\n            {props.hint}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tooltip","import React from 'react'\r\nimport styles from './AddItemForm.module.css'\r\nimport Tooltip from '../Tooltip/Tooltip';\r\n\r\nclass AddItemForm extends React.Component {\r\n\r\n    state = {\r\n        inputError: false,\r\n        itemTitle: ''\r\n    }\r\n\r\n    setItemTitle = (e) => {\r\n        if (this.state.inputError) this.setState({ inputError: false });\r\n        this.setState({ itemTitle: e.currentTarget.value }, () => {\r\n            const newTitle = this.state.itemTitle\r\n            const validationResult = this.props.validationFunc \r\n                ? this.props.validationFunc(newTitle) : null\r\n            if (validationResult)\r\n                this.setState({ inputError: true })\r\n        });\r\n    }\r\n\r\n    addItem = () => {\r\n        if (this.state.itemTitle === '') this.setState({ inputError: true })\r\n        else\r\n            if (!this.state.inputError) {\r\n                this.props.addItem(this.state.itemTitle);\r\n                this.setState({ itemTitle: '' })\r\n            }\r\n    }\r\n\r\n    actionOnBlur = () => {\r\n        const validationResult = this.props.validationFunc \r\n                ? this.props.validationFunc(this.state.itemTitle) : null\r\n        if (this.state.inputError && !validationResult) {\r\n            this.setState({ inputError: false })\r\n        }\r\n    }\r\n\r\n    actionOnKey = (e) => { \r\n        if (e.key === 'Enter') this.addItem()\r\n        if ( e.keyCode === 27 ) {\r\n            this.setState({ itemTitle: '', inputError: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.newItemForm}>\r\n                <input\r\n                    className={this.state.inputError ? styles.error : ''}\r\n                    onChange={this.setItemTitle}\r\n                    onKeyDown={this.actionOnKey}\r\n                    onBlur={this.actionOnBlur}\r\n                    autoFocus={true}\r\n                    type=\"text\" placeholder={this.props.placeholder} value={this.state.itemTitle} />\r\n\r\n                <button onClick={this.addItem} >Add</button>\r\n                \r\n                { this.state.inputError && <Tooltip hint={this.props.hint} /> }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItemForm;","import Axios from 'axios';\r\n\r\n\r\nconst instance = Axios.create({ \r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/todo-lists',\r\n    withCredentials: true,\r\n    headers: { 'API-KEY': '5deaa5a9-bfea-4e80-bac8-d313181506e0' }\r\n })\r\n\r\nexport const api = {\r\n\r\n    restoreLists() {\r\n        return instance.get('')\r\n    },\r\n\r\n    updateListTitle( listId, title ) {\r\n        return instance.put(`/${listId}`, {title} )\r\n    },\r\n\r\n    addList(title) {\r\n        return instance.post('', { title } )\r\n    },\r\n\r\n    reorderList(listId, putAfterItemId) {\r\n        return instance.put(`/${listId}/reorder`, { putAfterItemId })\r\n    },\r\n\r\n    deleteList(listId) {\r\n        return instance.delete(`/${listId}`)\r\n    },\r\n\r\n    getTasks(listId, count = 10) {\r\n        return instance.get(`/${listId}/tasks?count=${count}`)\r\n    },\r\n\r\n    getAllTasks(listId) {\r\n        return instance.get(`/${listId}/tasks?count=100`)\r\n    },\r\n\r\n    getTasksOnPage(listId, page = 1) {\r\n        return instance.get(`/${listId}/tasks?count=10&page=${page}`)\r\n    },\r\n\r\n    addTask(listId, title) {\r\n        return instance.post(`/${listId}/tasks`, {title} )\r\n    },\r\n\r\n    updateTask(listId, taskId, dataObj) {\r\n        return instance.put(`/${listId}/tasks/${taskId}`, { ...dataObj } )\r\n    },\r\n\r\n    deleteTask(listId, taskId) {\r\n        return instance.delete(`/${listId}/tasks/${taskId}`)\r\n    },\r\n\r\n    reorderTask(listId, taskId, putAfterItemId) {\r\n        return instance.put(`/${listId}/tasks/${taskId}/reorder`, {putAfterItemId})\r\n    }\r\n}","import {api} from '../API/api'\r\n\r\nconst initialState =  {\r\n    lists: [],  \r\n    listsOrder: [],\r\n    listsProgress: { listsLoading: false },\r\n    maxTasksCount: 33,\r\n    maxListsCount: 10\r\n    /* lists: [\r\n        {\r\n            id: 0, title: 'Спорт', nextTaskId: 2, totalCount: 1, countOnPage: 10, filterValue: ALL_S,\r\n            page: 1, titleUpdating: false, taskIsAdding: false, listDeliting: false, footerProcessing: false,\r\n            tasksOrder: [], prevActiveID: 'some_id'\r\n            tasks: [{ id: 1, title: 'CSS', status: 0, priority: 'Middle', taskDeliting: false}]\r\n        }\r\n    ] */\r\n    };\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    const countOnPage = 10;\r\n    const renderBasis = (action.page - 1)*countOnPage +1;\r\n\r\n    switch (action.type) {\r\n\r\n  // ---------------------------List Reducers -------------------------------\r\n        \r\n        case RESTORE_LISTS:\r\n            return {\r\n                ...state,\r\n                lists: action.lists.map( (list, index) => {\r\n                    if (!list.tasks) return(\r\n                        { ...list, order: index, page: 1, countOnPage, filterValue: ALL_S, tasks: [],\r\n                            footerProcessing: false } \r\n                    )\r\n                    else return (\r\n                        { ...list, order: index, page: 1, countOnPage, filterValue: ALL_S,\r\n                            footerProcessing: false }\r\n                    )\r\n                } ),\r\n                listsOrder: action.lists.map( (list) => list.id )\r\n            }\r\n\r\n        case ADD_LIST:\r\n            const extendedList = { ...action.list, page: 1, countOnPage, filterValue: ALL_S, tasks: [] };\r\n            return {\r\n                ...state,\r\n                lists: [ extendedList, ...state.lists ].map((list, index) => ({...list, order: index}))\r\n            }\r\n\r\n        case UPDATE_LIST_TITLE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( (list) => {\r\n                    if (list.id === action.listId) return ({ ...list, title: action.title })\r\n                    else return list\r\n                } )\r\n            }\r\n\r\n        case REORDER_LIST:\r\n            return {\r\n                ...state,\r\n                lists: action.reorderedLists.map( (list, index) => ({...list, order: index }) ),\r\n                listsOrder: action.reorderedLists.map((list) => list.id)\r\n            }\r\n\r\n        case DELETE_LIST:\r\n            return {\r\n                ...state,\r\n                lists: \r\n                    state.lists\r\n                        .filter((list) => list.id !== action.listId)\r\n                        .map( (list, index) => ({...list, order: index}) )  // change list order\r\n            }\r\n\r\n        case LIST_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                listsProgress: {...state.listsProgress, listsLoading: action.value}\r\n            }\r\n\r\n        case LIST_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) return { ...list, [action.process]: action.value }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n        case SET_FILTER_VALUE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) return { ...list, filterValue: action.value }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n\r\n // ---------------------------Tasks Reducers-------------------------------\r\n       \r\n\r\n        case RESTORE_TASKS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(list => {\r\n                   if (list.id === action.listId)\r\n                        return {\r\n                            ...list,\r\n                            totalCount: action.totalCount,\r\n                            tasksOrder: !action.tasks ? [] \r\n                                : action.tasks.map((task) => task.id),\r\n                            tasks: !action.tasks ? [] \r\n                                : action.tasks.filter( (task, index) => index < countOnPage )\r\n                                    .map( (task, index) => ({...task, renderIndex: index + 1 }) )\r\n                        }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n        case SET_TASKS_PAGE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( (list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: action.totalCount ? action.totalCount : list.totalCount,\r\n                            page: action.page,\r\n                            tasks: action.tasks\r\n                                .map((task, index) => ({ ...task, renderIndex: renderBasis + index }))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case SET_TASKS_ORDER:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return { ...list, tasksOrder: action.tasksOrder }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: list.totalCount-1,\r\n                            tasksOrder: list.tasksOrder.filter((id) => id !== action.taskId),\r\n                            tasks:\r\n                                list.tasks.filter((task) => task.id !== action.taskId)\r\n                                    .map( (task, index) => ({ ...task, renderIndex: renderBasis + index })  )\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case UPDATE_TASK:\r\n\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.task.todoListId) {\r\n                        return {\r\n                            ...list,\r\n                            tasks: list.tasks.map((task) => {\r\n                                if (task.id === action.task.id) {\r\n                                    return { ...task, ...action.task }\r\n                                } else return task\r\n                            })\r\n                        }\r\n                    } else return list;\r\n                })\r\n            }\r\n        \r\n        case TASK_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            tasks: list.tasks.map( (task) => {\r\n                                if (task.id === action.taskId) { \r\n                                    return {...task, [action.process]:action.value}\r\n                                }\r\n                                else return task\r\n                            } )\r\n                        }\r\n                    }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n\r\n// ------------------------ Filtered Tasks Reducers --------------------\r\n\r\n\r\n        case SET_FLTR_TASKS_PAGE:\r\n            const totalCount =          // get tasks count on filtered page\r\n                action.tasks.filter((task) => task.status === action.status).length;\r\n            const newTasksOrder = action.tasks\r\n                .filter((task) => task.status === action.status)\r\n                .map((task) => task.id)\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            page: action.page,\r\n                            totalCount, \r\n                            generalCount: action.tasks.length,  // general tasks count\r\n                            tasksOrder: newTasksOrder,\r\n                            tasks: action.tasks\r\n                                .filter((task) => task.status === action.status)\r\n                                .map((task, index) => ({ ...task, renderIndex: index + 1}))\r\n                                .filter((task, index) =>\r\n                                    (index >= (action.page - 1) * countOnPage && index < action.page * countOnPage))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case DELETE_FLTR_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: list.totalCount -1,\r\n                            generalCount: list.generalCount -1,\r\n                            tasksOrder: list.tasksOrder.filter((id) => id !== action.taskId) ,\r\n                            tasks: list.tasks.filter((task) => task.id !== action.taskId)\r\n                                .map((task, index) => ({ ...task, renderIndex: renderBasis + index }))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case SET_PREV_ACT_ID:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            prevActiveId: action.prevActiveId\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;\r\n\r\n// ------------------------------ TEMPORARY ----------------------------------\r\n\r\n\r\n\r\n\r\n\r\n// --------------------------- Lists Actions -----------------------------------\r\n\r\n\r\nconst LIST_IS_LOADING = 'LIST_IS_LOADING'\r\nconst listIsLoadingAC = (value) => ({ type: LIST_IS_LOADING, value })\r\n\r\nconst LIST_IN_PROCESS = 'LIST_IN_PROCESS'\r\nconst listInProcessAC = (listId, process, value) => {\r\n    return({type: LIST_IN_PROCESS, listId, process, value})\r\n}\r\n\r\n\r\nconst RESTORE_LISTS = 'RESTORE-LISTS';\r\nconst restoreListsAC = (lists) => ({ type: RESTORE_LISTS, lists })\r\n\r\nexport const restoreLists = () => (dispatch) => {\r\n    dispatch(listIsLoadingAC(true))\r\n    api.restoreLists()\r\n        .then( response => {\r\n            dispatch(restoreListsAC(response.data));\r\n            dispatch(listIsLoadingAC(false))\r\n        })\r\n}\r\n\r\n\r\nconst ADD_LIST = 'ADD_LIST';\r\nconst addListAC = (list) => ({type: ADD_LIST, list})\r\n\r\nexport const addList = (title) => (dispatch) => {\r\n    dispatch(listIsLoadingAC(true))\r\n    api.addList(title)\r\n            .then(Response => {\r\n                dispatch(addListAC(Response.data.data.item))\r\n                dispatch(listIsLoadingAC(false))\r\n            })\r\n}\r\n\r\nconst UPDATE_LIST_TITLE = 'UPDATE_LIST_TITLE';\r\nconst updateListTitleAC = (listId, title) => ({ type: UPDATE_LIST_TITLE, listId, title })\r\n\r\nexport const updateListTitle = (listId, title) => (dispatch) => {\r\n    dispatch(listInProcessAC(listId, 'titleUpdating', true))\r\n    api.updateListTitle(listId, title)\r\n        .then(Response => {\r\n            if (Response.data.resultCode === 0) {\r\n                dispatch(updateListTitleAC(listId, title))\r\n                dispatch(listInProcessAC(listId, 'titleUpdating', false))\r\n            }\r\n        })\r\n}\r\n\r\n\r\nconst DELETE_LIST = 'DELETE_LIST';\r\nconst deleteListAC = (listId) => ({type: DELETE_LIST, listId})\r\n\r\nexport const deleteList = (listId) => (dispatch) => {\r\n    dispatch(listInProcessAC(listId, 'listDeliting', true))\r\n    return api.deleteList(listId)\r\n            .then((res) => {\r\n                if (res.data.resultCode === 0) {\r\n                    dispatch(deleteListAC(listId))\r\n                }\r\n            }).then( () => dispatch(listInProcessAC(listId, 'listDeliting', false)) )\r\n}\r\n\r\n\r\n\r\nconst REORDER_LIST = 'REORDER_LIST'\r\nconst reorderListAC = (reorderedLists) => ({type: REORDER_LIST, reorderedLists })\r\n\r\nexport const reorderList = (listId, currPos, nextRenderPos) => (dispatch, getState) => {\r\n    \r\n    const nextPos = nextRenderPos !== ( null || undefined ) ? +nextRenderPos - 1 : null   //define next element position\r\n   \r\n    const getAfterId = () => {\r\n        // if nextRenderPos undefined or null element position should'n change\r\n        // this is insurence check or for case of using reorderListAC\r\n        if (nextPos === null && currPos === 0) return null\r\n        if (nextPos === null) return getState().listsOrder[currPos-1]\r\n        \r\n        // if next position defined find 'put after element' Id\r\n        if (nextPos === 0) return null\r\n        if (nextPos <= +currPos) return getState().listsOrder[nextPos-1]\r\n        if (nextPos > +currPos) return getState().listsOrder[nextPos]\r\n    }\r\n    \r\n    const getReorderedLists = () => {\r\n        const lists = [...getState().lists]\r\n        if (nextPos < currPos) {\r\n            const currList = lists[currPos]\r\n            for (let i = currPos-1; i >= nextPos; i--) {\r\n                lists[i+1] = lists[i]\r\n            }\r\n            lists[nextPos] = currList\r\n            return lists\r\n        }\r\n        if (nextPos > currPos) {\r\n            const currList = lists[currPos]\r\n            for (let i = currPos; i < nextPos; i++) {\r\n                lists[i] = lists[i+1]\r\n            }\r\n            lists[nextPos] = currList\r\n            return lists\r\n        }\r\n        return lists    // default value for unchanged lists ---> insurance check\r\n    }\r\n\r\n    if ( nextPos !== null && nextPos !== +currPos ) {\r\n        const putAfterItemId = getAfterId()              // get putAfterItemId for API request\r\n        const reorderedLists = getReorderedLists()       // get reordered lists for dispatch\r\n\r\n        dispatch(listIsLoadingAC(true))\r\n        api.reorderList(listId, putAfterItemId)\r\n            .then((response) => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(reorderListAC(reorderedLists))\r\n                    dispatch(listIsLoadingAC(false))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// --------------------------- Tasks Actions -----------------------------------\r\n\r\n\r\nconst RESTORE_TASKS = 'RESTORE_TASKS';\r\nconst restoreTasksAC = (listId, tasks, totalCount) => ({ type: RESTORE_TASKS, listId, tasks, totalCount })\r\n\r\nexport const restoreTasks = (listId) => (dispatch) => {\r\n    api.getAllTasks(listId)\r\n            .then(Response => {\r\n                dispatch(restoreTasksAC(listId, Response.data.items, Response.data.totalCount))\r\n            })\r\n}\r\n\r\nconst SET_TASKS_PAGE = 'SET_TASKS_PAGE';\r\nexport const setTasksPageAC = (listId, page, tasks, totalCount) =>\r\n    ({ type: SET_TASKS_PAGE, listId, page, tasks, totalCount })\r\n\r\nconst DELETE_TASK = 'DELETE_TASK';\r\nexport const deleteTask = (listId, taskId, page) => ({ type: DELETE_TASK, listId, taskId, page })\r\n\r\nconst UPDATE_TASK = 'UPDATE_TASK';\r\nconst updateTaskAC = (task) => ({type: UPDATE_TASK, task })\r\n\r\nconst TASK_IN_PROCESS = 'TASK_IN_PROCESS'\r\nconst taskInProcessAC = (listId, taskId, process, value) => \r\n        ({type: TASK_IN_PROCESS, listId, taskId, process, value})\r\n\r\n\r\n// ------------------------ Filtered Tasks Actions ----------------------\r\n\r\n\r\n// status filter values\r\nexport const ALL_S = 'ALL_S'\r\nexport const COMPLETED = 'COMPLETED'\r\nexport const ACTIVE = 'ACTIVE'\r\n\r\nexport const statusObj = {completed: 1, active: 0}\r\n\r\n\r\nconst SET_FILTER_VALUE = 'SET_FILTER_VALUE'\r\nconst setFilterValueAC = (listId, value) => ({type: SET_FILTER_VALUE, listId, value})\r\n\r\nexport const setFilterValue = (listId, filterValue) => (dispatch, getState) => {\r\n    \r\n    // get tasks id before the first completed task in list and save it to state\r\n    // for reorderTasks in case of filterValue === COMPLETED\r\n    const targetList = getState().lists.find((l) => l.id === listId)\r\n    const currFilter = targetList.filterValue\r\n\r\n    if (currFilter !== COMPLETED) {\r\n        const firstComplInd = targetList.tasks.findIndex((t) => t.status === statusObj.completed)\r\n        const prevActiveId = (firstComplInd === 0 || targetList.tasks.length === 0)\r\n            ? null\r\n            : targetList.tasks[0].id\r\n        dispatch(setPrevActId(listId, prevActiveId))\r\n    }\r\n    // <-----\r\n    \r\n    dispatch(setTasksPage(listId, filterValue, 1))  \r\n    // !!! dispatch(setTasksPage(...)) must be called before dispatch(setFelterValueAC(...))\r\n    // to get correct current filterValue in setAllTasksPage call\r\n    \r\n    dispatch( setFilterValueAC(listId, filterValue) )\r\n}\r\n\r\n\r\nconst SET_PREV_ACT_ID = 'SET_PREV_ACT_ID'\r\nconst setPrevActId = (listId, prevActiveId) => ({type: SET_PREV_ACT_ID, listId, prevActiveId})\r\n\r\nconst SET_FLTR_TASKS_PAGE = 'SET_FLTR_TASKS_PAGE';\r\nconst setFilteredPageAC = (listId, page, tasks, status) =>\r\n    ({ type: SET_FLTR_TASKS_PAGE, listId, page, tasks, status })\r\n\r\nconst DELETE_FLTR_TASK = 'DELETE_FLTR_TASK';\r\nconst deleteFltrTask = (listId, taskId, page) => ({ type: DELETE_FLTR_TASK, listId, taskId, page })\r\n\r\n\r\n\r\n// set tasks page on \"Active\" or \"Completed\" filter mode\r\nconst setFilteredPage = (listId, page, status) => (dispatch) => {\r\n    return api.getAllTasks(listId)\r\n        .then(Response => {\r\n            const tasks = Response.data.items;\r\n            dispatch(setFilteredPageAC(listId, page, tasks, status))\r\n        })\r\n}\r\n\r\n// set tasks page on \"All\" filter mode\r\nconst setAllTasksPage = (listId, page) => (dispatch, getState) => {\r\n    \r\n    //  get previous filterValue\r\n    const { filterValue: prevFilterVal } = getState().lists.find((list) => list.id === listId)\r\n\r\n    switch (prevFilterVal) {\r\n\r\n        // if previous filter was 'Active' or 'Completed' --> set new tasksOrder\r\n        case COMPLETED:\r\n        case ACTIVE:\r\n            return api.getAllTasks(listId)\r\n                .then((res) => {\r\n                    const newTasksOrder = res.data.items.map((task) => task.id)\r\n                    dispatch(setTasksOrder(listId, newTasksOrder))\r\n                    api.getTasksOnPage(listId, page)\r\n                        .then(Response => {\r\n                            const { items: tasks, totalCount } = Response.data;\r\n                            dispatch(setTasksPageAC(listId, page, tasks, totalCount))\r\n                        })\r\n                })\r\n\r\n        default:      // case previous filterValue === ALL_S\r\n            return api.getTasksOnPage(listId, page)\r\n                .then(Response => {\r\n                    const { items: tasks, totalCount } = Response.data;\r\n                    dispatch(setTasksPageAC(listId, page, tasks, totalCount))\r\n                })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setTasksPage = (listId, filterValue, page) => (dispatch) => {\r\n    \r\n    dispatch( listInProcessAC(listId, 'footerProcessing', true) )\r\n\r\n    let status = statusObj.active\r\n    switch (filterValue) {\r\n        \r\n        case ACTIVE:\r\n            dispatch(setFilteredPage(listId, page, status))\r\n                .then(() => dispatch(listInProcessAC(listId, 'footerProcessing', false)))\r\n        break\r\n\r\n        case COMPLETED:\r\n            status = statusObj.completed\r\n            dispatch(setFilteredPage(listId, page, status))\r\n                .then(() => dispatch(listInProcessAC(listId, 'footerProcessing', false)))\r\n        break\r\n\r\n        default:    //case filterValue === ALL_S\r\n            dispatch(setAllTasksPage(listId, page))\r\n                .then(() => dispatch(listInProcessAC(listId, 'footerProcessing', false)))\r\n    }\r\n}\r\n\r\n\r\nexport const addTask = (listId, title) => (dispatch, getState) => {\r\n\r\n    // get current tasksOrder\r\n    const tasksOrder = getState().lists.find((list) => list.id === listId).tasksOrder\r\n\r\n    dispatch(listInProcessAC(listId, 'taskIsAdding', true))\r\n    return api.addTask(listId, title)\r\n        .then((Response) => {\r\n            if (Response.data.resultCode === 0) {\r\n                const newTaskId = Response.data.data.item.id\r\n                const newTasksOrder = [newTaskId, ...tasksOrder]\r\n                dispatch(setTasksOrder(listId, newTasksOrder))\r\n                dispatch(setAllTasksPage(listId, 1))\r\n                    .then(() => {\r\n                        dispatch(setFilterValueAC(listId, ALL_S))\r\n                        dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n                    })\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport const addTaskActive = (listId, title) => (dispatch, getState) => {\r\n\r\n    // get current tasksOrder\r\n    const tasksOrder = getState().lists.find((list) => list.id === listId).tasksOrder\r\n\r\n    dispatch( listInProcessAC(listId, 'taskIsAdding', true) )\r\n    return api.addTask(listId, title)\r\n        .then(Response => {\r\n            if (Response.data.resultCode === 0) {\r\n                const newTaskId = Response.data.data.item.id\r\n                const newTasksOrder = [newTaskId, ...tasksOrder]\r\n                dispatch(setTasksOrder(listId, newTasksOrder))\r\n                api.getAllTasks(listId)\r\n                    .then((Response) => {\r\n                        const status = statusObj.active\r\n                        const tasks = Response.data.items;\r\n                        dispatch( setFilteredPageAC(listId, 1, tasks, status) )\r\n                        dispatch( listInProcessAC(listId, 'taskIsAdding', false) )\r\n                    })\r\n            }\r\n        })\r\n}\r\n\r\nexport const delTaskFromPage = (listId, taskId) => (dispatch, getState) => {\r\n    \r\n    // extract the target object from lists array & get all required parametrs\r\n    const targetList = getState().lists.find( (item) => item.id === listId )\r\n    const {page, filterValue, totalCount, countOnPage} = targetList\r\n    const tasksLength = targetList.tasks.length\r\n    const pagesCount = totalCount ? Math.ceil(totalCount/countOnPage) : 1\r\n    \r\n    dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', true) )\r\n    api.deleteTask(listId, taskId)\r\n            .then((Response) => {\r\n                if (Response.data.resultCode === 0) {\r\n                    // delete task from not last page\r\n                    if (tasksLength === 10 && page < pagesCount) {\r\n                        if (filterValue === ALL_S) {\r\n                            dispatch( setAllTasksPage(listId, page) )\r\n                        } else {\r\n                            const status = filterValue === COMPLETED \r\n                                ? statusObj.completed\r\n                                : statusObj.active\r\n                            dispatch( setFilteredPage(listId, page, status) )\r\n                        }\r\n                    } \r\n                    // delete last task from not first page\r\n                    if (tasksLength === 1 && page !== 1) {\r\n                        if (filterValue === ALL_S) {\r\n                            dispatch( setAllTasksPage(listId, page-1) )\r\n                        } else {\r\n                            const status = filterValue === COMPLETED \r\n                                ? statusObj.completed\r\n                                : statusObj.active\r\n                            dispatch( setFilteredPage(listId, page - 1, status) )\r\n                        }\r\n\r\n                    }\r\n                    // delete last task from first page\r\n                    if (tasksLength === 1 && page === 1 && filterValue !== ALL_S) {\r\n                        dispatch( setAllTasksPage(listId, 1) )\r\n                            .then(() => dispatch( setFilterValueAC(listId, ALL_S) ) )\r\n                    }\r\n                    // regular delete task case -> must be located at the end of chain\r\n                    if (filterValue === ALL_S) {\r\n                        dispatch( deleteTask(listId, taskId, page) )\r\n                    } else {\r\n                        dispatch( deleteFltrTask(listId, taskId, page) )\r\n                    }\r\n                }\r\n            }).then( () => dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', false) ) )\r\n}\r\n\r\n\r\nexport const updateTask = (listId, taskId, updateObj) => (dispatch, getState) => {\r\n\r\n    // extract the target object from lists array & get all required parametrs\r\n    const targetList = getState().lists.find( (item) => item.id === listId )\r\n    const { page, filterValue } = targetList\r\n    const tasksLength = targetList.tasks.length\r\n    const targetTask = targetList.tasks.find( (item) => item.id === taskId )\r\n    const updatedTask = { ...targetTask, ...updateObj }\r\n    \r\n    dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', true) )\r\n  \r\n    api.updateTask(listId, taskId, updatedTask)\r\n        .then(Response => {\r\n            if (Response.data.resultCode === 0) {\r\n                if (filterValue === ALL_S) {\r\n                    dispatch(updateTaskAC(Response.data.data.item))\r\n                } else {\r\n                    api.getAllTasks(listId)\r\n                        .then((Response) => {\r\n                            if (!Response.data.error) {\r\n                                const tasks = Response.data.items;\r\n                                const status = filterValue === COMPLETED \r\n                                    ? statusObj.completed \r\n                                    : statusObj.active\r\n                                // set previous filtered page\r\n                                if (tasksLength === 1 && page !== 1 && updateObj.status !== undefined) {\r\n                                    dispatch(setFilteredPageAC(listId, page - 1, tasks, status))\r\n                                } else if (tasksLength === 1 && page === 1 && updateObj.status !== undefined) {\r\n                                        dispatch(setAllTasksPage(listId, 1))\r\n                                        dispatch(setFilterValueAC(listId, ALL_S))\r\n                                } else\r\n                                    dispatch(setFilteredPageAC(listId, page, tasks, status))\r\n                            }\r\n                        })\r\n                }\r\n            }\r\n        }).then( () => dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', false) ) )\r\n}\r\n\r\n\r\nconst SET_TASKS_ORDER = 'SET_TASKS_ORDER'\r\nconst setTasksOrder = (listId, tasksOrder) => ({ type: SET_TASKS_ORDER, listId, tasksOrder })\r\n\r\n\r\nexport const reorderTask = (listId, taskId, currPos, nextRenderPos) => (dispatch, getState) => {\r\n\r\n    const nextPos = nextRenderPos !== (null || undefined) ? +nextRenderPos - 1 : null   //define next element position\r\n    const targerList = getState().lists.find((list) => list.id === listId)\r\n\r\n    const getAfterId = () => {\r\n        const { filterValue, prevActiveId } = targerList\r\n        // if nextRenderPos undefined or null element position should'n change\r\n        // this is insurence check or for case of using reorderTaskAC\r\n        if (nextPos === null && currPos === 0) return null\r\n        if (nextPos === null) return targerList.tasksOrder[currPos - 1]\r\n\r\n        // if next position defined find 'put after element' Id\r\n        if (filterValue === COMPLETED && nextPos === 0) return prevActiveId\r\n        if (nextPos === 0) return null\r\n        if (nextPos <= +currPos) return targerList.tasksOrder[nextPos - 1]\r\n        if (nextPos > +currPos) return targerList.tasksOrder[nextPos]\r\n    }\r\n\r\n    const getTasksOrder = () => {\r\n        const tasksOrder = [...targerList.tasksOrder]\r\n        if (nextPos < currPos) {\r\n            const currId = tasksOrder[currPos]\r\n            for (let i = currPos - 1; i >= nextPos; i--) {\r\n                tasksOrder[i + 1] = tasksOrder[i]\r\n            }\r\n            tasksOrder[nextPos] = currId\r\n            return tasksOrder\r\n        }\r\n        if (nextPos > currPos) {\r\n            const currId = tasksOrder[currPos]\r\n            for (let i = currPos; i < nextPos; i++) {\r\n                tasksOrder[i] = tasksOrder[i + 1]\r\n            }\r\n            tasksOrder[nextPos] = currId\r\n            return tasksOrder\r\n        }\r\n        return tasksOrder    // default value for unchanged lists ---> insurance check\r\n    }\r\n\r\n\r\n    // reorder functional block\r\n    if (nextPos !== null && nextPos !== +currPos) {\r\n        const putAfterItemId = getAfterId()              // get putAfterItemId for API request\r\n        const { countOnPage, filterValue } = targerList\r\n        // determine status of filtered tasks for dispatch(setFilteredPage(...))\r\n        const { status } = targerList.tasks.find((t) => t.id === taskId )\r\n        const tasksOrder = getTasksOrder()               // determine new tasksOrder\r\n\r\n        const page = nextRenderPos ? Math.ceil(nextRenderPos / countOnPage) : 1\r\n        // determine which page will appear on after the reorder\r\n\r\n        dispatch(listInProcessAC(listId, 'taskIsAdding', true))\r\n        api.reorderTask(listId, taskId, putAfterItemId)\r\n            .then((response) => {\r\n                if (response.data.resultCode === 0) {\r\n                    if (filterValue === ALL_S) {\r\n                        dispatch(setAllTasksPage(listId, page))\r\n                            .then(() => {\r\n                                dispatch(setTasksOrder(listId, tasksOrder))\r\n                                dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n                            })\r\n                    }\r\n                    if (filterValue === ACTIVE || filterValue === COMPLETED) {\r\n                        dispatch(setFilteredPage(listId, page, status))\r\n                        .then(() => {\r\n                            // dispatch(setTasksOrder(listId, tasksOrder))\r\n                            dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nconst Preloader = ({ height, width, fill, ...userStyles }) => {\r\n\r\n    const currentWidth = () => {\r\n        if ( width ) return width\r\n        if ( !width && height ) {\r\n            const wNum = +height.slice(0, height.indexOf('p'))*3.65\r\n            return (wNum+'px')\r\n        }\r\n        if ( !width && !height ) return '252px'\r\n    }\r\n    \r\n    const currentHeight = () => {\r\n        if ( height ) return height\r\n        if ( !height && width ) {\r\n            const hNum = +width.slice(0, width.indexOf('p'))*0.27\r\n            return (hNum+'px')\r\n        }\r\n        if ( !height && !width ) return '69px'\r\n    }\r\n\r\n    const loaderStyle = {\r\n        ...userStyles,\r\n        width: currentWidth(),\r\n        height: currentHeight()\r\n    };\r\n      \r\n    return(\r\n            <svg svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" version=\"1.0\" viewBox=\"0 0 128 35\" space=\"preserve\" style={loaderStyle}>\r\n                <g><circle fill={fill} cx=\"17.5\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.167;0.5;0.668;1\" values=\"0.3;1;1;0.3;0.3\"/></g>\r\n                <g><circle fill={fill} cx=\"110.5\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.334;0.5;0.835;1\" values=\"0.3;0.3;1;1;0.3\"/></g>\r\n                <g><circle fill={fill} cx=\"64\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.167;0.334;0.668;0.835;1\" values=\"0.3;0.3;1;1;0.3;0.3\"/></g>\r\n            </svg>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './ListTitle.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { updateListTitle } from '../../../../Redux/reducer';\r\nimport Preloader from '../../../Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Tooltip from '../../../Tooltip/Tooltip';\r\n\r\n\r\nclass ListTitle extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: '',\r\n        inputError: false,\r\n    }\r\n\r\n    updateListTitle = (title) => {\r\n        if (!title.match(/%/)) {\r\n            this.props.updateListTitle(this.props.listId, title)\r\n            if (this.props.history.location.pathname !== '/') {\r\n                this.props.history.push(`/${title.replace(/\\s|\\?|#/g, '-')}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    setEditMode = () => this.setState({ editMode: true, title: this.props.title })\r\n    setDisplayMode = () => {\r\n        if (this.state.inputError) this.setState({ inputError: false })\r\n        this.setState({ editMode: false })\r\n    }\r\n\r\n    editListTitle = (e) => {\r\n        const newTitle = e.currentTarget.value;\r\n        const equalTitles = this.props.listTitles.find((el) => {\r\n            return (el.title.toLowerCase() === newTitle.toLowerCase() && el.id !== this.props.listId)\r\n        })\r\n        \r\n        if (this.state.inputError) this.setState({ inputError: false });\r\n        if (newTitle.trim() === '' || newTitle.length > 100 \r\n            || newTitle.match(/%/) || equalTitles) {\r\n            this.setState({ title: newTitle, inputError: true })\r\n        } else this.setState({ title: newTitle })\r\n    }\r\n\r\n    setTitleOnKey = (e) => {\r\n        const title = e.currentTarget.value;\r\n        if (e.key === 'Enter' && !this.state.inputError) {\r\n            this.setDisplayMode()\r\n            this.updateListTitle(title);\r\n        }\r\n        if (e.keyCode === 27) {\r\n            this.setDisplayMode()\r\n            if (this.state.inputError) this.setState({ inputError: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const loaderStyle = {\r\n            fill: 'rgb(85, 47, 11)', height: '10px', position: 'absolute', bottom: '-12px', right: '43%'\r\n        }\r\n\r\n        const listTitleHint = \r\n            'Please, check the % sign is missing and enter a unique title between 1 and 100 chars long, or press \"Esc\" to exit'\r\n\r\n        if (this.state.editMode) {\r\n            return (\r\n                <div className={styles.list_title__input}>\r\n                    <input type=\"text\"\r\n                        value={this.state.title}\r\n                        className={this.state.inputError ? styles.error : ''}\r\n                        onChange={this.editListTitle}\r\n                        autoFocus={true}\r\n                        onBlur={this.setDisplayMode}\r\n                        onKeyDown={this.setTitleOnKey} />\r\n                    \r\n                    { this.state.inputError && <Tooltip hint={listTitleHint} /> }\r\n                </div>\r\n            )\r\n        } else return (\r\n            <div className={styles.list_title}>\r\n                <span onClick={this.setEditMode}>{this.props.title}</span>\r\n                {(this.props.listDeliting || this.props.titleUpdating)\r\n                    && <Preloader {...loaderStyle} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(null, { updateListTitle }),\r\n    withRouter\r\n)(ListTitle)","import React from 'react';\r\nimport styles from './ListHeader.module.css'\r\nimport { connect } from 'react-redux';\r\nimport AddItemForm from '../../AddItemForm/AddItemForm';\r\nimport ListTitle from './ListTitle/ListTitle';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport { addTask, addTaskActive, deleteList, ALL_S, COMPLETED, ACTIVE } from '../../../Redux/reducer';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ListHeader extends React.Component {\r\n\r\n    deleteList = () => {\r\n        this.props.deleteList(this.props.listId)\r\n            .then(() => {\r\n                if (this.props.history.location.pathname !== '/') {\r\n                    this.props.history.push('/')\r\n                }\r\n            })\r\n    }\r\n\r\n    addTask = (title) => {\r\n        const { listId, filterValue, taskIsAdding } = this.props;\r\n\r\n        if ( (filterValue === COMPLETED || filterValue === ALL_S) && !taskIsAdding )  {\r\n            this.props.addTask(listId, title)\r\n        }\r\n\r\n        if (filterValue === ACTIVE && !taskIsAdding) {\r\n            this.props.addTaskActive(listId, title)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {listId, title, page, totalCount, filterValue, listTitles, maxTasksCount,\r\n            generalCount, listDeliting, titleUpdating, taskIsAdding} = this.props\r\n        \r\n            const totalTasksCount = filterValue === ALL_S ? totalCount : generalCount\r\n\r\n        const taskTitleValidation = (newTitle) => {\r\n            if (newTitle === '' || newTitle.length > 100 || newTitle.trim() === '') {\r\n                return true\r\n            }\r\n        }\r\n\r\n        const loaderStyle ={\r\n            fill: 'rgb(85, 47, 11)', height: '8px', position: 'absolute', right: '50%', bottom: '-14px'}\r\n\r\n            const addTaskHint = \r\n            'Please, enter a title with length between 1 to 100 chars or press \"Esc\" to reset'\r\n\r\n        return (\r\n            <div className={styles.list_header}>\r\n                <ListTitle listId={listId} title={title} page={page} listTitles={listTitles}\r\n                    listDeliting={listDeliting} titleUpdating={titleUpdating} />\r\n                {/* форма добавления задач */}\r\n                {totalTasksCount < maxTasksCount\r\n                    && <div className={styles.list_header_add_form}>\r\n                        <AddItemForm\r\n                            placeholder='Add new task'\r\n                            hint={addTaskHint}\r\n                            validationFunc={taskTitleValidation}\r\n                            addItem={this.addTask} />\r\n                        {taskIsAdding && <Preloader {...loaderStyle} />}\r\n                    </div>}\r\n                \r\n                {/*delete icon display modes */}\r\n                { !listDeliting\r\n                    &&<i className={'fa fa-close ' + styles.delete_button} onClick={this.deleteList} />\r\n                }\r\n                { listDeliting\r\n                    &&<i className={'fa fa-close ' + styles.delete_button}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mdtp = { addTask, addTaskActive, deleteList }\r\n\r\nexport default compose (\r\n    connect(null, mdtp ),\r\n    withRouter\r\n)(ListHeader);\r\n\r\n","import React, { useState } from 'react'\r\nimport styles from './TaskPriority.module.css'\r\n\r\n\r\nconst TaskPriority = (props) => {\r\n\r\n    const [editMode, setMode ] = useState(false)\r\n\r\n    const setTaskPriority = (e) => {\r\n        const priority = priorityArray.findIndex((prior) => prior === e.currentTarget.value);\r\n        props.updateTask({ priority });\r\n        resetEditMode()\r\n    }\r\n\r\n    const priorityArray = ['Low', 'Middle', 'High', 'Urgent', 'Later']\r\n\r\n    const priorityOptions = priorityArray.map(prior =>\r\n        <option className={styles[prior]} key={prior} >{prior}</option>)\r\n\r\n    const getTaskPriority = () => priorityArray[props.priority]\r\n    const getTaskPriorityStyle = () => styles[ priorityArray[props.priority] ] + ' ' + styles.taskPriority\r\n\r\n    const setEditMode = () => setMode(true)\r\n    const resetEditMode = () => setMode(false)\r\n\r\n    const priorityOnKey = (e) => { if (e.keyCode === 27) resetEditMode() }\r\n\r\n    if (!editMode) {\r\n        return (\r\n            <span onClick={setEditMode} className={getTaskPriorityStyle()}>\r\n                {getTaskPriority()} &nbsp;\r\n            </span>\r\n        )\r\n    } else {\r\n        return (\r\n            <select\r\n                defaultValue={getTaskPriority()}\r\n                className={getTaskPriorityStyle()}\r\n                onChange={setTaskPriority}\r\n                onBlur={resetEditMode}\r\n                onKeyDown={priorityOnKey}\r\n                autoFocus={true} > {priorityOptions} </select>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskPriority","import React, { useState } from 'react'\r\nimport styles from './TaskTitle.module.css'\r\nimport Tooltip from '../../../../Tooltip/Tooltip'\r\n\r\n\r\nconst TaskTitle = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [title, setTitle] = useState('')\r\n    const [inputError, setError] = useState(false)\r\n\r\n\r\n    const setTitleEditMode = () => {\r\n        setEditMode(true)\r\n        setTitle(props.title)\r\n    }\r\n\r\n    const setDisplayMode = () => {\r\n        if (inputError) setError(false)\r\n        setEditMode(false)\r\n    }\r\n\r\n    const editTaskTitle = (e) => {\r\n        const newTitle = e.currentTarget.value;\r\n        if (inputError) setError(false)\r\n        if (newTitle.trim() === '' || newTitle.length > 100) {\r\n            setTitle(newTitle)\r\n            setError(true)\r\n        } else setTitle(newTitle)\r\n    }\r\n\r\n    const setTitleOnKey = (e) => {\r\n        const title = e.currentTarget.value;\r\n        if (e.key === 'Enter' && !inputError) {\r\n            props.updateTask({ title });\r\n            setDisplayMode()\r\n        }\r\n        if (e.keyCode === 27) {\r\n            setDisplayMode()\r\n            if (inputError) setError(false)\r\n        }\r\n    }\r\n\r\n    const taskTitleHint = \r\n            'Please, enter a title with length between 1 to 100 chars or press \"Esc\" to reset'\r\n\r\n\r\n    if (!editMode) {\r\n        return (\r\n            <span onClick={setTitleEditMode} className={styles.taskTitle}>{props.title}, </span>\r\n        )\r\n    } else {\r\n        return (\r\n            <span className={styles.taskTitle}>\r\n                <input type=\"text\"\r\n                    value={title}\r\n                    className={inputError ? styles.error : ''}\r\n                    onChange={editTaskTitle}\r\n                    autoFocus={true}\r\n                    onBlur={setDisplayMode}\r\n                    onKeyDown={setTitleOnKey} />\r\n                { inputError && <Tooltip hint={taskTitleHint} /> }\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskTitle","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './TaskOrder.module.css'\r\nimport { reorderTask } from '../../../../../Redux/reducer'\r\n\r\n\r\nconst TaskOrder = ({ listId, taskId, tasksCount, renderIndex, reorderTask }) => {\r\n\r\n    const [selectMode, setMode] = useState(false)\r\n    const setOnMode = () => setMode(true)\r\n    const resetMode = () => setMode(false)\r\n    const resetOnKey = (e) => { if (e.keyCode === 27) resetMode() }\r\n\r\n    const reorderOnSelect = (e) => {\r\n        const nextRenderPos = e.currentTarget.value\r\n        const currPos = renderIndex - 1\r\n        reorderTask(listId, taskId, currPos, nextRenderPos)\r\n        resetMode()\r\n    }\r\n\r\n    const getOptions = () => {\r\n        let optionArr = []\r\n        for (let i = 1; i <= tasksCount; i++) {\r\n            const el = <option value={i} key={i}>{i}</option>\r\n            optionArr.push(el)\r\n        }\r\n        return optionArr\r\n    }\r\n\r\n    const optionArr = getOptions()\r\n\r\n    if (selectMode) return (\r\n        <select autoFocus\r\n            onBlur={resetMode}\r\n            onKeyDown={resetOnKey}\r\n            onChange={reorderOnSelect}\r\n            defaultValue={renderIndex}>{optionArr}</select>\r\n    )\r\n\r\n    return <span className={styles.taskOrder} onClick={setOnMode}> {renderIndex} - </span>\r\n}\r\n\r\nexport default connect(null, { reorderTask })(TaskOrder)","import React from 'react'\r\nimport styles from './ListTask.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { delTaskFromPage, updateTask, statusObj } from '../../../../Redux/reducer'\r\nimport Preloader from '../../../Preloader/Preloader'\r\nimport TaskPriority from './TaskPriority/TaskPriority';\r\nimport TaskTitle from './TaskTitle/TaskTitle';\r\nimport TaskOrder from './TaskOrder/TaskOrder';\r\n\r\n\r\n\r\nconst ListTask = (props) => {\r\n\r\n    const { id: taskId, status, renderIndex, priority, title, taskInProcess } = props.task\r\n    const { listId, tasksCount } = props\r\n\r\n\r\n    const deleteTask = () => props.delTaskFromPage(listId, taskId)\r\n\r\n    const updateTask = (updateObj) => props.updateTask(listId, taskId, updateObj)\r\n\r\n    const setTaskStatus = (e) => {\r\n        const completed = e.currentTarget.checked \r\n            ? statusObj.completed \r\n            : statusObj.active\r\n        updateTask({ status: completed })\r\n    }\r\n\r\n    const loaderStyle = { fill: 'rgb(85, 47, 11)', height: '8px' }\r\n\r\n    return (\r\n        <div className={styles.todoList_task}>\r\n            <div className={status ? styles.taskIsDone : ''}>\r\n                {/* чекбокс */}\r\n                <input\r\n                    className={styles.isDoneCheck}\r\n                    onChange={setTaskStatus}\r\n                    type=\"checkbox\"\r\n                    checked={status} />\r\n                \r\n                <TaskOrder listId={listId} taskId={taskId} \r\n                    renderIndex={renderIndex} tasksCount={tasksCount}/>\r\n                <TaskTitle title={title} updateTask={updateTask} />\r\n                <TaskPriority priority={priority} updateTask={updateTask} />\r\n\r\n                {/* кнопка delete */}\r\n                {!taskInProcess\r\n                    && < i className={'fa fa-close ' + styles.delete_button} onClick={deleteTask}/> }\r\n                {taskInProcess\r\n                    && < i className={'fa fa-close ' + styles.delete_button}/> \r\n                    && <Preloader {...loaderStyle} /> }\r\n                 {/* {taskInProcess && <Preloader {...loaderStyle} />} */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, {updateTask, delTaskFromPage})(ListTask);\r\n\r\n","import React from 'react'\r\nimport styles from './ListTasks.module.css'\r\nimport ListTask from './ListTask/ListTask'\r\n\r\nconst ListTasks = ({ tasks, ...restProps}) => {\r\n\r\n    const tasksArray = tasks.map((task) => \r\n        <ListTask key={task.id} task={task} { ...restProps } /> \r\n    );\r\n\r\n\r\n    return (\r\n        <div className={styles.listTasks}>\r\n            {tasksArray}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ListTasks;\r\n\r\n","import React from 'react'\r\nimport styles from './ListOrder.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { reorderList } from '../../../../Redux/reducer'\r\nimport onClickOutside from 'react-onclickoutside'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass ListOrder extends React.Component {\r\n\r\n    // configure the onClickOutside click handler\r\n    handleClickOutside = () => this.setState({ showOrder: false })\r\n\r\n    state = {\r\n        showOrder: false\r\n    }\r\n\r\n    toggleMode = () => this.setState({ showOrder: !this.state.showOrder })\r\n\r\n    reorderOnClick = (nextRenderPos) => {\r\n        const { listId, order: currPos, reorderList } = this.props\r\n        reorderList(listId, currPos, nextRenderPos)\r\n        this.toggleMode()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { listsCount, order } = this.props\r\n\r\n        const getPagesArr = () => {\r\n            let pagesArr = []\r\n            for (let i = 1; i <= listsCount; i++) {\r\n                const reorder = () => this.reorderOnClick(i)\r\n                const numberStyle = (i - 1) !== order\r\n                    ? styles.orderNumber : styles.orderNumber + ' ' + styles.active\r\n                const page = <button className={numberStyle} onClick={reorder} key={i}>{i}</button>\r\n                pagesArr.push(page)\r\n            }\r\n            return pagesArr\r\n        }\r\n        const pagesArr = getPagesArr()\r\n\r\n        const orderBtnStyle = this.state.showOrder ? styles.pressed : ''\r\n\r\n        return (\r\n            <div className={styles.listOrder}>\r\n                <button className={orderBtnStyle} onClick={this.toggleMode}>\r\n                    {order + 1 + '/' + listsCount}\r\n                </button>\r\n                {this.state.showOrder\r\n                    && < div className={styles.orderBox}>{pagesArr}</div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(null, { reorderList }),\r\n    onClickOutside\r\n)(ListOrder)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './StatusFilter.module.css'\r\nimport { setFilterValue, ALL_S, COMPLETED, ACTIVE } from '../../../../Redux/reducer'\r\nimport onClickOutside from 'react-onclickoutside'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass StatusFilter extends React.Component {\r\n\r\n    // configure the onClickOutside click handler\r\n    handleClickOutside = () => this.setState({ isHidden: true })\r\n\r\n    state = {\r\n        isHidden: true\r\n    }\r\n\r\n    toggleOnClick = () => this.setState({ isHidden: !this.state.isHidden })\r\n\r\n    render() {\r\n\r\n        const { listId, filterValue, footerProcessing, setFilterValue } = this.props\r\n\r\n        const buttonAll = filterValue === ALL_S ? styles.pressed : ''\r\n        const buttonActive = filterValue === ACTIVE ? styles.pressed : ''\r\n        const buttonCompleted = filterValue === COMPLETED ? styles.pressed : ''\r\n\r\n        const filter = { ALL_S: 'All', COMPLETED: 'Completed', ACTIVE: 'Active' }\r\n\r\n        const getAllTasks = () => {\r\n            if (filterValue !== ALL_S) setFilterValue(listId, ALL_S)\r\n        }\r\n        const getCompletedTasks = () => {\r\n            if (filterValue !== COMPLETED) setFilterValue(listId, COMPLETED)\r\n        }\r\n        const getActiveTasks = () => {\r\n            if (filterValue !== ACTIVE) setFilterValue(listId, ACTIVE)\r\n        }\r\n\r\n        const filterButtonStyle =\r\n            this.state.isHidden ? styles.frontButton : styles.frontButton + ' ' + styles.pressed\r\n\r\n        return (\r\n            <div className={styles.statusFilter}>\r\n                <button className={filterButtonStyle} onClick={this.toggleOnClick}>\r\n                   {filter[filterValue]}</button>\r\n                {!this.state.isHidden &&\r\n                    <div className={styles.filterButtons}>\r\n                        <button onClick={getAllTasks}\r\n                            className={buttonAll} disabled={footerProcessing}>All</button>\r\n                        <button onClick={getCompletedTasks}\r\n                            className={buttonCompleted} disabled={footerProcessing}>Completed</button>\r\n                        <button onClick={getActiveTasks}\r\n                            className={buttonActive} disabled={footerProcessing}>Active</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(null, { setFilterValue }),\r\n    onClickOutside\r\n)(StatusFilter)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './PagesLinks.module.css'\r\nimport { setTasksPage } from '../../../../Redux/reducer'\r\n\r\n\r\nconst PagesLinks = ({listId, filterValue, page, pagesCount, setTasksPage}) => {\r\n\r\n    // block the button immediately after clicking on it\r\n    const [disabled, setDisabled] = useState(false)\r\n    useEffect(() => setDisabled(false), [page])\r\n    \r\n    const getPagesLinks = () => {\r\n        const pagesLinks = []\r\n        for ( let i = 1; i <= pagesCount; i++ ) {\r\n            const onClick = () => {\r\n                setTasksPage(listId, filterValue, i)\r\n                setDisabled(true)\r\n            }\r\n            \r\n            const disabledValue = i === page || disabled ? true : false\r\n            const linkStyle = i === page ? `${styles.pageLink} ${styles.active}` : styles.pageLink\r\n            \r\n            const pageLink = \r\n                <button key={i} disabled={disabledValue}\r\n                    className={ linkStyle } onClick={ onClick } >{i}</button>\r\n            pagesLinks.push(pageLink)\r\n        }\r\n        return pagesLinks\r\n    }\r\n\r\n\r\n    return(\r\n        <div className={styles.tasksPagesLinks}>{ getPagesLinks() }</div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { setTasksPage })(PagesLinks)","import React from 'react'\r\nimport Preloader from '../../Preloader/Preloader'\r\nimport styles from './ListFooter.module.css'\r\nimport ListOrder from './ListOrder/ListOrder'\r\nimport StatusFilter from './StatusFilter/StatusFilter'\r\nimport PagesLinks from './PagesLinks/PagesLinks'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst ListFooter = (props) => {\r\n\r\n    const { listId, filterValue, listsCount, order,\r\n        totalCount, countOnPage, page, footerProcessing } = props\r\n\r\n    const loaderStyle = {\r\n        fill: 'rgb(85, 47, 11)', height: '10px', position: 'absolute', bottom: '5px', right: '45%'\r\n    }\r\n\r\n    const pagesCount = totalCount ? Math.ceil(totalCount / countOnPage) : 1\r\n\r\n    // define conditions to show/hide order button\r\n    const showOrder = props.history.location.pathname === '/' ? true : false\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.list_footer}>\r\n            { pagesCount > 1\r\n                && <PagesLinks page={page} pagesCount={pagesCount} \r\n                        listId={listId} filterValue={filterValue} />\r\n            }\r\n            \r\n            <StatusFilter listId={listId} filterValue={filterValue}\r\n                footerProcessing={footerProcessing} />\r\n            \r\n\r\n            {showOrder && listsCount !== 1\r\n                && <ListOrder order={order} listsCount={listsCount} listId={listId} />}\r\n            {footerProcessing && <Preloader {...loaderStyle} />}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withRouter(ListFooter)\r\n\r\n","import React from 'react'\r\nimport styles from './TodoList.module.css'\r\nimport ListHeader from './ListHeader/ListHeader'\r\nimport ListTasks from './ListTasks/ListTasks'\r\nimport ListFooter from './ListFooter/ListFooter'\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.restoreTasks(this.props.list.id)\r\n    }\r\n\r\n    \r\n    render = () => {\r\n        const { listsCount, listTitles, maxTasksCount } = this.props\r\n        const { title, id, page, totalCount, countOnPage, tasks, generalCount, \r\n            order, filterValue, listDeliting, titleUpdating, taskIsAdding, \r\n            footerProcessing, tasksOrder } = this.props.list;\r\n        const tasksCount = tasksOrder ? tasksOrder.length : null\r\n\r\n\r\n        return (\r\n            <div className={styles.todoList}>\r\n                <section className={styles.todoList_wrapper}>\r\n                    <ListHeader\r\n                        title = { title } \r\n                        listId = { id }\r\n                        filterValue = { filterValue }\r\n                        page = { page }\r\n                        maxTasksCount={maxTasksCount}\r\n                        generalCount = {generalCount}\r\n                        totalCount={totalCount}\r\n                        listTitles={listTitles}\r\n                        listDeliting = {listDeliting}\r\n                        titleUpdating={titleUpdating} \r\n                        taskIsAdding={taskIsAdding} />\r\n                    <ListTasks\r\n                        tasks={tasks}\r\n                        listId={id}\r\n                        tasksCount={tasksCount}\r\n                    />\r\n                </section>\r\n                <ListFooter \r\n                    listId={id}\r\n                    page = {page}\r\n                    order={order}\r\n                    listsCount={listsCount}\r\n                    filterValue = { filterValue }\r\n                    countOnPage ={ countOnPage }\r\n                    totalCount={totalCount} \r\n                    footerProcessing={footerProcessing} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styles from './Error404.module.css'\r\n\r\n\r\nconst Error404 = (props) => {\r\n    return(\r\n        <div className={styles.error404}>\r\n            <h3>No match for <code>\"{props.location.pathname}\"</code>. Please, check URL.</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Error404);","import React from 'react';\r\nimport styles from './App.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, Route, withRouter, Switch } from 'react-router-dom';\r\nimport TodoList from './TodoList/TodoList';\r\nimport AddItemForm from './AddItemForm/AddItemForm';\r\nimport Preloader from './Preloader/Preloader';\r\nimport {restoreLists, restoreTasks, addList} from '../Redux/reducer';\r\nimport book from '../Assets/img/book.png';\r\nimport { compose } from 'redux';\r\nimport Error404 from './Error404/Error404';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.restoreLists()\r\n    }\r\n\r\n\r\n    restoreTasks = (listId) => this.props.restoreTasks(listId)\r\n\r\n\r\n    render() {\r\n\r\n        const listTitles = this.props.lists.map((list) => ({title: list.title, id: list.id}) )\r\n\r\n        // generate list Routes for single list display\r\n        const listsRoutes = this.props.lists.map((list) =>{\r\n            const { maxTasksCount } = this.props\r\n            const path = list.title.replace(/\\s|\\?|#/g, '-')\r\n            return (\r\n            <Route path={`/${path}`} exact key={list.id} render={() => \r\n                <TodoList list={list} key={list.id} maxTasksCount={maxTasksCount}\r\n                    restoreTasks={this.restoreTasks} listTitles={listTitles} />} \r\n            />) \r\n        })\r\n\r\n        // generate list Routes for lists general display\r\n        const allLists = this.props.lists.map((list) => {\r\n            const { listsCount, maxTasksCount } = this.props\r\n            return( \r\n                <TodoList list={list} key={list.id} listTitles={listTitles} listsCount={listsCount}\r\n                    restoreTasks={this.restoreTasks} maxTasksCount={maxTasksCount}/>\r\n            )}\r\n        )\r\n\r\n        const allListsLinks = this.props.lists.map( ( list ) => {\r\n            const link = list.title.replace(/\\s|\\?|#/g, '-')\r\n            return(\r\n                <li key={list.id}><NavLink to={`/${link}`}>{list.title}</NavLink></li>\r\n            )\r\n        } )\r\n\r\n        const listTitleValidation = (newTitle) => {\r\n\r\n            const equalTitles = listTitles.find((el) => {\r\n                return (el.title.toLowerCase() === newTitle.toLowerCase() && el.id !== this.props.listId)\r\n            })\r\n\r\n            if (newTitle.trim() === '' || newTitle.length > 100 || newTitle.match(/%/) || equalTitles) {\r\n                return true\r\n            }\r\n        }\r\n\r\n        const addList = (title) => {\r\n            this.props.addList(title)\r\n            if (this.props.history.location.pathname !== '/') {\r\n                this.props.history.push('/')\r\n            }\r\n        }\r\n\r\n        const preloaderStyles = {\r\n            position: 'absolute', height: '12px', top: '1.75em', right: '34%', fill: 'white'\r\n        }\r\n\r\n        const addListHint = \r\n            'Please, check the % sign is missing and enter a unique title between 1 and 100 chars long, or press \"Esc\" to reset'\r\n\r\n        return (\r\n            <div className={styles.app}>\r\n                <div className={styles.app_header}>\r\n                    { this.props.listsLoading && <Preloader {...preloaderStyles}/>\r\n                    }\r\n                    <NavLink to='/' exact className={styles.app_title}>\r\n                        <h2>\r\n                            <img src={book} alt='book' className={styles.app_header_icon} />\r\n                            Tasks Manager\r\n                        </h2>\r\n                    </NavLink>\r\n                    {this.props.lists.length < this.props.maxListsCount \r\n                        && <div className={styles.app_addItemForm}>\r\n                                <AddItemForm addItem={addList} hint={addListHint}\r\n                                    validationFunc={listTitleValidation} placeholder='Add list' />\r\n                            </div>}\r\n                </div>\r\n                <nav className={styles.app_header_navigation}>\r\n                    <ul>{allListsLinks}</ul>\r\n                </nav>\r\n                <div className={styles.app_lists}>\r\n                    <Switch>\r\n                        {listsRoutes}\r\n                        <Route path='/' exact>{allLists}</Route>\r\n                        <Route component={Error404} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        lists: state.lists,\r\n        listsCount: state.lists.length,\r\n        listsLoading: state.listsProgress.listsLoading,\r\n        maxListsCount: state.maxListsCount,\r\n        maxTasksCount: state.maxTasksCount\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {restoreLists, restoreTasks ,addList}),\r\n    withRouter\r\n)(App);","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport reducer from './reducer';\r\n\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(ThunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './UI/App';\r\nimport store from './Redux/store';\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store = {store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}