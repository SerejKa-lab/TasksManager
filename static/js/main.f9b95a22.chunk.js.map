{"version":3,"sources":["UI/App.module.css","UI/TodoList/ListFooter/StatusFilter/StatusFilter.module.css","UI/TodoList/ListFooter/ListOrder/ListOrder.module.css","UI/TodoList/ListHeader/ListHeader.module.css","UI/TodoList/ListTasks/ListTask/ListTask.module.css","UI/TodoList/ListFooter/PagesLinks/PagesLinks.module.css","UI/TodoList/ListHeader/ListTitle/ListTitle.module.css","UI/TodoList/ListTasks/ListTask/TaskPriority/TaskPriority.module.css","UI/TodoList/ListTasks/ListTask/TaskTitle/TaskTitle.module.css","UI/TodoList/TodoList.module.css","UI/AddItemForm/AddItemForm.module.css","UI/Tooltip/Tooltip.module.css","UI/Errors/CommonError/CommonError.module.css","UI/TodoList/ListTasks/ListTasks.module.css","UI/TodoList/ListTasks/ListTask/TaskOrder/TaskOrder.module.css","UI/TodoList/ListFooter/ListFooter.module.css","Assets/img/book.png","UI/Errors/Error404/Error404.module.css","UI/Tooltip/Tooltip.js","UI/AddItemForm/AddItemForm.js","API/api.js","Redux/errorsReducer.js","Redux/appReducer.js","UI/Preloader/Preloader.js","UI/TodoList/ListHeader/ListTitle/ListTitle.js","UI/TodoList/ListHeader/ListHeader.js","UI/TodoList/ListTasks/ListTask/TaskPriority/TaskPriority.js","UI/TodoList/ListTasks/ListTask/TaskTitle/TaskTitle.js","UI/TodoList/ListTasks/ListTask/TaskOrder/TaskOrder.js","UI/TodoList/ListTasks/ListTask/ListTask.js","UI/TodoList/ListTasks/ListTasks.js","UI/TodoList/ListFooter/ListOrder/ListOrder.js","UI/TodoList/ListFooter/StatusFilter/StatusFilter.js","UI/TodoList/ListFooter/PagesLinks/PagesLinks.js","UI/TodoList/ListFooter/ListFooter.js","UI/TodoList/TodoList.js","UI/Errors/Error404/Error404.js","UI/Errors/CommonError/CommonError.js","UI/App.js","Redux/store.js","index.js"],"names":["module","exports","Tooltip","props","useState","display","setDisplay","tooltipStyle","styles","tooltip","isHidden","className","onClick","hint","AddItemForm","state","inputError","itemTitle","setItemTitle","e","setState","currentTarget","value","newTitle","validationFunc","addItem","actionOnBlur","validationResult","actionOnKey","key","keyCode","newItemForm","this","error","onChange","onKeyDown","onBlur","autoFocus","type","placeholder","React","Component","instance","Axios","create","baseURL","withCredentials","headers","api","get","listId","title","put","post","putAfterItemId","delete","page","taskId","dataObj","initialState","errorsReducer","action","SET_ERROR","RESET_ERROR","filter","el","index","setErrorAC","lists","listsOrder","listsProgress","listsLoading","maxTasksCount","maxListsCount","appReducer","countOnPage","renderBasis","RESTORE_LISTS","map","list","tasks","order","filterValue","ALL_S","footerProcessing","id","ADD_LIST","extendedList","UPDATE_LIST_TITLE","REORDER_LIST","reorderedLists","DELETE_LIST","LIST_IS_LOADING","LIST_IN_PROCESS","process","SET_FILTER_VALUE","RESTORE_TASKS","totalCount","tasksOrder","task","renderIndex","SET_TASKS_PAGE","SET_TASKS_ORDER","DELETE_TASK","UPDATE_TASK","todoListId","TASK_IN_PROCESS","SET_FLTR_TASKS_PAGE","status","length","newTasksOrder","generalCount","DELETE_FLTR_TASK","SET_PREV_ACT_ID","prevActiveId","listIsLoadingAC","listInProcessAC","updateListTitleAC","deleteListAC","reorderListAC","restoreTasksAC","setTasksPageAC","deleteTask","taskInProcessAC","COMPLETED","statusObj","setFilterValueAC","setPrevActId","setFilteredPageAC","deleteFltrTask","setFilteredPage","dispatch","a","response","data","items","setAllTasksPage","getState","app","find","prevFilterVal","response_1","setTasksOrder","response_2","setTasksPage","Preloader","height","width","fill","userStyles","loaderStyle","slice","indexOf","svg","xmlns","xlink","version","viewBox","space","style","cx","cy","r","attributeName","dur","begin","repeatCount","keyTimes","values","ListTitle","editMode","updateListTitle","match","history","location","pathname","push","replace","setEditMode","setEditModeKey","charCode","setDisplayMode","editListTitle","equalTitles","listTitles","toLowerCase","trim","setTitleOnKey","list_title__input","list_title","onKeyPress","tabIndex","listDeliting","listProcessing","position","bottom","right","compose","connect","resultCode","withRouter","ListHeader","deleteList","then","addTask","taskIsAdding","addTaskActive","totalTasksCount","list_header","delete_button","aria-label","list_header_add_form","mdtp","newTaskId","item","TaskPriority","setMode","currentValue","setCurrentValue","textContent","resetEditMode","setTaskPriority","priority","priorityArray","findIndex","prior","updateTask","getTaskPriority","getTaskPriorityStyle","taskPriority","priorityOptions","defaultValue","TaskTitle","setTitle","setError","enableEditMode","taskTitle","reorderTask","currPos","nextRenderPos","nextPos","undefined","targerList","getAfterId","getTasksOrder","currId","i","t","Math","ceil","tasksCount","selectMode","currentOrder","setCurrentOrder","enableSelect","currOrd","split","join","disableSelect","setTaskOrder","optionArr","getOptions","taskOrder","updateObj","targetList","tasksLength","targetTask","updatedTask","delTaskFromPage","pagesCount","taskInProcess","delBtnOnClick","todoList_task","taskIsDone","isDoneCheck","completed","checked","ListTasks","restProps","tasksArray","listTasks","ListOrder","handleClickOutside","showOrder","toggleMode","reorderOnClick","reorderList","listsCount","pagesArr","numberStyle","orderNumber","active","getPagesArr","orderBtnStyle","pressed","listOrder","orderBox","getReorderedLists","currList","onClickOutside","StatusFilter","toggleOnClick","setFilterValue","buttonAll","buttonActive","buttonCompleted","filterButtonStyle","frontButton","statusFilter","ACTIVE","filterButtons","disabled","l","setDisabled","useEffect","tasksPagesLinks","pagesLinks","disabledValue","linkStyle","pageLink","getPagesLinks","list_footer","TodoList","render","todoList","todoList_wrapper","restoreTasks","error404","CommonError","message","resetError","timerId","setTimeout","clearTimeout","closeIcon","aria-hidden","App","restoreLists","errors","listsRoutes","path","exact","allLists","allListsLinks","link","to","errorsArr","errorsBlock","app_header","top","app_title","src","book","alt","app_header_icon","app_addItemForm","addList","app_header_navigation","app_lists","component","Error404","storeReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ThunkMiddleware","ReactDOM","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,YAAc,yBAAyB,UAAY,uBAAuB,OAAS,oBAAoB,gBAAkB,6BAA6B,WAAa,wBAAwB,sBAAwB,mCAAmC,UAAY,yB,mBCA3SD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,QAAU,8BAA8B,cAAgB,sC,mBCA5HD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,2BAA2B,SAAW,4BAA4B,YAAc,+BAA+B,OAAS,4B,mBCA7LD,EAAOC,QAAU,CAAC,YAAc,gCAAgC,qBAAuB,yCAAyC,cAAgB,oC,mBCAhJD,EAAOC,QAAU,CAAC,cAAgB,gCAAgC,WAAa,6BAA6B,cAAgB,gCAAgC,YAAc,gC,mBCA1KD,EAAOC,QAAU,CAAC,gBAAkB,oCAAoC,SAAW,6BAA6B,OAAS,6B,mBCAzHD,EAAOC,QAAU,CAAC,kBAAoB,qCAAqC,MAAQ,yBAAyB,WAAa,gC,mBCAzHD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,OAAS,6BAA6B,IAAM,0BAA0B,KAAO,2BAA2B,OAAS,6BAA6B,MAAQ,8B,mBCA1ND,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,mBCAnED,EAAOC,QAAU,CAAC,iBAAmB,mCAAmC,SAAW,6B,mBCAnFD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,cAAgB,qC,mBCApHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,4B,mBCAhED,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,UAAY,iC,mBCAjED,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,kC,mBCDhCD,EAAOC,QAAU,IAA0B,kC,mBCC3CD,EAAOC,QAAU,CAAC,SAAW,6B,sSCiBdC,EAdC,SAACC,GAAW,IAAD,EAEOC,oBAAS,GAFhB,mBAEhBC,EAFgB,KAEPC,EAFO,KAKjBC,EAAeF,EAAUG,IAAOC,QAAUD,IAAOE,SAEvD,OACI,yBAAKC,UAAWJ,EAAcK,QALd,kBAAMN,GAAW,KAM5BH,EAAMU,OCoDJC,E,2MA3DXC,MAAQ,CACJC,YAAY,EACZC,UAAW,I,EAGfC,aAAe,SAACC,GACR,EAAKJ,MAAMC,YAAY,EAAKI,SAAS,CAAEJ,YAAY,IACvD,EAAKI,SAAS,CAAEH,UAAWE,EAAEE,cAAcC,QAAS,WAChD,IAAMC,EAAW,EAAKR,MAAME,WACH,EAAKd,MAAMqB,eAC9B,EAAKrB,MAAMqB,eAAeD,GAAY,OAExC,EAAKH,SAAS,CAAEJ,YAAY,Q,EAIxCS,QAAU,WACuB,KAAzB,EAAKV,MAAME,UAAkB,EAAKG,SAAS,CAAEJ,YAAY,IAEpD,EAAKD,MAAMC,aACZ,EAAKb,MAAMsB,QAAQ,EAAKV,MAAME,WAC9B,EAAKG,SAAS,CAAEH,UAAW,O,EAIvCS,aAAe,WACX,IAAMC,EAAmB,EAAKxB,MAAMqB,eAC1B,EAAKrB,MAAMqB,eAAe,EAAKT,MAAME,WAAa,KACxD,EAAKF,MAAMC,aAAeW,GAC1B,EAAKP,SAAS,CAAEJ,YAAY,K,EAIpCY,YAAc,SAACT,GACG,UAAVA,EAAEU,KAAiB,EAAKJ,UACT,KAAdN,EAAEW,SACH,EAAKV,SAAS,CAAEH,UAAW,GAAID,YAAY,K,wEAK/C,OACI,yBAAKL,UAAWH,IAAOuB,aACnB,2BACIpB,UAAWqB,KAAKjB,MAAMC,WAAaR,IAAOyB,MAAQ,GAClDC,SAAUF,KAAKd,aACfiB,UAAWH,KAAKJ,YAChBQ,OAAQJ,KAAKN,aACbW,WAAW,EACXC,KAAK,OAAOC,YAAaP,KAAK7B,MAAMoC,YAAajB,MAAOU,KAAKjB,MAAME,YAEvE,4BAAQL,QAASoB,KAAKP,SAAtB,OAEEO,KAAKjB,MAAMC,YAAc,kBAAC,EAAD,CAASH,KAAMmB,KAAK7B,MAAMU,Y,GAvD3C2B,IAAMC,W,uECD1BC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,0DACTC,iBAAiB,EACjBC,QAAS,CAAE,UAAW,0CAGbC,EAAM,WAGX,OAAON,EAASO,IAAI,KAHfD,EAAM,SAMCE,EAAQC,GACpB,OAAOT,EAASU,IAAT,WAAiBF,GAAU,CAAEC,WAP/BH,EAAM,SAUPG,GACJ,OAAOT,EAASW,KAAK,GAAI,CAAEF,WAXtBH,EAAM,SAcHE,EAAQI,GAChB,OAAOZ,EAASU,IAAT,WAAiBF,EAAjB,YAAmC,CAAEI,oBAfvCN,EAAM,SAkBJE,GACP,OAAOR,EAASa,OAAT,WAAoBL,KAnBtBF,EAAM,SA0BHE,GACR,OAAOR,EAASO,IAAT,WAAiBC,EAAjB,sBA3BFF,EAAM,SA8BAE,GAAmB,IAAXM,EAAU,uDAAH,EAC1B,OAAOd,EAASO,IAAT,WAAiBC,EAAjB,gCAA+CM,KA/BjDR,EAAM,SAkCPE,EAAQC,GACZ,OAAOT,EAASW,KAAT,WAAkBH,EAAlB,UAAkC,CAAEC,WAnCtCH,EAAM,SAsCJE,EAAQO,EAAQC,GACvB,OAAOhB,EAASU,IAAT,WAAiBF,EAAjB,kBAAiCO,GAAjC,eAAgDC,KAvClDV,EAAM,SA0CJE,EAAQO,GACf,OAAOf,EAASa,OAAT,WAAoBL,EAApB,kBAAoCO,KA3CtCT,EAAM,SA8CHE,EAAQO,EAAQH,GACxB,OAAOZ,EAASU,IAAT,WAAiBF,EAAjB,kBAAiCO,EAAjC,YAAmD,CAAEH,oBCxD9DK,EAAe,GAiBNC,EAfO,WAAmC,IAAlC7C,EAAiC,uDAAzB4C,EAAcE,EAAW,uCAEpD,OAAQA,EAAOvB,MAEX,KAAKwB,EACD,MAAM,GAAN,mBAAW/C,GAAX,CAAkB8C,EAAO5B,QAE7B,KAAK8B,EACD,OAAOhD,EAAMiD,QAAO,SAACC,EAAIC,GAAL,OAAyB,IAAVA,KAEvC,QACI,OAAOnD,IAOb+C,EAAY,YACLK,EAAa,SAAClC,GAAD,MAAY,CAAEK,KAAMwB,EAAW7B,MAAOA,IAG1D8B,EAAc,cCrBdJ,GAAgB,CAClBS,MAAO,GACPC,WAAY,GACZC,cAAe,CAAEC,cAAc,GAC/BC,cAAe,GACfC,cAAe,GACfxC,MAAO,MAuQIyC,GA1PI,WAAmC,IAAlC3D,EAAiC,uDAAzB4C,GAAcE,EAAW,uCAE3Cc,EAAc,GACdC,GAAef,EAAOL,KAAO,GAAGmB,EAAa,EAEnD,OAAQd,EAAOvB,MAIX,KAAKuC,GACD,OAAO,eACA9D,EADP,CAEIqD,MAAOP,EAAOO,MAAMU,KAAK,SAACC,EAAMb,GAC5B,OAAKa,EAAKC,MAIL,eACID,EADJ,CACUE,MAAOf,EAAOV,KAAM,EAAGmB,cAAaO,YAAaC,GACxDC,kBAAkB,IANT,eACRL,EADQ,CACFE,MAAOf,EAAOV,KAAM,EAAGmB,cAAaO,YAAaC,GAAOH,MAAO,GACtEI,kBAAkB,OAO9Bf,WAAYR,EAAOO,MAAMU,KAAK,SAACC,GAAD,OAAUA,EAAKM,QAGrD,KAAKC,GACD,IAAMC,EAAY,eAAQ1B,EAAOkB,KAAf,CAAqBvB,KAAM,EAAGmB,cAAaO,YAAaC,GAAOH,MAAO,KACxF,OAAO,eACAjE,EADP,CAEIqD,MAAO,CAAEmB,GAAF,mBAAmBxE,EAAMqD,QAAQU,KAAI,SAACC,EAAMb,GAAP,sBAAsBa,EAAtB,CAA4BE,MAAOf,SAGvF,KAAKsB,GACD,OAAO,eACAzE,EADP,CAEIqD,MAAOrD,EAAMqD,MAAMU,KAAK,SAACC,GACrB,OAAIA,EAAKM,KAAOxB,EAAOX,OAAe,eAAM6B,EAAb,CAAmB5B,MAAOU,EAAOV,QACpD4B,OAIxB,KAAKU,GACD,OAAO,eACA1E,EADP,CAEIqD,MAAOP,EAAO6B,eAAeZ,KAAK,SAACC,EAAMb,GAAP,sBAAsBa,EAAtB,CAA4BE,MAAOf,OACrEG,WAAYR,EAAO6B,eAAeZ,KAAI,SAACC,GAAD,OAAUA,EAAKM,QAG7D,KAAKM,GACD,OAAO,eACA5E,EADP,CAEIqD,MACIrD,EAAMqD,MACDJ,QAAO,SAACe,GAAD,OAAUA,EAAKM,KAAOxB,EAAOX,UACpC4B,KAAK,SAACC,EAAMb,GAAP,sBAAsBa,EAAtB,CAA4BE,MAAOf,SAGzD,KAAK0B,GACD,OAAO,eACA7E,EADP,CAEIuD,cAAc,eAAKvD,EAAMuD,cAAZ,CAA2BC,aAAcV,EAAOvC,UAGrE,KAAKuE,GACD,OAAO,eACA9E,EADP,CAEIqD,MAAOrD,EAAMqD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKM,KAAOxB,EAAOX,OAAe,eAAK6B,EAAZ,eAAmBlB,EAAOiC,QAAUjC,EAAOvC,QAC9DyD,OAIxB,KAAKgB,GACD,OAAO,eACAhF,EADP,CAEIqD,MAAOrD,EAAMqD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKM,KAAOxB,EAAOX,OAAe,eAAK6B,EAAZ,CAAkBG,YAAarB,EAAOvC,QACzDyD,OAQxB,KAAKiB,GACD,OAAO,eACAjF,EADP,CAEIqD,MAAOrD,EAAMqD,MAAMU,KAAI,SAAAC,GACpB,OAAIA,EAAKM,KAAOxB,EAAOX,OACX,eACA6B,EADP,CAEIkB,WAAYpC,EAAOoC,WACnBC,WAAarC,EAAOmB,MACdnB,EAAOmB,MAAMF,KAAI,SAACqB,GAAD,OAAUA,EAAKd,MADV,GAE5BL,MAAQnB,EAAOmB,MACTnB,EAAOmB,MAAMhB,QAAQ,SAACmC,EAAMjC,GAAP,OAAiBA,EAAQS,KAC3CG,KAAK,SAACqB,EAAMjC,GAAP,sBAAsBiC,EAAtB,CAA4BC,YAAalC,EAAQ,OAFxC,KAInBa,OAIxB,KAAKsB,GACD,OAAO,eACAtF,EADP,CAEIqD,MAAOrD,EAAMqD,MAAMU,KAAK,SAACC,GACrB,OAAIA,EAAKM,KAAOxB,EAAOX,OACZ,eACA6B,EADP,CAEIkB,WAAYpC,EAAOoC,WAAapC,EAAOoC,WAAalB,EAAKkB,WACzDzC,KAAMK,EAAOL,KACbwB,MAAOnB,EAAOmB,MACTF,KAAI,SAACqB,EAAMjC,GAAP,sBAAuBiC,EAAvB,CAA6BC,YAAaxB,EAAcV,SAE3Da,OAI1B,KAAKuB,GACD,OAAO,eACAvF,EADP,CAEIqD,MAAOrD,EAAMqD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKM,KAAOxB,EAAOX,OACZ,eAAK6B,EAAZ,CAAkBmB,WAAYrC,EAAOqC,aAC3BnB,OAK1B,KAAKwB,GACD,OAAO,eACAxF,EADP,CAEIqD,MAAOrD,EAAMqD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKM,KAAOxB,EAAOX,OACZ,eACA6B,EADP,CAEIkB,WAAYlB,EAAKkB,WAAW,EAC5BC,WAAYnB,EAAKmB,WAAWlC,QAAO,SAACqB,GAAD,OAAQA,IAAOxB,EAAOJ,UACzDuB,MACID,EAAKC,MAAMhB,QAAO,SAACmC,GAAD,OAAUA,EAAKd,KAAOxB,EAAOJ,UAC1CqB,KAAK,SAACqB,EAAMjC,GAAP,sBAAuBiC,EAAvB,CAA6BC,YAAaxB,EAAcV,SAEhEa,OAI1B,KAAKyB,GAED,OAAO,eACAzF,EADP,CAEIqD,MAAOrD,EAAMqD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKM,KAAOxB,EAAOsC,KAAKM,WACjB,eACA1B,EADP,CAEIC,MAAOD,EAAKC,MAAMF,KAAI,SAACqB,GACnB,OAAIA,EAAKd,KAAOxB,EAAOsC,KAAKd,GACjB,eAAKc,EAAZ,GAAqBtC,EAAOsC,MAClBA,OAGZpB,OAI1B,KAAK2B,GACD,OAAO,eACA3F,EADP,CAEIqD,MAAOrD,EAAMqD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKM,KAAOxB,EAAOX,OACZ,eACA6B,EADP,CAEIC,MAAOD,EAAKC,MAAMF,KAAK,SAACqB,GACpB,OAAIA,EAAKd,KAAOxB,EAAOJ,OACZ,eAAI0C,EAAX,eAAkBtC,EAAOiC,QAASjC,EAAOvC,QAEjC6E,OAIZpB,OAQxB,KAAK4B,GACD,IAAMV,EACFpC,EAAOmB,MAAMhB,QAAO,SAACmC,GAAD,OAAUA,EAAKS,SAAW/C,EAAO+C,UAAQC,OAC3DC,EAAgBjD,EAAOmB,MACxBhB,QAAO,SAACmC,GAAD,OAAUA,EAAKS,SAAW/C,EAAO+C,UACxC9B,KAAI,SAACqB,GAAD,OAAUA,EAAKd,MACxB,OAAO,eACAtE,EADP,CAEIqD,MAAOrD,EAAMqD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKM,KAAOxB,EAAOX,OACZ,eACA6B,EADP,CAEIvB,KAAMK,EAAOL,KACbyC,aACAc,aAAclD,EAAOmB,MAAM6B,OAC3BX,WAAYY,EACZ9B,MAAOnB,EAAOmB,MACThB,QAAO,SAACmC,GAAD,OAAUA,EAAKS,SAAW/C,EAAO+C,UACxC9B,KAAI,SAACqB,EAAMjC,GAAP,sBAAuBiC,EAAvB,CAA6BC,YAAalC,EAAQ,OACtDF,QAAO,SAACmC,EAAMjC,GAAP,OACHA,IAAUL,EAAOL,KAAO,GAAKmB,GAAeT,EAAQL,EAAOL,KAAOmB,OAErEI,OAI1B,KAAKiC,GACD,OAAO,eACAjG,EADP,CAEIqD,MAAOrD,EAAMqD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKM,KAAOxB,EAAOX,OACZ,eACA6B,EADP,CAEIkB,WAAYlB,EAAKkB,WAAY,EAC7Bc,aAAchC,EAAKgC,aAAc,EACjCb,WAAYnB,EAAKmB,WAAWlC,QAAO,SAACqB,GAAD,OAAQA,IAAOxB,EAAOJ,UACzDuB,MAAOD,EAAKC,MAAMhB,QAAO,SAACmC,GAAD,OAAUA,EAAKd,KAAOxB,EAAOJ,UACjDqB,KAAI,SAACqB,EAAMjC,GAAP,sBAAuBiC,EAAvB,CAA6BC,YAAaxB,EAAcV,SAE3Da,OAI1B,KAAKkC,GACD,OAAO,eACAlG,EADP,CAEIqD,MAAOrD,EAAMqD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKM,KAAOxB,EAAOX,OACZ,eACA6B,EADP,CAEImC,aAAcrD,EAAOqD,eAEfnC,OAK1B,QAAS,OAAOhE,IAclB6E,GAAkB,kBAClBuB,GAAkB,SAAC7F,GAAD,MAAY,CAAEgB,KAAMsD,GAAiBtE,UAEvDuE,GAAkB,kBAClBuB,GAAkB,SAAClE,EAAQ4C,EAASxE,GACtC,MAAO,CAACgB,KAAMuD,GAAiB3C,SAAQ4C,UAASxE,UAI9CuD,GAAgB,gBAgBhBS,GAAW,WAeXE,GAAoB,oBACpB6B,GAAoB,SAACnE,EAAQC,GAAT,MAAoB,CAAEb,KAAMkD,GAAmBtC,SAAQC,UAiB3EwC,GAAc,cACd2B,GAAe,SAACpE,GAAD,MAAa,CAACZ,KAAMqD,GAAazC,WAiBhDuC,GAAe,eACf8B,GAAgB,SAAC7B,GAAD,MAAqB,CAACpD,KAAMmD,GAAcC,mBA6D1DM,GAAgB,gBAChBwB,GAAiB,SAACtE,EAAQ8B,EAAOiB,GAAhB,MAAgC,CAAE3D,KAAM0D,GAAe9C,SAAQ8B,QAAOiB,eAcvFI,GAAiB,iBACVoB,GAAiB,SAACvE,EAAQM,EAAMwB,EAAOiB,GAAtB,MACzB,CAAE3D,KAAM+D,GAAgBnD,SAAQM,OAAMwB,QAAOiB,eAE5CM,GAAc,cACPmB,GAAa,SAACxE,EAAQO,EAAQD,GAAjB,MAA2B,CAAElB,KAAMiE,GAAarD,SAAQO,SAAQD,SAEpFgD,GAAc,cAGdE,GAAkB,kBAClBiB,GAAkB,SAACzE,EAAQO,EAAQqC,EAASxE,GAA1B,MACf,CAACgB,KAAMoE,GAAiBxD,SAAQO,SAAQqC,UAASxE,UAO7C6D,GAAQ,QACRyC,GAAY,YAGZC,GAAwB,EAAxBA,GAAmC,EAG1C9B,GAAmB,mBACnB+B,GAAmB,SAAC5E,EAAQ5B,GAAT,MAAoB,CAACgB,KAAMyD,GAAkB7C,SAAQ5B,UA0BxE2F,GAAkB,kBAClBc,GAAe,SAAC7E,EAAQgE,GAAT,MAA2B,CAAC5E,KAAM2E,GAAiB/D,SAAQgE,iBAE1EP,GAAsB,sBACtBqB,GAAoB,SAAC9E,EAAQM,EAAMwB,EAAO4B,GAAtB,MACrB,CAAEtE,KAAMqE,GAAqBzD,SAAQM,OAAMwB,QAAO4B,WAEjDI,GAAmB,mBACnBiB,GAAiB,SAAC/E,EAAQO,EAAQD,GAAjB,MAA2B,CAAElB,KAAM0E,GAAkB9D,SAAQO,SAAQD,SAKtF0E,GAAkB,SAAChF,EAAQM,EAAMoD,GAAf,8CAA0B,WAAMuB,GAAN,iBAAAC,EAAA,+EAEnBpF,EAAgBE,GAFG,OAEpCmF,EAFoC,OAGpCrD,EAAQqD,EAASC,KAAKC,MAC5BJ,EAASH,GAAkB9E,EAAQM,EAAMwB,EAAO4B,IAJN,gDAM1CuB,EAAShE,EAAW,EAAD,KANuB,yDAA1B,uDAWlBqE,GAAkB,SAACtF,EAAQM,GAAT,8CAAkB,WAAM2E,EAAUM,GAAhB,qCAAAL,EAAA,wDAGCK,IAAWC,IAAItE,MAAMuE,MAAK,SAAC5D,GAAD,OAAUA,EAAKM,KAAOnC,KAAlE0F,EAHiB,EAG9B1D,YAH8B,KAK9B0D,EAL8B,cAQ7BhB,GAR6B,EAxDpB,WAwDoB,gDAWD5E,EAAgBE,GAXf,cAWpB2F,EAXoB,OAYpB/B,EAAgB+B,EAAWP,KAAKC,MAAMzD,KAAI,SAACqB,GAAD,OAAUA,EAAKd,MAC/D8C,EAASW,GAAc5F,EAAQ4D,IAbL,UAeD9D,EAAmBE,EAAQM,GAf1B,eAepBuF,EAfoB,SAgBWA,EAAWT,KAAjCtD,EAhBW,EAgBlBuD,MAActC,EAhBI,EAgBJA,WACtBkC,EAASV,GAAevE,EAAQM,EAAMwB,EAAOiB,IAjBnB,8DAoB1BkC,EAAShE,EAAW,EAAD,KApBO,wDA2BHnB,EAAmBE,EAAQM,GA3BxB,QA2BpB6E,EA3BoB,SA4BWA,EAASC,KAA/BtD,EA5BW,EA4BlBuD,MAActC,EA5BI,EA4BJA,WACtBkC,EAASV,GAAevE,EAAQM,EAAMwB,EAAOiB,IA7BnB,mDA+B1BkC,EAAShE,EAAW,EAAD,KA/BO,kEAAlB,yDAqCX6E,GAAe,SAAC9F,EAAQgC,EAAa1B,GAAtB,8CAA+B,WAAM2E,GAAN,eAAAC,EAAA,sDAEvDD,EAAUf,GAAgBlE,EAAQ,oBAAoB,IAElD0D,EAASiB,GAJ0C,KAK/C3C,EAL+C,OA7FrC,WA6FqC,cAY9C0C,GAZ8C,kCAQzCO,EAASD,GAAgBhF,EAAQM,EAAMoD,IARE,cAS/CuB,EAASf,GAAgBlE,EAAQ,oBAAoB,IATN,mCAa/C0D,EAASiB,GAbsC,UAczCM,EAASD,GAAgBhF,EAAQM,EAAMoD,IAdE,eAe/CuB,EAASf,GAAgBlE,EAAQ,oBAAoB,IAfN,8CAmBzCiF,EAASK,GAAgBtF,EAAQM,IAnBQ,QAoB/C2E,EAASf,GAAgBlE,EAAQ,oBAAoB,IApBN,4CAA/B,uDAyKtBoD,GAAkB,kBAClBwC,GAAgB,SAAC5F,EAAQgD,GAAT,MAAyB,CAAE5D,KAAMgE,GAAiBpD,SAAQgD,e,SCxqBjE+C,GAnCG,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAASC,EAAiB,0CAoBpDC,EAAW,eACVD,EADU,CAEbF,MAnBKA,KACCA,GAASD,EACwC,MAArCA,EAAOK,MAAM,EAAGL,EAAOM,QAAQ,MAChC,KAEXL,GAAUD,OAAhB,EAAgC,SAehCA,OAXKA,KACCA,GAAUC,EACqC,KAAnCA,EAAMI,MAAM,EAAGJ,EAAMK,QAAQ,MAC9B,KAEXN,GAAWC,OAAjB,EAAgC,UASpC,OACQ,yBAAKM,IAAI,6BAA6BC,MAAM,6BAA6BC,MAAM,+BAA+BC,QAAQ,MAAMC,QAAQ,aAAaC,MAAM,WAAWC,MAAOT,GACrK,2BAAG,4BAAQF,KAAMA,EAAMY,GAAG,OAAOC,GAAG,OAAOC,EAAE,SAAQ,6BAASC,cAAc,UAAUC,IAAI,QAAQC,MAAM,KAAKC,YAAY,aAAaC,SAAS,sBAAsBC,OAAO,qBAC5K,2BAAG,4BAAQpB,KAAMA,EAAMY,GAAG,QAAQC,GAAG,OAAOC,EAAE,SAAQ,6BAASC,cAAc,UAAUC,IAAI,QAAQC,MAAM,KAAKC,YAAY,aAAaC,SAAS,sBAAsBC,OAAO,qBAC7K,2BAAG,4BAAQpB,KAAMA,EAAMY,GAAG,KAAKC,GAAG,OAAOC,EAAE,SAAQ,6BAASC,cAAc,UAAUC,IAAI,QAAQC,MAAM,KAAKC,YAAY,aAAaC,SAAS,8BAA8BC,OAAO,2B,QCvB5LC,G,2MAEF1J,MAAQ,CACJ2J,UAAU,EACVvH,MAAO,GACPnC,YAAY,G,EAGhB2J,gBAAkB,SAACxH,GACVA,EAAMyH,MAAM,OACb,EAAKzK,MAAMwK,gBAAgB,EAAKxK,MAAM+C,OAAQC,GACD,MAAzC,EAAKhD,MAAM0K,QAAQC,SAASC,UAC5B,EAAK5K,MAAM0K,QAAQG,KAAnB,WAA4B7H,EAAM8H,QAAQ,WAAY,S,EAKlEC,YAAc,kBAAM,EAAK9J,SAAS,CAAEsJ,UAAU,EAAMvH,MAAO,EAAKhD,MAAMgD,S,EACtEgI,eAAiB,SAAChK,GACK,KAAfA,EAAEiK,UAAiB,EAAKF,e,EAGhCG,eAAiB,WACT,EAAKtK,MAAMC,YAAY,EAAKI,SAAS,CAAEJ,YAAY,IACvD,EAAKI,SAAS,CAAEsJ,UAAU,K,EAG9BY,cAAgB,SAACnK,GACb,IAAMI,EAAWJ,EAAEE,cAAcC,MAC3BiK,EAAc,EAAKpL,MAAMqL,WAAW7C,MAAK,SAAC1E,GAC5C,OAAQA,EAAGd,MAAMsI,gBAAkBlK,EAASkK,eAAiBxH,EAAGoB,KAAO,EAAKlF,MAAM+C,UAGlF,EAAKnC,MAAMC,YAAY,EAAKI,SAAS,CAAEJ,YAAY,IAC/B,KAApBO,EAASmK,QAAiBnK,EAASsF,OAAS,KACzCtF,EAASqJ,MAAM,MAAQW,EAC1B,EAAKnK,SAAS,CAAE+B,MAAO5B,EAAUP,YAAY,IAC1C,EAAKI,SAAS,CAAE+B,MAAO5B,K,EAGlCoK,cAAgB,SAACxK,GACb,IAAMgC,EAAQhC,EAAEE,cAAcC,MAChB,UAAVH,EAAEU,KAAoB,EAAKd,MAAMC,aACjC,EAAKqK,iBACL,EAAKV,gBAAgBxH,IAEP,KAAdhC,EAAEW,UACF,EAAKuJ,iBACD,EAAKtK,MAAMC,YAAY,EAAKI,SAAS,CAAEJ,YAAY,M,wEAc3D,OAAIgB,KAAKjB,MAAM2J,SAEP,yBAAK/J,UAAWH,IAAOoL,mBACnB,2BAAOtJ,KAAK,OACRhB,MAAOU,KAAKjB,MAAMoC,MAClBxC,UAAWqB,KAAKjB,MAAMC,WAAaR,IAAOyB,MAAQ,GAClDC,SAAUF,KAAKsJ,cACfjJ,WAAW,EACXD,OAAQJ,KAAKqJ,eACblJ,UAAWH,KAAK2J,gBAEnB3J,KAAKjB,MAAMC,YAAc,kBAAC,EAAD,CAASH,KAb3C,uHAiBA,yBAAKF,UAAWH,IAAOqL,YACnB,0BAAMjL,QAASoB,KAAKkJ,YAAaY,WAAY9J,KAAKmJ,eAAgBY,SAAS,KACtE/J,KAAK7B,MAAMgD,QAEdnB,KAAK7B,MAAM6L,cAAgBhK,KAAK7B,MAAM8L,iBACjC,kBAAC,GA3BI,CAChB7C,KAAM,kBAAmBF,OAAQ,OAAQgD,SAAU,WAAYC,OAAQ,QAASC,MAAO,a,GAxD3E5J,IAAMC,WAyFf4J,sBACXC,YAAQ,KAAM,CAAE3B,gBFgOW,SAACzH,EAAQC,GAAT,8CAAmB,WAAMgF,GAAN,SAAAC,EAAA,sEAE1CD,EAASf,GAAgBlE,EAAQ,kBAAkB,IAFT,SAGnBF,EAAoBE,EAAQC,GAHT,OAIT,IAJS,OAI7BmF,KAAKiE,YACdpE,EAASd,GAAkBnE,EAAQC,IALG,gDAQ1CgF,EAAShE,EAAW,EAAD,KARuB,yBAU1CgE,EAASf,GAAgBlE,EAAQ,kBAAkB,IAVT,4EAAnB,yDE/N3BsJ,IAFWH,CAGb5B,IC5FIgC,G,2MAEFC,WAAa,WACT,EAAKvM,MAAMuM,WAAW,EAAKvM,MAAM+C,QAC5ByJ,MAAK,WAC2C,MAAzC,EAAKxM,MAAM0K,QAAQC,SAASC,UAC5B,EAAK5K,MAAM0K,QAAQG,KAAK,S,EAKxC4B,QAAU,SAACzJ,GAAW,IAAD,EAC6B,EAAKhD,MAA3C+C,EADS,EACTA,OAAQgC,EADC,EACDA,YAAa2H,EADZ,EACYA,aAExB3H,IAAgB0C,IAAa1C,IAAgBC,IAAW0H,GACzD,EAAK1M,MAAMyM,QAAQ1J,EAAQC,GH8ajB,WG3aV+B,GAA2B2H,GAC3B,EAAK1M,MAAM2M,cAAc5J,EAAQC,I,wEAK/B,IAAD,EAG4DnB,KAAK7B,MAD9D+C,EAFH,EAEGA,OAAQC,EAFX,EAEWA,MAAOK,EAFlB,EAEkBA,KAAMyC,EAFxB,EAEwBA,WAAYf,EAFpC,EAEoCA,YAAasG,EAFjD,EAEiDA,WAAYhH,EAF7D,EAE6DA,cAC9DuC,EAHC,EAGDA,aAAciF,EAHb,EAGaA,aAAcC,EAH3B,EAG2BA,eAAgBY,EAH3C,EAG2CA,aAE1CE,EAAkB7H,IAAgBC,GAAQc,EAAac,EAe7D,OACI,yBAAKpG,UAAWH,IAAOwM,cAEhBhB,GACG,uBAAGrL,UAAW,eAAiBH,IAAOyM,cACpCrM,QAASoB,KAAK0K,WAAYX,SAAS,IAAImB,aAAW,gBAExDlB,GACI,uBAAGrL,UAAW,eAAiBH,IAAOyM,cACpClB,SAAS,IAAImB,aAAW,gBAGhC,kBAAC,GAAD,CAAWhK,OAAQA,EAAQC,MAAOA,EAAOK,KAAMA,EAAMgI,WAAYA,EAC7DQ,aAAcA,EAAcC,eAAgBA,IAG/Cc,EAAkBvI,GACZ,yBAAK7D,UAAWH,IAAO2M,sBACtB,kBAAC,EAAD,CACI5K,YAAY,eACZ1B,KAtBhB,mFAuBgBW,eAlCQ,SAACD,GACzB,GAAiB,KAAbA,GAAmBA,EAASsF,OAAS,KAA2B,KAApBtF,EAASmK,OACrD,OAAO,GAiCKjK,QAASO,KAAK4K,UACjBC,GAAgB,kBAAC,GA9Bd,CAChBzD,KAAM,kBAAmBF,OAAQ,MAAOgD,SAAU,WAAYE,MAAO,MAAOD,OAAQ,gB,GAtCvE3J,IAAMC,WA4EzB2K,GAAO,CAAER,QHueQ,SAAC1J,EAAQC,GAAT,8CAAmB,WAAMgF,EAAUM,GAAhB,qBAAAL,EAAA,6DAGhClC,EAAauC,IAAWC,IAAItE,MAAMuE,MAAK,SAAC5D,GAAD,OAAUA,EAAKM,KAAOnC,KAAQgD,WAE3EiC,EAASf,GAAgBlE,EAAQ,gBAAgB,IALX,kBAOXF,EAAYE,EAAQC,GAPT,UAQD,KAD3BkF,EAP4B,QAQrBC,KAAKiE,WARgB,wBASxBc,EAAYhF,EAASC,KAAKA,KAAKgF,KAAKjI,GACpCyB,EAVwB,CAUPuG,GAVO,mBAUOnH,IACrCiC,EAASW,GAAc5F,EAAQ4D,IAXD,UAYxBqB,EAASK,GAAgBtF,EAAQ,IAZT,QAa9BiF,EAASL,GAAiB5E,EAAQiC,KAbJ,0DAgBlCgD,EAAShE,EAAW,EAAD,KAhBe,yBAkBlCgE,EAASf,GAAgBlE,EAAQ,gBAAgB,IAlBf,6EAAnB,yDGveC4J,cH8fK,SAAC5J,EAAQC,GAAT,8CAAmB,WAAMgF,EAAUM,GAAhB,2BAAAL,EAAA,6DAGtClC,EAAauC,IAAWC,IAAItE,MAAMuE,MAAK,SAAC5D,GAAD,OAAUA,EAAKM,KAAOnC,KAAQgD,WAE3EiC,EAAUf,GAAgBlE,EAAQ,gBAAgB,IALN,kBAOfF,EAAYE,EAAQC,GAPL,UAQL,KAD7B0F,EAPkC,QAQzBP,KAAKiE,WARoB,wBAS9Bc,EAAYxE,EAAWP,KAAKA,KAAKgF,KAAKjI,GACtCyB,EAV8B,CAUbuG,GAVa,mBAUCnH,IACrCiC,EAASW,GAAc5F,EAAQ4D,IAXK,UAYX9D,EAAgBE,GAZL,QAY9B6F,EAZ8B,OAa9BnC,EAASiB,GACT7C,EAAQ+D,EAAWT,KAAKC,MAC9BJ,EAASH,GAAkB9E,EAAQ,EAAG8B,EAAO4B,IAfT,0DAkBxCuB,EAAShE,EAAW,EAAD,KAlBqB,yBAoBxCgE,EAASf,GAAgBlE,EAAQ,gBAAgB,IApBT,6EAAnB,yDG9fUwJ,WHgQb,SAACxJ,GAAD,8CAAY,WAAMiF,GAAN,SAAAC,EAAA,sEAE9BD,EAASf,GAAgBlE,EAAQ,gBAAgB,IAFnB,SAGPF,EAAeE,GAHR,UAIG,IAJH,OAIjBoF,KAAKiE,WAJY,gCAKpBpE,EAASb,GAAapE,IALF,yDAQ9BiF,EAAShE,EAAW,EAAD,KARW,yBAU9BgE,EAASf,GAAgBlE,EAAQ,gBAAgB,IAVnB,6EAAZ,wDG9PXmJ,sBACXC,YAAQ,KAAMc,IACdZ,IAFWH,CAGbI,I,4DCvBac,GAhEM,SAACpN,GAAW,IAAD,EAECC,oBAAS,GAFV,mBAErBsK,EAFqB,KAEX8C,EAFW,OAGapN,mBAAS,IAHtB,mBAGrBqN,EAHqB,KAGPC,EAHO,KAKtBxC,EAAc,SAAC/J,GACjBqM,GAAQ,GACRE,EAAgBvM,EAAEE,cAAcsM,YAAYjC,SAK1CkC,EAAgB,kBAAMJ,GAAQ,IAE9BK,EAAkB,SAAC1M,GACrB,GAAIA,EAAEE,cAAcC,QAAUmM,EAAc,CACxC,IAAMK,EAAWC,EAAcC,WAAU,SAACC,GAAD,OAAWA,IAAU9M,EAAEE,cAAcC,SAC9EnB,EAAM+N,WAAW,CAAEJ,aAEvBF,KAeEO,EAAkB,kBAAMJ,EAAc5N,EAAM2N,WAC5CM,EAAuB,kBAAM5N,KAAQuN,EAAc5N,EAAM2N,WAAc,IAAMtN,KAAO6N,cAEpFN,EAAgB,CAAC,MAAO,SAAU,OAAQ,SAAU,SAEpDO,EAAkBP,EAAcjJ,KAAI,SAAAmJ,GAAK,OAC3C,4BAAQpM,IAAKoM,EAAOtN,UAAWH,KAAOyN,IAASA,MAEnD,OAAKvD,EAWG,4BACI6D,aAAcJ,IACdxN,UAAWyN,IACXhM,OAAQwL,EACRzL,UAnCa,SAAChB,GACJ,KAAdA,EAAEW,SAAgB8L,IACJ,KAAdzM,EAAEW,SAAgB+L,EAAgB1M,IAkC9BP,QA/Ba,SAACO,GAClBA,EAAEE,cAAcC,QAAUmM,GAC1BI,EAAgB1M,IA8BZkB,WAAW,GAAQiM,GAfvB,0BAAMvC,SAAS,IACXpL,UAAWyN,IACXxN,QAASsK,EACT/I,UAtCW,SAAChB,GACF,KAAdA,EAAEW,SAAgBoJ,EAAY/J,KAsCzBgN,IAJL,U,oBC0BGK,GArEG,SAACrO,GAAW,IAAD,EAEOC,oBAAS,GAFhB,mBAElBsK,EAFkB,KAERQ,EAFQ,OAGC9K,mBAAS,IAHV,mBAGlB+C,EAHkB,KAGXsL,EAHW,OAIMrO,oBAAS,GAJf,mBAIlBY,EAJkB,KAIN0N,EAJM,KAOnBC,EAAiB,WACnBzD,GAAY,GACZuD,EAAStO,EAAMgD,QAObkI,EAAiB,WACfrK,GAAY0N,GAAS,GACzBxD,GAAY,IA4BhB,OAAKR,EASG,0BAAM/J,UAAWH,KAAOoO,WACpB,2BAAOtM,KAAK,OACRhB,MAAO6B,EACPxC,UAAWK,EAAaR,KAAOyB,MAAQ,GACvCC,SAtCM,SAACf,GACnB,IAAMI,EAAWJ,EAAEE,cAAcC,MAC7BN,GAAY0N,GAAS,GACD,KAApBnN,EAASmK,QAAiBnK,EAASsF,OAAS,KAC5C4H,EAASlN,GACTmN,GAAS,IACND,EAASlN,IAiCJc,WAAW,EACXD,OAAQiJ,EACRlJ,UAhCM,SAAChB,GACnB,IAAMgC,EAAQhC,EAAEE,cAAcC,MAChB,UAAVH,EAAEU,KAAoBb,IACtBb,EAAM+N,WAAW,CAAE/K,UACnBkI,KAEc,KAAdlK,EAAEW,UACFuJ,IACIrK,GAAY0N,GAAS,OAyBnB1N,GAAc,kBAAC,EAAD,CAASH,KApB7B,sFAKA,0BAAMkL,SAAS,IACXpL,UAAWH,KAAOoO,UAClBhO,QAAS+N,EACT7C,WAvCc,SAAC3K,GACJ,KAAfA,EAAEiK,UAAiBuD,MAsCiBxO,EAAMgD,MAH1C,U,oBCqBGmJ,eAAQ,KAAM,CAAEuC,YNuoBJ,SAAC3L,EAAQO,EAAQqL,EAASC,GAA1B,8CAA4C,WAAM5G,EAAUM,GAAhB,mCAAAL,EAAA,yDAE7D4G,OAAqCC,IAA3BF,GAAyCA,EAAgB,EAAI,KACvEG,EAAazG,IAAWC,IAAItE,MAAMuE,MAAK,SAAC5D,GAAD,OAAUA,EAAKM,KAAOnC,KAE7DiM,EAAa,WAAO,IACdjK,EAA8BgK,EAA9BhK,YAAagC,EAAiBgI,EAAjBhI,aAGrB,OAAgB,OAAZ8H,GAAgC,IAAZF,EAAsB,KAC9B,OAAZE,EAAyBE,EAAWhJ,WAAW4I,EAAU,GAGzD5J,IAAgB0C,IAAyB,IAAZoH,EAAsB9H,EACvC,IAAZ8H,EAAsB,KACtBA,IAAYF,EAAgBI,EAAWhJ,WAAW8I,EAAU,GAC5DA,GAAWF,EAAgBI,EAAWhJ,WAAW8I,QAArD,GAGEI,EAAgB,WAClB,IAAMlJ,EAAU,YAAOgJ,EAAWhJ,YAClC,GAAI8I,EAAUF,EAAS,CAEnB,IADA,IAAMO,EAASnJ,EAAW4I,GACjBQ,EAAIR,EAAU,EAAGQ,GAAKN,EAASM,IACpCpJ,EAAWoJ,EAAI,GAAKpJ,EAAWoJ,GAGnC,OADApJ,EAAW8I,GAAWK,EACfnJ,EAEX,GAAI8I,EAAUF,EAAS,CAEnB,IADA,IAAMO,EAASnJ,EAAW4I,GACjBQ,EAAIR,EAASQ,EAAIN,EAASM,IAC/BpJ,EAAWoJ,GAAKpJ,EAAWoJ,EAAI,GAGnC,OADApJ,EAAW8I,GAAWK,EACfnJ,EAEX,OAAOA,GAKK,OAAZ8I,GAAoBA,KAAaF,EA1C8B,wBA2CzDxL,EAAiB6L,IACfxK,EAA6BuK,EAA7BvK,YAAaO,EAAgBgK,EAAhBhK,YA5C0C,EA8C5CgK,EAAWlK,MAAM2D,MAAK,SAAC4G,GAAD,OAAOA,EAAElK,KAAO5B,KAAjDmD,EA9CuD,EA8CvDA,OACFV,EAAakJ,IAEb5L,EAAOuL,EAAgBS,KAAKC,KAAKV,EAAgBpK,GAAe,EAGtEwD,EAASf,GAAgBlE,EAAQ,gBAAgB,IApDc,oBAsDpCF,EAAgBE,EAAQO,EAAQH,GAtDI,WAuD1B,IAvD0B,OAuD9CgF,KAAKiE,WAvDyC,oBAwDnDrH,IAAgBC,GAxDmC,kCAyD7CgD,EAASK,GAAgBtF,EAAQM,IAzDY,QA0DnD2E,EAASW,GAAc5F,EAAQgD,IA1DoB,WA1QjD,WAsUFhB,GAA0BA,IAAgB0C,GA5DS,kCA6D7CO,EAASD,GAAgBhF,EAAQM,EAAMoD,IA7DM,2DAkE3DuB,EAAShE,EAAW,EAAD,KAlEwC,yBAoE3DgE,EAASf,GAAgBlE,EAAQ,gBAAgB,IApEU,8EAA5C,0DMvoBZoJ,EApEG,SAAC,GAA8D,IAA5DpJ,EAA2D,EAA3DA,OAAQO,EAAmD,EAAnDA,OAAQiM,EAA2C,EAA3CA,WAAYtJ,EAA+B,EAA/BA,YAAayI,EAAkB,EAAlBA,YAAkB,EAE9CzO,oBAAS,GAFqC,mBAErEuP,EAFqE,KAEzDnC,EAFyD,OAGpCpN,mBAAS,MAH2B,mBAGrEwP,EAHqE,KAGvDC,EAHuD,KAKtEC,EAAe,SAAC3O,GAClBqM,GAAQ,GACR,IAAMuC,EAAU5O,EAAEE,cAAcsM,YAC3BqC,MAAM,IACNhM,QAAO,SAACC,GAAD,OAAQA,EACf2G,MAAM,cAAYqF,KAAK,IAE5BJ,EAAgBE,IAQdG,EAAgB,kBAAM1C,GAAQ,IAE9B2C,EAAe,SAAChP,GAClB,IAAM4N,EAAgB5N,EAAEE,cAAcC,MAElCuN,EAAY3L,EAAQO,EADJ2C,EAAc,EACO2I,GACrCmB,KAwBFE,EATa,WAEf,IADA,IAAIA,EAAY,GACPd,EAAI,EAAGA,GAAKI,EAAYJ,IAAK,CAClC,IAAMrL,EAAK,4BAAQ3C,MAAOgO,EAAGzN,IAAKyN,GAAIA,GACtCc,EAAUpF,KAAK/G,GAEnB,OAAOmM,EAGOC,GAElB,OAAIV,EACA,4BAAQtN,WAAS,EACbD,OAAQ8N,EACR/N,UA1Bc,SAAChB,GACD,KAAdA,EAAEW,SAAgBoO,IACJ,KAAd/O,EAAEW,SAAgBqO,EAAahP,IAyB/BP,QAtBgB,SAACO,GACjBA,EAAEE,cAAcC,QAAUsO,GAE1BO,EAAahP,IAoBboN,aAAcnI,GAAcgK,GAIhC,0BAAMrE,SAAS,IACXpL,UAAWH,KAAO8P,UAClB1P,QAASkP,EACThE,WAhDgB,SAAC3K,GACF,KAAfA,EAAEiK,UAAiB0E,EAAa3O,KA4CpC,OAGwCiF,EAHxC,gBCXOkG,eAAQ,KAAM,CAAC4B,WP2mBJ,SAAChL,EAAQO,EAAQ8M,GAAjB,8CAA+B,WAAMpI,EAAUM,GAAhB,iCAAAL,EAAA,6DAG/CoI,EAAa/H,IAAWC,IAAItE,MAAMuE,MAAM,SAAC2E,GAAD,OAAUA,EAAKjI,KAAOnC,KAC5DM,EAAsBgN,EAAtBhN,KAAM0B,EAAgBsL,EAAhBtL,YACRuL,EAAcD,EAAWxL,MAAM6B,OAC/B6J,EAAaF,EAAWxL,MAAM2D,MAAM,SAAC2E,GAAD,OAAUA,EAAKjI,KAAO5B,KAC1DkN,EAP+C,eAO5BD,EAP4B,GAObH,GAExCpI,EAAUR,GAAgBzE,EAAOO,EAAQ,iBAAiB,IATL,kBAYxBT,EAAeE,EAAQO,EAAQkN,GAZP,UAad,KAD7B9H,EAZ2C,QAalCP,KAAKiE,WAb6B,oBAczCrH,IAAgBC,GAdyB,iBAezCgD,GAxPMhC,EAwPgB0C,EAAWP,KAAKA,KAAKgF,KAxP3B,CAAChL,KAAMkE,GAAaL,UAyOK,yCAiBhBnD,EAAgBE,GAjBA,YAiBnC6F,EAjBmC,QAkBzBT,KAAKrG,MAlBoB,oBAmB/B+C,EAAQ+D,EAAWT,KAAKC,MACxB3B,EAAS1B,IAAgB0C,GACzBC,GACAA,GAEc,IAAhB4I,GAA8B,IAATjN,QAAmCyL,IAArBsB,EAAU3J,OAxBZ,iBAyBjCuB,EAASH,GAAkB9E,EAAQM,EAAO,EAAGwB,EAAO4B,IAzBnB,2BA0BV,IAAhB6J,GAA8B,IAATjN,QAAmCyL,IAArBsB,EAAU3J,OA1BnB,kCA2B3BuB,EAASK,GAAgBtF,EAAQ,IA3BN,QA4BjCiF,EAASL,GAAiB5E,EAAQiC,KA5BD,wBA8BjCgD,EAASH,GAAkB9E,EAAQM,EAAMwB,EAAO4B,IA9Bf,0DAmCjDuB,EAAShE,EAAW,EAAD,KAnC8B,yBAqCjDgE,EAASR,GAAgBzE,EAAQO,EAAQ,iBAAiB,IArCT,+CAzOpC,IAAC0C,IAyOmC,2BAA/B,yDO3mBgByK,gBPojBX,SAAC1N,EAAQO,GAAT,8CAAoB,WAAM0E,EAAUM,GAAhB,+BAAAL,EAAA,6DAGzCoI,EAAa/H,IAAWC,IAAItE,MAAMuE,MAAM,SAAC2E,GAAD,OAAUA,EAAKjI,KAAOnC,KAC7DM,EAA8CgN,EAA9ChN,KAAM0B,EAAwCsL,EAAxCtL,YAAae,EAA2BuK,EAA3BvK,WAAYtB,EAAe6L,EAAf7L,YAChC8L,EAAcD,EAAWxL,MAAM6B,OAC/BgK,EAAa5K,EAAauJ,KAAKC,KAAKxJ,EAAWtB,GAAe,EAEpEwD,EAAUR,GAAgBzE,EAAOO,EAAQ,iBAAiB,IARX,kBAUpBT,EAAeE,EAAQO,GAVH,UAWV,IAXU,OAW9B6E,KAAKiE,WAXyB,sBAanB,KAAhBkE,GAAsBjN,EAAOqN,GAbM,oBAc/B3L,IAAgBC,GAde,kCAezBgD,EAASK,GAAgBtF,EAAQM,IAfR,uCAiBzBoD,EAAS1B,IAAgB0C,GACzBC,GACAA,GAnByB,UAoBzBM,EAASD,GAAgBhF,EAAQM,EAAMoD,IApBd,WAwBnB,IAAhB6J,GAA8B,IAATjN,EAxBc,oBAyB/B0B,IAAgBC,GAzBe,kCA0BzBgD,EAASK,GAAgBtF,EAAQM,EAAO,IA1Bf,uCA4BzBoD,EAAS1B,IAAgB0C,GACzBC,GACAA,GA9ByB,UA+BzBM,EAASD,GAAgBhF,EAAQM,EAAO,EAAGoD,IA/BlB,WAoCnB,IAAhB6J,GAA8B,IAATjN,GAAc0B,IAAgBC,GApChB,kCAqC7BgD,EAASK,GAAgBtF,EAAQ,IArCJ,QAsCnCiF,EAASL,GAAiB5E,EAAQiC,KAtCC,WAyCnCD,IAAgBC,GAzCmB,kCA0C7BgD,EAAST,GAAWxE,EAAQO,EAAQD,IA1CP,iDA4C7B2E,EAASF,GAAe/E,EAAQO,EAAQD,IA5CX,0DAgD3C2E,EAAShE,EAAW,EAAD,KAhDwB,yBAkD3CgE,EAASR,GAAgBzE,EAAQO,EAAQ,iBAAiB,IAlDf,6EAApB,0DOpjBhB6I,EA7CE,SAACnM,GAAW,IAAD,EAEoDA,EAAMgG,KAAtE1C,EAFY,EAEhB4B,GAAYuB,EAFI,EAEJA,OAAQR,EAFJ,EAEIA,YAAa0H,EAFjB,EAEiBA,SAAU3K,EAF3B,EAE2BA,MAAO2N,EAFlC,EAEkCA,cAClD5N,EAAuB/C,EAAvB+C,OAAQwM,EAAevP,EAAfuP,WAKVxB,EAAa,SAACqC,GAAD,OAAepQ,EAAM+N,WAAWhL,EAAQO,EAAQ8M,IAW7DQ,EAAiBD,EAA6B,KAbjC,kBAAM3Q,EAAMyQ,gBAAgB1N,EAAQO,IAevD,OACI,yBAAK9C,UAAWH,KAAOwQ,eACnB,yBAAKrQ,UAAWiG,EAASpG,KAAOyQ,WAAa,IAEzC,2BACItQ,UAAWH,KAAO0Q,YAClBhP,SAjBM,SAACf,GACnB,IAAMgQ,EAAYhQ,EAAEE,cAAc+P,QAC5BvJ,GACAA,GACNqG,EAAW,CAAEtH,OAAQuK,KAcT7O,KAAK,WACL8O,QAASxK,IAEb,kBAAC,GAAD,CAAW1D,OAAQA,EAAQO,OAAQA,EAC/B2C,YAAaA,EAAasJ,WAAYA,IAC1C,kBAAC,GAAD,CAAWvM,MAAOA,EAAO+K,WAAYA,IACrC,kBAAC,GAAD,CAAcJ,SAAUA,EAAUI,WAAYA,IAC9C,4BAAQvN,UAAW,eAAiBH,KAAOyM,cAAerM,QAASmQ,IAElED,GAAiB,kBAAC,GApBX,CAAE1H,KAAM,kBAAmBF,OAAQ,aCT5CmI,GAfG,SAAC,GAA4B,IAA1BrM,EAAyB,EAAzBA,MAAUsM,EAAe,0BAEpCC,EAAavM,EAAMF,KAAI,SAACqB,GAAD,OACzB,kBAAC,GAAD,eAAUtE,IAAKsE,EAAKd,GAAIc,KAAMA,GAAWmL,OAI7C,OACI,yBAAK3Q,UAAWH,KAAOgR,WAClBD,I,iDCLPE,G,2MAGFC,mBAAqB,kBAAM,EAAKtQ,SAAS,CAAEuQ,WAAW,K,EAEtD5Q,MAAQ,CACJ4Q,WAAW,G,EAGfC,WAAa,kBAAM,EAAKxQ,SAAS,CAAEuQ,WAAY,EAAK5Q,MAAM4Q,a,EAE1DE,eAAiB,SAAC9C,GAAmB,IAAD,EACgB,EAAK5O,MAA7C+C,EADwB,EACxBA,OAAe4L,EADS,EAChB7J,OAChB6M,EAFgC,EACAA,aACpB5O,EAAQ4L,EAASC,GAC7B,EAAK6C,c,wEAIC,IAAD,SAEyB5P,KAAK7B,MAA3B4R,EAFH,EAEGA,WAAY9M,EAFf,EAEeA,MAad+M,EAXc,WAEhB,IADA,IAAIA,EAAW,GADO,WAEb1C,GACL,IACM2C,EAAe3C,EAAI,IAAOrK,EAC1BzE,KAAO0R,YAAc1R,KAAO0R,YAAc,IAAM1R,KAAO2R,OACvD3O,EAAO,4BAAQ7C,UAAWsR,EAAarR,QAH7B,kBAAM,EAAKiR,eAAevC,IAGqBzN,IAAKyN,GAAIA,GACxE0C,EAAShH,KAAKxH,IALT8L,EAAI,EAAGA,GAAKyC,EAAYzC,IAAM,EAA9BA,GAOT,OAAO0C,EAEMI,GAEXC,EAAgBrQ,KAAKjB,MAAM4Q,UAAYnR,KAAO8R,QAAU,GAE9D,OACI,yBAAK3R,UAAWH,KAAO+R,WACnB,4BAAQ5R,UAAW0R,EAAezR,QAASoB,KAAK4P,YAC3C3M,EAAQ,EAAI,IAAM8M,GAEtB/P,KAAKjB,MAAM4Q,WACL,yBAAMhR,UAAWH,KAAOgS,UAAWR,Q,GA3ClCxP,IAAMC,WAkDf4J,sBACXC,YAAQ,KAAM,CAAEwF,YT6SO,SAAC5O,EAAQ4L,EAASC,GAAlB,8CAAoC,WAAM5G,EAAUM,GAAhB,uBAAAL,EAAA,yDAIrD+G,EAAa,WAGf,OAAgB,OAAZH,GAAgC,IAAZF,EAAsB,KAC9B,OAAZE,EAAyBvG,IAAWC,IAAIrE,WAAWyK,EAAQ,GAG/C,IAAZE,EAAsB,KACtBA,IAAYF,EAAgBrG,IAAWC,IAAIrE,WAAW2K,EAAQ,GAC9DA,GAAWF,EAAgBrG,IAAWC,IAAIrE,WAAW2K,QAAzD,GAGEyD,EAAoB,WACtB,IAAMrO,EAAK,YAAOqE,IAAWC,IAAItE,OACjC,GAAI4K,EAAUF,EAAS,CAEnB,IADA,IAAM4D,EAAWtO,EAAM0K,GACdQ,EAAIR,EAAQ,EAAGQ,GAAKN,EAASM,IAClClL,EAAMkL,EAAE,GAAKlL,EAAMkL,GAGvB,OADAlL,EAAM4K,GAAW0D,EACVtO,EAEX,GAAI4K,EAAUF,EAAS,CAEnB,IADA,IAAM4D,EAAWtO,EAAM0K,GACdQ,EAAIR,EAASQ,EAAIN,EAASM,IAC/BlL,EAAMkL,GAAKlL,EAAMkL,EAAE,GAGvB,OADAlL,EAAM4K,GAAW0D,EACVtO,EAEX,OAAOA,GAGM,QAnCX4K,OAAsCC,IAA5BF,GAA2CA,EAAgB,EAAI,OAmCtDC,KAAaF,EArCqB,wBAsCjDxL,EAAiB6L,IACjBzJ,EAAiB+M,IAvCgC,SA0CnDtK,EAAShB,IAAgB,IA1C0B,UA2C5BnE,EAAgBE,EAAQI,GA3CI,QA4ClB,IA5CkB,OA4CtCgF,KAAKiE,YACdpE,EAASZ,GAAc7B,IA7CwB,kDAgDnDyC,EAAShE,EAAW,EAAD,KAhDgC,yBAkDnDgE,EAAShB,IAAgB,IAlD0B,6EAApC,2DS5SvBwL,KAFWtG,CAGboF,I,oBCrDImB,G,2MAGFlB,mBAAqB,kBAAM,EAAKtQ,SAAS,CAAEV,UAAU,K,EAErDK,MAAQ,CACJL,UAAU,G,EAGdmS,cAAgB,kBAAM,EAAKzR,SAAS,CAAEV,UAAW,EAAKK,MAAML,Y,wEAElD,IAAD,EAE6DsB,KAAK7B,MAA/D+C,EAFH,EAEGA,OAAQgC,EAFX,EAEWA,YAAaE,EAFxB,EAEwBA,iBAAkB0N,EAF1C,EAE0CA,eAEzCC,EAAY7N,IAAgBC,GAAQ3E,KAAO8R,QAAU,GACrDU,EV+aQ,WU/aO9N,EAAyB1E,KAAO8R,QAAU,GACzDW,EAAkB/N,IAAgB0C,GAAYpH,KAAO8R,QAAU,GAc/DY,EACFlR,KAAKjB,MAAML,SAAWF,KAAO2S,YAAc3S,KAAO2S,YAAc,IAAM3S,KAAO8R,QAEjF,OACI,yBAAK3R,UAAWH,KAAO4S,cACnB,4BAAQzS,UAAWuS,EAAmBtS,QAASoB,KAAK6Q,eAjB7C,CAAE1N,MAAO,MAAOyC,UAAW,YAAayL,OAAQ,UAkB5CnO,KACTlD,KAAKjB,MAAML,UACT,yBAAKC,UAAWH,KAAO8S,eACnB,4BAAQ1S,QAnBJ,WACZsE,IAAgBC,IAAO2N,EAAe5P,EAAQiC,KAmBlCxE,UAAWoS,EAAWQ,SAAUnO,GADpC,OAEA,4BAAQxE,QAlBE,WAClBsE,IAAgB0C,IAAWkL,EAAe5P,EAAQ0E,KAkBtCjH,UAAWsS,EAAiBM,SAAUnO,GAD1C,aAEA,4BAAQxE,QAjBD,WVoaT,WUnaNsE,GAAwB4N,EAAe5P,EVmajC,WUlZMvC,UAAWqS,EAAcO,SAAUnO,GADvC,gB,GA5CG5C,IAAMC,WAsDlB4J,sBACXC,YAAQ,KAAM,CAAEwG,eVgZU,SAAC5P,EAAQgC,GAAT,OAAyB,SAACiD,EAAUM,GAI9D,IAAM+H,EAAa/H,IAAWC,IAAItE,MAAMuE,MAAK,SAAC6K,GAAD,OAAOA,EAAEnO,KAAOnC,KAG7D,GAFmBsN,EAAWtL,cAEX0C,GAAW,CAC1B,IACMV,EAAkC,IADlBsJ,EAAWxL,MAAMgJ,WAAU,SAACuB,GAAD,OAAOA,EAAE3I,SAAWiB,OACI,IAA5B2I,EAAWxL,MAAM6B,OACxD,KACA2J,EAAWxL,MAAM,GAAGK,GAC1B8C,EAASJ,GAAa7E,EAAQgE,IAIlCiB,EAASa,GAAa9F,EAAQgC,EAAa,IAI3CiD,EAAUL,GAAiB5E,EAAQgC,QUnanCyN,KAFWtG,CAGbuG,I,oBC5BatG,eAAQ,KAAM,CAAEtD,iBAAhBsD,EA/BI,SAAC,GAA2D,IAA1DpJ,EAAyD,EAAzDA,OAAQgC,EAAiD,EAAjDA,YAAa1B,EAAoC,EAApCA,KAAMqN,EAA8B,EAA9BA,WAAY7H,EAAkB,EAAlBA,aAAkB,EAG1C5I,oBAAS,GAHiC,mBAGnEmT,EAHmE,KAGzDE,EAHyD,KAI1EC,qBAAU,kBAAMD,GAAY,KAAQ,CAACjQ,IAsBrC,OACI,yBAAK7C,UAAWH,KAAOmT,iBArBL,WAElB,IADA,IAAMC,EAAa,GADK,WAEdtE,GACN,IAKMuE,IAAgBvE,IAAM9L,IAAQ+P,GAC9BO,EAAYxE,IAAM9L,EAAN,UAAgBhD,KAAOuT,SAAvB,YAAmCvT,KAAO2R,QAAW3R,KAAOuT,SAExEA,EACF,4BAAQlS,IAAKyN,EAAGiE,SAAUM,EACtBlT,UAAYmT,EAAYlT,QAVhB,WACZoI,EAAa9F,EAAQgC,EAAaoK,GAClCmE,GAAY,KAQsCnE,GACtDsE,EAAW5I,KAAK+I,IAZVzE,EAAI,EAAGA,GAAKuB,EAAYvB,IAAO,EAA/BA,GAcV,OAAOsE,EAKmCI,OCYnCxH,gBApCI,SAACrM,GAAW,IAEnB+C,EACgD/C,EADhD+C,OAAQgC,EACwC/E,EADxC+E,YAAa6M,EAC2B5R,EAD3B4R,WAAY9M,EACe9E,EADf8E,MACrCgB,EAAoD9F,EAApD8F,WAAYtB,EAAwCxE,EAAxCwE,YAAanB,EAA2BrD,EAA3BqD,KAAM4B,EAAqBjF,EAArBiF,iBAM7ByL,EAAa5K,EAAauJ,KAAKC,KAAKxJ,EAAatB,GAAe,EAGhEgN,EAAgD,MAApCxR,EAAM0K,QAAQC,SAASC,SAIzC,OACI,yBAAKpK,UAAWH,KAAOyT,aACjBpD,EAAa,GACR,kBAAC,GAAD,CAAYrN,KAAMA,EAAMqN,WAAYA,EAC/B3N,OAAQA,EAAQgC,YAAaA,IAGzC,kBAAC,GAAD,CAAchC,OAAQA,EAAQgC,YAAaA,EACvCE,iBAAkBA,IAGrBuM,GAA4B,IAAfI,GACP,kBAAC,GAAD,CAAW9M,MAAOA,EAAO8M,WAAYA,EAAY7O,OAAQA,IAC/DkC,GAAoB,kBAAC,GAxBV,CAChBgE,KAAM,kBAAmBF,OAAQ,OAAQgD,SAAU,WAAYC,OAAQ,MAAOC,MAAO,YCyC9E8H,G,2MA3CXC,OAAS,WAAO,IAAD,EACuC,EAAKhU,MAA/C4R,EADG,EACHA,WAAYvG,EADT,EACSA,WAAYhH,EADrB,EACqBA,cADrB,EAI0B,EAAKrE,MAAM4E,KAFxC5B,EAFG,EAEHA,MAAOkC,EAFJ,EAEIA,GAAI7B,EAFR,EAEQA,KAAMyC,EAFd,EAEcA,WAAYtB,EAF1B,EAE0BA,YAAaK,EAFvC,EAEuCA,MAAO+B,EAF9C,EAE8CA,aACrD9B,EAHO,EAGPA,MAAOC,EAHA,EAGAA,YAAa8G,EAHb,EAGaA,aAAcC,EAH3B,EAG2BA,eAAgBY,EAH3C,EAG2CA,aAClDzH,EAJO,EAIPA,iBAAkBc,EAJX,EAIWA,WAChBwJ,EAAaxJ,EAAaA,EAAWW,OAAS,KAGpD,OACI,yBAAKlG,UAAWH,IAAO4T,UACnB,6BAASzT,UAAWH,IAAO6T,kBACvB,kBAAC,GAAD,CACIlR,MAAUA,EACVD,OAAWmC,EACXH,YAAgBA,EAChB1B,KAASA,EACTgB,cAAeA,EACfuC,aAAgBA,EAChBd,WAAYA,EACZuF,WAAYA,EACZQ,aAAgBA,EAChBC,eAAgBA,EAChBY,aAAcA,IAClB,kBAAC,GAAD,CACI7H,MAAOA,EACP9B,OAAQmC,EACRqK,WAAYA,KAGpB,kBAAC,GAAD,CACIxM,OAAQmC,EACR7B,KAAQA,EACRyB,MAAOA,EACP8M,WAAYA,EACZ7M,YAAgBA,EAChBP,YAAeA,EACfsB,WAAYA,EACZb,iBAAkBA,M,mFAzC9BpD,KAAK7B,MAAMmU,aAAatS,KAAK7B,MAAM4E,KAAKM,Q,GAHzB7C,IAAMC,W,wCCOd+J,gBARE,SAACrM,GACd,OACI,yBAAKQ,UAAWH,KAAO+T,UACnB,4CAAiB,kCAAQpU,EAAM2K,SAASC,SAAvB,KAAjB,4B,oBCiBGyJ,GArBK,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAE3BhB,qBAAU,WACN,IAAMiB,EAAUC,WAAWF,EAAY,KACvC,OAAO,kBAAMG,aAAaF,MAC5B,CAACD,IAMH,OACI,yBAAK/T,UAAWH,KAAOyB,OAClBwS,EACA,0BAAM9T,UAAS,sBAAiBH,KAAOsU,WAAaC,cAAY,OAC7DnU,QAAS8T,EAAY3I,SAAS,IAAID,WAR7B,SAAC3K,GACA,UAAVA,EAAEU,KAAiB6S,KAQfxH,aAAW,kBCLrB8H,G,2MAOFV,aAAe,SAACpR,GAAD,OAAY,EAAK/C,MAAMmU,aAAapR,I,mFAJ/ClB,KAAK7B,MAAM8U,iB,+BAOL,IAAD,SAGqBjT,KAAK7B,MADxBiE,EAFF,EAEEA,MAAO2N,EAFT,EAESA,WAAYtN,EAFrB,EAEqBA,cAAeD,EAFpC,EAEoCA,cAAetB,EAFnD,EAEmDA,OAAQqB,EAF3D,EAE2DA,aAC5D2Q,EAHC,EAGDA,OAAQR,EAHP,EAGOA,WAENlJ,EAAapH,EAAMU,KAAI,SAACC,GAAD,MAAW,CAAC5B,MAAO4B,EAAK5B,MAAOkC,GAAIN,EAAKM,OAG/D8P,EAAc/Q,EAAMU,KAAI,SAACC,GAC3B,IAAMqQ,EAAOrQ,EAAK5B,MAAM8H,QAAQ,WAAY,KAC5C,OACA,kBAAC,IAAD,CAAOmK,KAAI,WAAMA,GAAQC,OAAK,EAACxT,IAAKkD,EAAKM,GAAI8O,OAAQ,kBACjD,kBAAC,GAAD,CAAUpP,KAAMA,EAAMlD,IAAKkD,EAAKM,GAAIb,cAAeA,EAC/C8P,aAAc,EAAKA,aAAc9I,WAAYA,UAKnD8J,EAAWlR,EAAMU,KAAI,SAACC,GAAD,OACvB,kBAAC,GAAD,CAAUA,KAAMA,EAAMlD,IAAKkD,EAAKM,GAAImG,WAAYA,EAAYuG,WAAYA,EACpEuC,aAAc,EAAKA,aAAc9P,cAAeA,OAGlD+Q,EAAgBnR,EAAMU,KAAK,SAAEC,GAC/B,IAAMyQ,EAAOzQ,EAAK5B,MAAM8H,QAAQ,WAAY,KAC5C,OACI,wBAAIpJ,IAAKkD,EAAKM,IAAI,kBAAC,IAAD,CAASoQ,GAAE,WAAMD,IAASzQ,EAAK5B,WAyBnDuS,EAAYR,EAAOrO,OACnBqO,EAAOpQ,KAAI,SAAC7C,EAAOiC,GAAR,OACT,kBAAC,GAAD,CAAauQ,QAASxS,EAAOyS,WAAYA,EAAY7S,IAAKqC,OAC5D,KAKN,OACI,yBAAKvD,UAAWH,IAAOkI,KACC,IAAlBwM,EAAOrO,QAAiB,yBAAKlG,UAAWH,IAAOmV,aAAcD,GAE/D,yBAAK/U,UAAWH,IAAOoV,YACjBrR,GAAgB,kBAAC,GAjBP,CACpB2H,SAAU,WAAYhD,OAAQ,OAAQ2M,IAAK,SAAUzJ,MAAO,MAAOhD,KAAM,UAiBjE,kBAAC,IAAD,CAASqM,GAAG,IAAIJ,OAAK,EAAC1U,UAAWH,IAAOsV,WACpC,4BACI,yBAAKC,IAAKC,KAAMC,IAAI,OAAOtV,UAAWH,IAAO0V,kBADjD,kBAKH9R,EAAMyC,OAASpC,GACT,yBAAK9D,UAAWH,IAAO2V,iBAClB,kBAAC,EAAD,CAAa1U,QAjCrB,SAAC0B,GACb,EAAKhD,MAAMiW,QAAQjT,GAC0B,MAAzC,EAAKhD,MAAM0K,QAAQC,SAASC,UAC5B,EAAK5K,MAAM0K,QAAQG,KAAK,MA8BuBnK,KAhBnD,qHAiBwBW,eA5CA,SAACD,GACzB,IAAMgK,EAAcC,EAAW7C,MAAK,SAAC1E,GACjC,OAAQA,EAAGd,MAAMsI,gBAAkBlK,EAASkK,eAAiBxH,EAAGoB,KAAOnC,KAG3E,GAAwB,KAApB3B,EAASmK,QAAiBnK,EAASsF,OAAS,KAAOtF,EAASqJ,MAAM,MAAQW,EAC1E,OAAO,GAsCkDhJ,YAAY,eAGrE,yBAAK5B,UAAWH,IAAO6V,uBACnB,4BAAKd,IAET,yBAAK5U,UAAWH,IAAO8V,WACnB,kBAAC,IAAD,KACKnB,EACD,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GAAEC,GACvB,kBAAC,IAAD,CAAOiB,UAAWC,Y,GA9FxBhU,IAAMC,WAmHT4J,sBACXC,aAdoB,SAACvL,GACrB,MAAO,CACHqD,MAAOrD,EAAM2H,IAAItE,MACjB2N,WAAYhR,EAAM2H,IAAItE,MAAMyC,OAC5BtC,aAAcxD,EAAM2H,IAAIpE,cAAcC,aACtCE,cAAe1D,EAAM2H,IAAIjE,cACzBD,cAAezD,EAAM2H,IAAIlE,cACzB0Q,OAAQnU,EAAMmU,OAAOrO,OAAS9F,EAAMmU,OAAOpQ,KAAI,SAACb,GAAD,OAAQA,EAAGwQ,WAAW1T,EAAMmU,UAOtD,CAACD,ahBkKF,yDAAM,WAAM9M,GAAN,eAAAC,EAAA,sEAE1BD,EAAShB,IAAgB,IAFC,SAGHnE,IAHG,OAGpBqF,EAHoB,OAI1BF,GANgB/D,EAMQiE,EAASC,KANN,CAAEhG,KAAMuC,GAAeT,WAExB,gDAM1B+D,EAAShE,EAAW,EAAD,KANO,yBAQ1BgE,EAAShB,IAAgB,IARC,+CAFX,IAAC/C,IAEU,0BAAN,uDgBlKgBkQ,ahBmShB,SAACpR,GAAD,8CAAY,WAAOiF,GAAP,eAAAC,EAAA,6DACpCD,EAASf,GAAgBlE,EAAQ,kBAAkB,IADf,kBAGTF,EAAgBE,GAHP,OAG1BmF,EAH0B,OAIhCF,EAASX,GAAetE,EAAQmF,EAASC,KAAKC,MAAOF,EAASC,KAAKrC,aAJnC,gDAMhCkC,EAAShE,EAAW,EAAD,KANa,yBAQhCgE,EAASf,GAAgBlE,EAAQ,kBAAkB,IARnB,4EAAZ,uDgBnS8BkT,QhBkLnC,SAACjT,GAAD,8CAAW,WAAMgF,GAAN,eAAAC,EAAA,sEAE1BD,EAAShB,IAAgB,IAFC,SAGHnE,EAAYG,GAHT,OAGpBkF,EAHoB,OAI1BF,GANWpD,EAMQsD,EAASC,KAAKA,KAAKgF,KANjB,CAAChL,KAAMgD,GAAUP,UAEZ,gDAM1BoD,EAAShE,EAAW,EAAD,KANO,yBAQ1BgE,EAAShB,IAAgB,IARC,+CAFhB,IAACpC,IAEe,0BAAX,uDgBlL4C2P,WjB1GvC,iBAAO,CAAEpS,KAAMyB,MiB2GvCyI,IAFWH,CAGb2I,I,kBC9HIyB,GAAeC,2BAAgB,CACjChO,IAAKhE,GACLwQ,OAAQtR,IAMG+S,GAFDC,uBAAYH,GAAcI,+BAAoBC,2BAAgBC,QCJ5EC,IAAS7C,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUwC,MAASA,IACf,kBAAC,GAAD,QAEOM,SAASC,eAAe,W","file":"static/js/main.f9b95a22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3Uwog\",\"errorsBlock\":\"App_errorsBlock__2z5Ad\",\"app_title\":\"App_app_title___CSMS\",\"active\":\"App_active__2jTm6\",\"app_addItemForm\":\"App_app_addItemForm__3kjE9\",\"app_header\":\"App_app_header__2ML7u\",\"app_header_navigation\":\"App_app_header_navigation__2sBXL\",\"app_lists\":\"App_app_lists__XJiJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusFilter\":\"StatusFilter_statusFilter__3SB93\",\"pressed\":\"StatusFilter_pressed__1w_GI\",\"filterButtons\":\"StatusFilter_filterButtons__2KFkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listOrder\":\"ListOrder_listOrder__3DpKe\",\"pressed\":\"ListOrder_pressed__2Ajuu\",\"orderBox\":\"ListOrder_orderBox__1W92q\",\"orderNumber\":\"ListOrder_orderNumber__SESdU\",\"active\":\"ListOrder_active__1HKTR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_header\":\"ListHeader_list_header__zEOiY\",\"list_header_add_form\":\"ListHeader_list_header_add_form__24FzJ\",\"delete_button\":\"ListHeader_delete_button__1N4Pl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList_task\":\"ListTask_todoList_task__3IMxd\",\"taskIsDone\":\"ListTask_taskIsDone__2i1Al\",\"delete_button\":\"ListTask_delete_button__2ymOr\",\"isDoneCheck\":\"ListTask_isDoneCheck__2OTrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksPagesLinks\":\"PagesLinks_tasksPagesLinks__2PUSo\",\"pageLink\":\"PagesLinks_pageLink__10VUZ\",\"active\":\"PagesLinks_active__T9EFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_title__input\":\"ListTitle_list_title__input__3Aoo0\",\"error\":\"ListTitle_error__3wcGy\",\"list_title\":\"ListTitle_list_title__s4OXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskPriority\":\"TaskPriority_taskPriority__2ACAr\",\"Middle\":\"TaskPriority_Middle__1hwuy\",\"Low\":\"TaskPriority_Low__3JO7V\",\"High\":\"TaskPriority_High__3FfI-\",\"Urgent\":\"TaskPriority_Urgent__2y1eq\",\"Later\":\"TaskPriority_Later__NpmW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskTitle\":\"TaskTitle_taskTitle__2cTEe\",\"error\":\"TaskTitle_error__3WKI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList_wrapper\":\"TodoList_todoList_wrapper__17l1B\",\"todoList\":\"TodoList_todoList__XmGvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newItemForm\":\"AddItemForm_newItemForm__3gOv1\",\"error\":\"AddItemForm_error__3PDJ1\",\"delete_button\":\"AddItemForm_delete_button__2221V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Tooltip_tooltip__2Bqiy\",\"isHidden\":\"Tooltip_isHidden__3Glcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"CommonError_error__3tu5w\",\"closeIcon\":\"CommonError_closeIcon__39xY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listTasks\":\"ListTasks_listTasks__q-a1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskOrder\":\"TaskOrder_taskOrder__13iIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_footer\":\"ListFooter_list_footer__qaFYD\"};","module.exports = __webpack_public_path__ + \"static/media/book.4e282c1a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404\":\"Error404_error404__3R_hH\"};","import React, { useState } from 'react'\r\nimport styles from './Tooltip.module.css'\r\n\r\n\r\nconst Tooltip = (props) => {\r\n\r\n    const [display, setDisplay] = useState(true)\r\n    const hideToollip = () => setDisplay(false)\r\n\r\n    const tooltipStyle = display ? styles.tooltip : styles.isHidden\r\n\r\n    return(\r\n        <div className={tooltipStyle} onClick={hideToollip}>\r\n            {props.hint}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tooltip","import React from 'react'\r\nimport styles from './AddItemForm.module.css'\r\nimport Tooltip from '../Tooltip/Tooltip';\r\n\r\nclass AddItemForm extends React.Component {\r\n\r\n    state = {\r\n        inputError: false,\r\n        itemTitle: ''\r\n    }\r\n\r\n    setItemTitle = (e) => {\r\n        if (this.state.inputError) this.setState({ inputError: false });\r\n        this.setState({ itemTitle: e.currentTarget.value }, () => {\r\n            const newTitle = this.state.itemTitle\r\n            const validationResult = this.props.validationFunc \r\n                ? this.props.validationFunc(newTitle) : null\r\n            if (validationResult)\r\n                this.setState({ inputError: true })\r\n        });\r\n    }\r\n\r\n    addItem = () => {\r\n        if (this.state.itemTitle === '') this.setState({ inputError: true })\r\n        else\r\n            if (!this.state.inputError) {\r\n                this.props.addItem(this.state.itemTitle);\r\n                this.setState({ itemTitle: '' })\r\n            }\r\n    }\r\n\r\n    actionOnBlur = () => {\r\n        const validationResult = this.props.validationFunc \r\n                ? this.props.validationFunc(this.state.itemTitle) : null\r\n        if (this.state.inputError && !validationResult) {\r\n            this.setState({ inputError: false })\r\n        }\r\n    }\r\n\r\n    actionOnKey = (e) => { \r\n        if (e.key === 'Enter') this.addItem()\r\n        if ( e.keyCode === 27 ) {\r\n            this.setState({ itemTitle: '', inputError: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.newItemForm}>\r\n                <input\r\n                    className={this.state.inputError ? styles.error : ''}\r\n                    onChange={this.setItemTitle}\r\n                    onKeyDown={this.actionOnKey}\r\n                    onBlur={this.actionOnBlur}\r\n                    autoFocus={true}\r\n                    type=\"text\" placeholder={this.props.placeholder} value={this.state.itemTitle} />\r\n\r\n                <button onClick={this.addItem} >Add</button>\r\n                \r\n                { this.state.inputError && <Tooltip hint={this.props.hint} /> }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItemForm;","import Axios from 'axios';\r\n\r\n\r\nconst instance = Axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/todo-lists',\r\n    withCredentials: true,\r\n    headers: { 'API-KEY': '077e296e-5c11-448c-9cff-a20ca6e66ed1' }\r\n})\r\n\r\nexport const api = {\r\n\r\n    restoreLists() {\r\n        return instance.get('')\r\n    },\r\n\r\n    updateListTitle(listId, title) {\r\n        return instance.put(`/${listId}`, { title })\r\n    },\r\n\r\n    addList(title) {\r\n        return instance.post('', { title })\r\n    },\r\n\r\n    reorderList(listId, putAfterItemId) {\r\n        return instance.put(`/${listId}/reorder`, { putAfterItemId })\r\n    },\r\n\r\n    deleteList(listId) {\r\n        return instance.delete(`/${listId}`)\r\n    },\r\n\r\n    getTasks(listId, count = 10) {\r\n        return instance.get(`/${listId}/tasks?count=${count}`)\r\n    },\r\n\r\n    getAllTasks(listId) {\r\n        return instance.get(`/${listId}/tasks?count=100`)\r\n    },\r\n\r\n    getTasksOnPage(listId, page = 1) {\r\n        return instance.get(`/${listId}/tasks?count=10&page=${page}`)\r\n    },\r\n\r\n    addTask(listId, title) {\r\n        return instance.post(`/${listId}/tasks`, { title })\r\n    },\r\n\r\n    updateTask(listId, taskId, dataObj) {\r\n        return instance.put(`/${listId}/tasks/${taskId}`, { ...dataObj })\r\n    },\r\n\r\n    deleteTask(listId, taskId) {\r\n        return instance.delete(`/${listId}/tasks/${taskId}`)\r\n    },\r\n\r\n    reorderTask(listId, taskId, putAfterItemId) {\r\n        return instance.put(`/${listId}/tasks/${taskId}/reorder`, { putAfterItemId })\r\n    }\r\n}","const initialState = []\r\n\r\nconst errorsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_ERROR:\r\n            return [...state, action.error]\r\n\r\n        case RESET_ERROR:\r\n            return state.filter((el, index) => index !== 0)\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default errorsReducer;\r\n\r\n\r\nconst SET_ERROR = 'SET_ERROR'\r\nexport const setErrorAC = (error) => ({ type: SET_ERROR, error: error })\r\n\r\n\r\nconst RESET_ERROR = 'RESET_ERROR'\r\nexport const resetErrorAC = () => ({ type: RESET_ERROR })","import {api} from '../API/api'\r\nimport { setErrorAC } from './errorsReducer';\r\n\r\nconst initialState =  {\r\n    lists: [],  \r\n    listsOrder: [],\r\n    listsProgress: { listsLoading: false },\r\n    maxTasksCount: 33,\r\n    maxListsCount: 10,\r\n    error: null\r\n    /* lists: [\r\n        {\r\n            id: 0, title: 'Спорт', nextTaskId: 2, totalCount: 1, countOnPage: 10, filterValue: ALL_S,\r\n            page: 1, listProcessing: false, taskIsAdding: false, listDeliting: false, \r\n            footerProcessing: false,\r\n            tasksOrder: [], prevActiveID: 'some_id'\r\n            tasks: [{ id: 1, title: 'CSS', status: 0, priority: 'Middle', taskDeliting: false}]\r\n        }\r\n    ] */\r\n    };\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    const countOnPage = 10;\r\n    const renderBasis = (action.page - 1)*countOnPage +1;\r\n\r\n    switch (action.type) {\r\n\r\n  // ---------------------------List Reducers -------------------------------\r\n        \r\n        case RESTORE_LISTS:\r\n            return {\r\n                ...state,\r\n                lists: action.lists.map( (list, index) => {\r\n                    if (!list.tasks) return(\r\n                        { ...list, order: index, page: 1, countOnPage, filterValue: ALL_S, tasks: [],\r\n                            footerProcessing: false } \r\n                    )\r\n                    else return (\r\n                        { ...list, order: index, page: 1, countOnPage, filterValue: ALL_S,\r\n                            footerProcessing: false }\r\n                    )\r\n                } ),\r\n                listsOrder: action.lists.map( (list) => list.id )\r\n            }\r\n\r\n        case ADD_LIST:\r\n            const extendedList = { ...action.list, page: 1, countOnPage, filterValue: ALL_S, tasks: [] };\r\n            return {\r\n                ...state,\r\n                lists: [ extendedList, ...state.lists ].map((list, index) => ({...list, order: index}))\r\n            }\r\n\r\n        case UPDATE_LIST_TITLE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( (list) => {\r\n                    if (list.id === action.listId) return ({ ...list, title: action.title })\r\n                    else return list\r\n                } )\r\n            }\r\n\r\n        case REORDER_LIST:\r\n            return {\r\n                ...state,\r\n                lists: action.reorderedLists.map( (list, index) => ({...list, order: index }) ),\r\n                listsOrder: action.reorderedLists.map((list) => list.id)\r\n            }\r\n\r\n        case DELETE_LIST:\r\n            return {\r\n                ...state,\r\n                lists: \r\n                    state.lists\r\n                        .filter((list) => list.id !== action.listId)\r\n                        .map( (list, index) => ({...list, order: index}) )  // change list order\r\n            }\r\n\r\n        case LIST_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                listsProgress: {...state.listsProgress, listsLoading: action.value}\r\n            }\r\n\r\n        case LIST_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) return { ...list, [action.process]: action.value }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n        case SET_FILTER_VALUE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) return { ...list, filterValue: action.value }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n\r\n // ---------------------------Tasks Reducers-------------------------------\r\n       \r\n\r\n        case RESTORE_TASKS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(list => {\r\n                   if (list.id === action.listId)\r\n                        return {\r\n                            ...list,\r\n                            totalCount: action.totalCount,\r\n                            tasksOrder: !action.tasks ? [] \r\n                                : action.tasks.map((task) => task.id),\r\n                            tasks: !action.tasks ? [] \r\n                                : action.tasks.filter( (task, index) => index < countOnPage )\r\n                                    .map( (task, index) => ({...task, renderIndex: index + 1 }) )\r\n                        }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n        case SET_TASKS_PAGE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( (list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: action.totalCount ? action.totalCount : list.totalCount,\r\n                            page: action.page,\r\n                            tasks: action.tasks\r\n                                .map((task, index) => ({ ...task, renderIndex: renderBasis + index }))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case SET_TASKS_ORDER:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return { ...list, tasksOrder: action.tasksOrder }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: list.totalCount-1,\r\n                            tasksOrder: list.tasksOrder.filter((id) => id !== action.taskId),\r\n                            tasks:\r\n                                list.tasks.filter((task) => task.id !== action.taskId)\r\n                                    .map( (task, index) => ({ ...task, renderIndex: renderBasis + index })  )\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case UPDATE_TASK:\r\n\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.task.todoListId) {\r\n                        return {\r\n                            ...list,\r\n                            tasks: list.tasks.map((task) => {\r\n                                if (task.id === action.task.id) {\r\n                                    return { ...task, ...action.task }\r\n                                } else return task\r\n                            })\r\n                        }\r\n                    } else return list;\r\n                })\r\n            }\r\n        \r\n        case TASK_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            tasks: list.tasks.map( (task) => {\r\n                                if (task.id === action.taskId) { \r\n                                    return {...task, [action.process]:action.value}\r\n                                }\r\n                                else return task\r\n                            } )\r\n                        }\r\n                    }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n\r\n// ------------------------ Filtered Tasks Reducers --------------------\r\n\r\n\r\n        case SET_FLTR_TASKS_PAGE:\r\n            const totalCount =          // get tasks count on filtered page\r\n                action.tasks.filter((task) => task.status === action.status).length;\r\n            const newTasksOrder = action.tasks\r\n                .filter((task) => task.status === action.status)\r\n                .map((task) => task.id)\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            page: action.page,\r\n                            totalCount, \r\n                            generalCount: action.tasks.length,  // general tasks count\r\n                            tasksOrder: newTasksOrder,\r\n                            tasks: action.tasks\r\n                                .filter((task) => task.status === action.status)\r\n                                .map((task, index) => ({ ...task, renderIndex: index + 1}))\r\n                                .filter((task, index) =>\r\n                                    (index >= (action.page - 1) * countOnPage && index < action.page * countOnPage))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case DELETE_FLTR_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: list.totalCount -1,\r\n                            generalCount: list.generalCount -1,\r\n                            tasksOrder: list.tasksOrder.filter((id) => id !== action.taskId) ,\r\n                            tasks: list.tasks.filter((task) => task.id !== action.taskId)\r\n                                .map((task, index) => ({ ...task, renderIndex: renderBasis + index }))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case SET_PREV_ACT_ID:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            prevActiveId: action.prevActiveId\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n            \r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport default appReducer;\r\n\r\n// ------------------------------ TEMPORARY ----------------------------------\r\n\r\n\r\n\r\n// --------------------------- Lists Actions -----------------------------------\r\n\r\n\r\nconst LIST_IS_LOADING = 'LIST_IS_LOADING'\r\nconst listIsLoadingAC = (value) => ({ type: LIST_IS_LOADING, value })\r\n\r\nconst LIST_IN_PROCESS = 'LIST_IN_PROCESS'\r\nconst listInProcessAC = (listId, process, value) => {\r\n    return({type: LIST_IN_PROCESS, listId, process, value})\r\n}\r\n\r\n\r\nconst RESTORE_LISTS = 'RESTORE-LISTS';\r\nconst restoreListsAC = (lists) => ({ type: RESTORE_LISTS, lists })\r\n\r\nexport const restoreLists = () => async(dispatch) => {\r\n    try {\r\n        dispatch(listIsLoadingAC(true))\r\n        const response = await api.restoreLists()\r\n        dispatch(restoreListsAC(response.data));\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n    } finally {\r\n        dispatch(listIsLoadingAC(false))\r\n    }\r\n}\r\n\r\n\r\nconst ADD_LIST = 'ADD_LIST';\r\nconst addListAC = (list) => ({type: ADD_LIST, list})\r\n\r\nexport const addList = (title) => async(dispatch) => {\r\n    try {\r\n        dispatch(listIsLoadingAC(true))\r\n        const response = await api.addList(title)\r\n        dispatch(addListAC(response.data.data.item))\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n    } finally {\r\n        dispatch(listIsLoadingAC(false))\r\n    }\r\n}\r\n\r\nconst UPDATE_LIST_TITLE = 'UPDATE_LIST_TITLE';\r\nconst updateListTitleAC = (listId, title) => ({ type: UPDATE_LIST_TITLE, listId, title })\r\n\r\nexport const updateListTitle = (listId, title) => async(dispatch) => {\r\n    try {\r\n        dispatch(listInProcessAC(listId, 'listProcessing', true))\r\n        const response = await api.updateListTitle(listId, title)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(updateListTitleAC(listId, title))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n    } finally {\r\n        dispatch(listInProcessAC(listId, 'listProcessing', false))\r\n    }\r\n}\r\n\r\n\r\nconst DELETE_LIST = 'DELETE_LIST';\r\nconst deleteListAC = (listId) => ({type: DELETE_LIST, listId})\r\n\r\nexport const deleteList = (listId) => async(dispatch) => {\r\n    try {\r\n        dispatch(listInProcessAC(listId, 'listDeliting', true))\r\n        const response = await api.deleteList(listId)\r\n        if (response.data.resultCode === 0) {\r\n            await dispatch(deleteListAC(listId))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n    } finally {\r\n        dispatch(listInProcessAC(listId, 'listDeliting', false))\r\n    }\r\n}\r\n\r\n\r\nconst REORDER_LIST = 'REORDER_LIST'\r\nconst reorderListAC = (reorderedLists) => ({type: REORDER_LIST, reorderedLists })\r\n\r\nexport const reorderList = (listId, currPos, nextRenderPos) => async(dispatch, getState) => {\r\n    \r\n    const nextPos = nextRenderPos !== ( null || undefined ) ? +nextRenderPos - 1 : null   //define next element position\r\n   \r\n    const getAfterId = () => {\r\n        // if nextRenderPos undefined or null element position should'n change\r\n        // this is insurence check or for case of using reorderListAC\r\n        if (nextPos === null && currPos === 0) return null\r\n        if (nextPos === null) return getState().app.listsOrder[currPos-1]\r\n        \r\n        // if next position defined find 'put after element' Id\r\n        if (nextPos === 0) return null\r\n        if (nextPos <= +currPos) return getState().app.listsOrder[nextPos-1]\r\n        if (nextPos > +currPos) return getState().app.listsOrder[nextPos]\r\n    }\r\n    \r\n    const getReorderedLists = () => {\r\n        const lists = [...getState().app.lists]\r\n        if (nextPos < currPos) {\r\n            const currList = lists[currPos]\r\n            for (let i = currPos-1; i >= nextPos; i--) {\r\n                lists[i+1] = lists[i]\r\n            }\r\n            lists[nextPos] = currList\r\n            return lists\r\n        }\r\n        if (nextPos > currPos) {\r\n            const currList = lists[currPos]\r\n            for (let i = currPos; i < nextPos; i++) {\r\n                lists[i] = lists[i+1]\r\n            }\r\n            lists[nextPos] = currList\r\n            return lists\r\n        }\r\n        return lists    // default value for unchanged lists ---> insurance check\r\n    }\r\n\r\n    if ( nextPos !== null && nextPos !== +currPos ) {\r\n        const putAfterItemId = getAfterId()              // get putAfterItemId for API request\r\n        const reorderedLists = getReorderedLists()       // get reordered lists for dispatch\r\n\r\n        try {\r\n            dispatch(listIsLoadingAC(true))\r\n            const response = await api.reorderList(listId, putAfterItemId)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(reorderListAC(reorderedLists))\r\n            }\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error))\r\n        } finally {\r\n            dispatch(listIsLoadingAC(false))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// --------------------------- Tasks Actions -----------------------------------\r\n\r\n\r\nconst RESTORE_TASKS = 'RESTORE_TASKS';\r\nconst restoreTasksAC = (listId, tasks, totalCount) => ({ type: RESTORE_TASKS, listId, tasks, totalCount })\r\n\r\nexport const restoreTasks = (listId) => async (dispatch) => {\r\n    dispatch(listInProcessAC(listId, 'listProcessing', true))\r\n    try {\r\n        const response = await api.getAllTasks(listId)\r\n        dispatch(restoreTasksAC(listId, response.data.items, response.data.totalCount))\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n    } finally {\r\n        dispatch(listInProcessAC(listId, 'listProcessing', false))\r\n    }\r\n}\r\n\r\nconst SET_TASKS_PAGE = 'SET_TASKS_PAGE';\r\nexport const setTasksPageAC = (listId, page, tasks, totalCount) =>\r\n    ({ type: SET_TASKS_PAGE, listId, page, tasks, totalCount })\r\n\r\nconst DELETE_TASK = 'DELETE_TASK';\r\nexport const deleteTask = (listId, taskId, page) => ({ type: DELETE_TASK, listId, taskId, page })\r\n\r\nconst UPDATE_TASK = 'UPDATE_TASK';\r\nconst updateTaskAC = (task) => ({type: UPDATE_TASK, task })\r\n\r\nconst TASK_IN_PROCESS = 'TASK_IN_PROCESS'\r\nconst taskInProcessAC = (listId, taskId, process, value) => \r\n        ({type: TASK_IN_PROCESS, listId, taskId, process, value})\r\n\r\n\r\n// ------------------------ Filtered Tasks Actions ----------------------\r\n\r\n\r\n// status filter values\r\nexport const ALL_S = 'ALL_S'\r\nexport const COMPLETED = 'COMPLETED'\r\nexport const ACTIVE = 'ACTIVE'\r\n\r\nexport const statusObj = {completed: 1, active: 0}\r\n\r\n\r\nconst SET_FILTER_VALUE = 'SET_FILTER_VALUE'\r\nconst setFilterValueAC = (listId, value) => ({type: SET_FILTER_VALUE, listId, value})\r\n\r\nexport const setFilterValue = (listId, filterValue) => (dispatch, getState) => {\r\n    \r\n    // get tasks id before the first completed task in list and save it to state\r\n    // for reorderTasks in case of filterValue === COMPLETED\r\n    const targetList = getState().app.lists.find((l) => l.id === listId)\r\n    const currFilter = targetList.filterValue\r\n\r\n    if (currFilter !== COMPLETED) {\r\n        const firstComplInd = targetList.tasks.findIndex((t) => t.status === statusObj.completed)\r\n        const prevActiveId = (firstComplInd === 0 || targetList.tasks.length === 0)\r\n            ? null\r\n            : targetList.tasks[0].id\r\n        dispatch(setPrevActId(listId, prevActiveId))\r\n    }\r\n    // <-----\r\n    \r\n    dispatch(setTasksPage(listId, filterValue, 1))  \r\n    // !!! dispatch(setTasksPage(...)) must be called before dispatch(setFelterValueAC(...))\r\n    // to get correct current filterValue in setAllTasksPage call\r\n    \r\n    dispatch( setFilterValueAC(listId, filterValue) )\r\n}\r\n\r\n\r\nconst SET_PREV_ACT_ID = 'SET_PREV_ACT_ID'\r\nconst setPrevActId = (listId, prevActiveId) => ({type: SET_PREV_ACT_ID, listId, prevActiveId})\r\n\r\nconst SET_FLTR_TASKS_PAGE = 'SET_FLTR_TASKS_PAGE';\r\nconst setFilteredPageAC = (listId, page, tasks, status) =>\r\n    ({ type: SET_FLTR_TASKS_PAGE, listId, page, tasks, status })\r\n\r\nconst DELETE_FLTR_TASK = 'DELETE_FLTR_TASK';\r\nconst deleteFltrTask = (listId, taskId, page) => ({ type: DELETE_FLTR_TASK, listId, taskId, page })\r\n\r\n\r\n\r\n// set tasks page on \"Active\" or \"Completed\" filter mode\r\nconst setFilteredPage = (listId, page, status) => async(dispatch) => {\r\n    try {\r\n        const response = await api.getAllTasks(listId)\r\n        const tasks = response.data.items;\r\n        dispatch(setFilteredPageAC(listId, page, tasks, status))\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n    }\r\n}\r\n\r\n// set tasks page on \"All\" filter mode\r\nconst setAllTasksPage = (listId, page) => async(dispatch, getState) => {\r\n    \r\n    //  get previous filterValue\r\n    const { filterValue: prevFilterVal } = getState().app.lists.find((list) => list.id === listId)\r\n\r\n    switch (prevFilterVal) {\r\n\r\n        // if previous filter was 'Active' or 'Completed' --> set new tasksOrder\r\n        case COMPLETED:\r\n        case ACTIVE:\r\n            try {\r\n                const response_1 = await api.getAllTasks(listId)\r\n                const newTasksOrder = response_1.data.items.map((task) => task.id)\r\n                dispatch(setTasksOrder(listId, newTasksOrder))\r\n                \r\n                const response_2 = await api.getTasksOnPage(listId, page)\r\n                const { items: tasks, totalCount } = response_2.data;\r\n                dispatch(setTasksPageAC(listId, page, tasks, totalCount))\r\n                break\r\n            } catch (error) {\r\n                dispatch(setErrorAC(error))\r\n                break\r\n            }\r\n\r\n\r\n        default:      // case previous filterValue === ALL_S\r\n            try {\r\n                const response = await api.getTasksOnPage(listId, page)\r\n                const { items: tasks, totalCount } = response.data;\r\n                dispatch(setTasksPageAC(listId, page, tasks, totalCount))\r\n            } catch (error) {\r\n                dispatch(setErrorAC(error))\r\n            }\r\n    }\r\n}\r\n\r\n\r\nexport const setTasksPage = (listId, filterValue, page) => async(dispatch) => {\r\n    \r\n    dispatch( listInProcessAC(listId, 'footerProcessing', true) )\r\n\r\n    let status = statusObj.active\r\n    switch (filterValue) {\r\n        \r\n        case ACTIVE:\r\n            await dispatch(setFilteredPage(listId, page, status))\r\n            dispatch(listInProcessAC(listId, 'footerProcessing', false))\r\n        break\r\n\r\n        case COMPLETED:\r\n            status = statusObj.completed\r\n            await dispatch(setFilteredPage(listId, page, status))\r\n            dispatch(listInProcessAC(listId, 'footerProcessing', false))\r\n        break\r\n\r\n        default:    //case filterValue === ALL_S\r\n            await dispatch(setAllTasksPage(listId, page))\r\n            dispatch(listInProcessAC(listId, 'footerProcessing', false))\r\n    }\r\n}\r\n\r\n\r\nexport const addTask = (listId, title) => async(dispatch, getState) => {\r\n\r\n    // get current tasksOrder\r\n    const tasksOrder = getState().app.lists.find((list) => list.id === listId).tasksOrder\r\n\r\n    dispatch(listInProcessAC(listId, 'taskIsAdding', true))\r\n    try {\r\n        const response = await api.addTask(listId, title)\r\n        if (response.data.resultCode === 0) {\r\n            const newTaskId = response.data.data.item.id\r\n            const newTasksOrder = [newTaskId, ...tasksOrder]\r\n            dispatch(setTasksOrder(listId, newTasksOrder))\r\n            await dispatch(setAllTasksPage(listId, 1))\r\n            dispatch(setFilterValueAC(listId, ALL_S))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n    } finally {\r\n        dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n    }\r\n}\r\n\r\n\r\nexport const addTaskActive = (listId, title) => async(dispatch, getState) => {\r\n\r\n    // get current tasksOrder\r\n    const tasksOrder = getState().app.lists.find((list) => list.id === listId).tasksOrder\r\n\r\n    dispatch( listInProcessAC(listId, 'taskIsAdding', true) )\r\n    try {\r\n        const response_1 = await api.addTask(listId, title)\r\n        if (response_1.data.resultCode === 0) {\r\n            const newTaskId = response_1.data.data.item.id\r\n            const newTasksOrder = [newTaskId, ...tasksOrder]\r\n            dispatch(setTasksOrder(listId, newTasksOrder))\r\n            const response_2 = await api.getAllTasks(listId)\r\n            const status = statusObj.active\r\n            const tasks = response_2.data.items;\r\n            dispatch(setFilteredPageAC(listId, 1, tasks, status))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n    } finally {\r\n        dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n    }\r\n}\r\n\r\nexport const delTaskFromPage = (listId, taskId) => async(dispatch, getState) => {\r\n    \r\n    // extract the target object from lists array & get all required parametrs\r\n    const targetList = getState().app.lists.find( (item) => item.id === listId )\r\n    const {page, filterValue, totalCount, countOnPage} = targetList\r\n    const tasksLength = targetList.tasks.length\r\n    const pagesCount = totalCount ? Math.ceil(totalCount/countOnPage) : 1\r\n    \r\n    dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', true) )\r\n    try {\r\n        const response = await api.deleteTask(listId, taskId)\r\n        if (response.data.resultCode === 0) {\r\n            // delete task from not last page\r\n            if (tasksLength === 10 && page < pagesCount) {\r\n                if (filterValue === ALL_S) {\r\n                    await dispatch(setAllTasksPage(listId, page))\r\n                } else {\r\n                    const status = filterValue === COMPLETED\r\n                        ? statusObj.completed\r\n                        : statusObj.active\r\n                    await dispatch(setFilteredPage(listId, page, status))\r\n                }\r\n            }\r\n            // delete last task from not first page\r\n            if (tasksLength === 1 && page !== 1) {\r\n                if (filterValue === ALL_S) {\r\n                    await dispatch(setAllTasksPage(listId, page - 1))\r\n                } else {\r\n                    const status = filterValue === COMPLETED\r\n                        ? statusObj.completed\r\n                        : statusObj.active\r\n                    await dispatch(setFilteredPage(listId, page - 1, status))\r\n                }\r\n\r\n            }\r\n            // delete last task from first page\r\n            if (tasksLength === 1 && page === 1 && filterValue !== ALL_S) {\r\n                await dispatch(setAllTasksPage(listId, 1))\r\n                dispatch(setFilterValueAC(listId, ALL_S))\r\n            }\r\n            // regular delete task case -> must be located at the end of chain\r\n            if (filterValue === ALL_S) {\r\n                await dispatch(deleteTask(listId, taskId, page))\r\n            } else {\r\n                await dispatch(deleteFltrTask(listId, taskId, page))\r\n            }\r\n        }\r\n    } catch(error) {\r\n        dispatch(setErrorAC(error))\r\n    } finally {\r\n        dispatch(taskInProcessAC(listId, taskId, 'taskInProcess', false))\r\n    }\r\n}\r\n\r\n\r\nexport const updateTask = (listId, taskId, updateObj) => async(dispatch, getState) => {\r\n\r\n    // extract the target object from lists array & get all required parametrs\r\n    const targetList = getState().app.lists.find( (item) => item.id === listId )\r\n    const { page, filterValue } = targetList\r\n    const tasksLength = targetList.tasks.length\r\n    const targetTask = targetList.tasks.find( (item) => item.id === taskId )\r\n    const updatedTask = { ...targetTask, ...updateObj }\r\n    \r\n    dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', true) )\r\n  \r\n    try {\r\n        const response_1 = await api.updateTask(listId, taskId, updatedTask)\r\n        if (response_1.data.resultCode === 0) {\r\n            if (filterValue === ALL_S) {\r\n                dispatch(updateTaskAC(response_1.data.data.item))\r\n            } else {\r\n                const response_2 = await api.getAllTasks(listId)\r\n                if (!response_2.data.error) {\r\n                    const tasks = response_2.data.items;\r\n                    const status = filterValue === COMPLETED\r\n                        ? statusObj.completed\r\n                        : statusObj.active\r\n                    // set previous filtered page\r\n                    if (tasksLength === 1 && page !== 1 && updateObj.status !== undefined) {\r\n                        dispatch(setFilteredPageAC(listId, page - 1, tasks, status))\r\n                    } else if (tasksLength === 1 && page === 1 && updateObj.status !== undefined) {\r\n                        await dispatch(setAllTasksPage(listId, 1))\r\n                        dispatch(setFilterValueAC(listId, ALL_S))\r\n                    } else\r\n                        dispatch(setFilteredPageAC(listId, page, tasks, status))\r\n                }\r\n            }\r\n        }\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n    } finally {\r\n        dispatch(taskInProcessAC(listId, taskId, 'taskInProcess', false))\r\n    }\r\n}\r\n\r\n\r\nconst SET_TASKS_ORDER = 'SET_TASKS_ORDER'\r\nconst setTasksOrder = (listId, tasksOrder) => ({ type: SET_TASKS_ORDER, listId, tasksOrder })\r\n\r\n\r\nexport const reorderTask = (listId, taskId, currPos, nextRenderPos) => async(dispatch, getState) => {\r\n\r\n    const nextPos = nextRenderPos !== (null || undefined) ? +nextRenderPos - 1 : null   //define next element position\r\n    const targerList = getState().app.lists.find((list) => list.id === listId)\r\n\r\n    const getAfterId = () => {\r\n        const { filterValue, prevActiveId } = targerList\r\n        // if nextRenderPos undefined or null element position should'n change\r\n        // this is insurence check or for case of using reorderTaskAC\r\n        if (nextPos === null && currPos === 0) return null\r\n        if (nextPos === null) return targerList.tasksOrder[currPos - 1]\r\n\r\n        // if next position defined find 'put after element' Id\r\n        if (filterValue === COMPLETED && nextPos === 0) return prevActiveId\r\n        if (nextPos === 0) return null\r\n        if (nextPos <= +currPos) return targerList.tasksOrder[nextPos - 1]\r\n        if (nextPos > +currPos) return targerList.tasksOrder[nextPos]\r\n    }\r\n\r\n    const getTasksOrder = () => {\r\n        const tasksOrder = [...targerList.tasksOrder]\r\n        if (nextPos < currPos) {\r\n            const currId = tasksOrder[currPos]\r\n            for (let i = currPos - 1; i >= nextPos; i--) {\r\n                tasksOrder[i + 1] = tasksOrder[i]\r\n            }\r\n            tasksOrder[nextPos] = currId\r\n            return tasksOrder\r\n        }\r\n        if (nextPos > currPos) {\r\n            const currId = tasksOrder[currPos]\r\n            for (let i = currPos; i < nextPos; i++) {\r\n                tasksOrder[i] = tasksOrder[i + 1]\r\n            }\r\n            tasksOrder[nextPos] = currId\r\n            return tasksOrder\r\n        }\r\n        return tasksOrder    // default value for unchanged lists ---> insurance check\r\n    }\r\n\r\n\r\n    // reorder functional block\r\n    if (nextPos !== null && nextPos !== +currPos) {\r\n        const putAfterItemId = getAfterId()              // get putAfterItemId for API request\r\n        const { countOnPage, filterValue } = targerList\r\n        // determine status of filtered tasks for dispatch(setFilteredPage(...))\r\n        const { status } = targerList.tasks.find((t) => t.id === taskId )\r\n        const tasksOrder = getTasksOrder()               // determine new tasksOrder\r\n\r\n        const page = nextRenderPos ? Math.ceil(nextRenderPos / countOnPage) : 1\r\n        // determine which page will appear on after the reorder\r\n\r\n        dispatch(listInProcessAC(listId, 'taskIsAdding', true))\r\n        try {\r\n            const response = await api.reorderTask(listId, taskId, putAfterItemId)\r\n            if (response.data.resultCode === 0) {\r\n                if (filterValue === ALL_S) {\r\n                    await dispatch(setAllTasksPage(listId, page))\r\n                    dispatch(setTasksOrder(listId, tasksOrder))\r\n                }\r\n                if (filterValue === ACTIVE || filterValue === COMPLETED) {\r\n                    await dispatch(setFilteredPage(listId, page, status))\r\n                    // dispatch(setTasksOrder(listId, tasksOrder))\r\n                }\r\n            }\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error))\r\n        } finally {\r\n            dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nconst Preloader = ({ height, width, fill, ...userStyles }) => {\r\n\r\n    const currentWidth = () => {\r\n        if ( width ) return width\r\n        if ( !width && height ) {\r\n            const wNum = +height.slice(0, height.indexOf('p'))*3.65\r\n            return (wNum+'px')\r\n        }\r\n        if ( !width && !height ) return '252px'\r\n    }\r\n    \r\n    const currentHeight = () => {\r\n        if ( height ) return height\r\n        if ( !height && width ) {\r\n            const hNum = +width.slice(0, width.indexOf('p'))*0.27\r\n            return (hNum+'px')\r\n        }\r\n        if ( !height && !width ) return '69px'\r\n    }\r\n\r\n    const loaderStyle = {\r\n        ...userStyles,\r\n        width: currentWidth(),\r\n        height: currentHeight()\r\n    };\r\n      \r\n    return(\r\n            <svg svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" version=\"1.0\" viewBox=\"0 0 128 35\" space=\"preserve\" style={loaderStyle}>\r\n                <g><circle fill={fill} cx=\"17.5\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.167;0.5;0.668;1\" values=\"0.3;1;1;0.3;0.3\"/></g>\r\n                <g><circle fill={fill} cx=\"110.5\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.334;0.5;0.835;1\" values=\"0.3;0.3;1;1;0.3\"/></g>\r\n                <g><circle fill={fill} cx=\"64\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.167;0.334;0.668;0.835;1\" values=\"0.3;0.3;1;1;0.3;0.3\"/></g>\r\n            </svg>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './ListTitle.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { updateListTitle } from '../../../../Redux/appReducer';\r\nimport Preloader from '../../../Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Tooltip from '../../../Tooltip/Tooltip';\r\n\r\n\r\nclass ListTitle extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: '',\r\n        inputError: false,\r\n    }\r\n\r\n    updateListTitle = (title) => {\r\n        if (!title.match(/%/)) {\r\n            this.props.updateListTitle(this.props.listId, title)\r\n            if (this.props.history.location.pathname !== '/') {\r\n                this.props.history.push(`/${title.replace(/\\s|\\?|#/g, '-')}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    setEditMode = () => this.setState({ editMode: true, title: this.props.title })\r\n    setEditModeKey = (e) => {\r\n        if (e.charCode === 13) this.setEditMode()\r\n    }\r\n\r\n    setDisplayMode = () => {\r\n        if (this.state.inputError) this.setState({ inputError: false })\r\n        this.setState({ editMode: false })\r\n    }\r\n\r\n    editListTitle = (e) => {\r\n        const newTitle = e.currentTarget.value;\r\n        const equalTitles = this.props.listTitles.find((el) => {\r\n            return (el.title.toLowerCase() === newTitle.toLowerCase() && el.id !== this.props.listId)\r\n        })\r\n\r\n        if (this.state.inputError) this.setState({ inputError: false });\r\n        if (newTitle.trim() === '' || newTitle.length > 100\r\n            || newTitle.match(/%/) || equalTitles) {\r\n            this.setState({ title: newTitle, inputError: true })\r\n        } else this.setState({ title: newTitle })\r\n    }\r\n\r\n    setTitleOnKey = (e) => {\r\n        const title = e.currentTarget.value;\r\n        if (e.key === 'Enter' && !this.state.inputError) {\r\n            this.setDisplayMode()\r\n            this.updateListTitle(title);\r\n        }\r\n        if (e.keyCode === 27) {\r\n            this.setDisplayMode()\r\n            if (this.state.inputError) this.setState({ inputError: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const loaderStyle = {\r\n            fill: 'rgb(85, 47, 11)', height: '10px', position: 'absolute', bottom: '-12px', right: '43%'\r\n        }\r\n\r\n        const listTitleHint =\r\n            'Please, check the % sign is missing and enter a unique title between 1 and 100 chars long, or press \"Esc\" to exit'\r\n\r\n        if (this.state.editMode) {\r\n            return (\r\n                <div className={styles.list_title__input}>\r\n                    <input type=\"text\"\r\n                        value={this.state.title}\r\n                        className={this.state.inputError ? styles.error : ''}\r\n                        onChange={this.editListTitle}\r\n                        autoFocus={true}\r\n                        onBlur={this.setDisplayMode}\r\n                        onKeyDown={this.setTitleOnKey} />\r\n\r\n                    {this.state.inputError && <Tooltip hint={listTitleHint} />}\r\n                </div>\r\n            )\r\n        } else return (\r\n            <div className={styles.list_title}>\r\n                <span onClick={this.setEditMode} onKeyPress={this.setEditModeKey} tabIndex='0'>\r\n                    {this.props.title}\r\n                </span>\r\n                {(this.props.listDeliting || this.props.listProcessing)\r\n                    && <Preloader {...loaderStyle} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(null, { updateListTitle }),\r\n    withRouter\r\n)(ListTitle)","import React from 'react';\r\nimport styles from './ListHeader.module.css'\r\nimport { connect } from 'react-redux';\r\nimport AddItemForm from '../../AddItemForm/AddItemForm';\r\nimport ListTitle from './ListTitle/ListTitle';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport { addTask, addTaskActive, deleteList, ALL_S, COMPLETED, ACTIVE } from '../../../Redux/appReducer';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ListHeader extends React.Component {\r\n\r\n    deleteList = () => {\r\n        this.props.deleteList(this.props.listId)\r\n            .then(() => {\r\n                if (this.props.history.location.pathname !== '/') {\r\n                    this.props.history.push('/')\r\n                }\r\n            })\r\n    }\r\n\r\n    addTask = (title) => {\r\n        const { listId, filterValue, taskIsAdding } = this.props;\r\n\r\n        if ((filterValue === COMPLETED || filterValue === ALL_S) && !taskIsAdding) {\r\n            this.props.addTask(listId, title)\r\n        }\r\n\r\n        if (filterValue === ACTIVE && !taskIsAdding) {\r\n            this.props.addTaskActive(listId, title)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { listId, title, page, totalCount, filterValue, listTitles, maxTasksCount,\r\n            generalCount, listDeliting, listProcessing, taskIsAdding } = this.props\r\n\r\n        const totalTasksCount = filterValue === ALL_S ? totalCount : generalCount\r\n\r\n        const taskTitleValidation = (newTitle) => {\r\n            if (newTitle === '' || newTitle.length > 100 || newTitle.trim() === '') {\r\n                return true\r\n            }\r\n        }\r\n\r\n        const loaderStyle = {\r\n            fill: 'rgb(85, 47, 11)', height: '8px', position: 'absolute', right: '50%', bottom: '-14px'\r\n        }\r\n\r\n        const addTaskHint =\r\n            'Please, enter a title with length between 1 to 100 chars or press \"Esc\" to reset'\r\n\r\n        return (\r\n            <div className={styles.list_header}>\r\n                {/*delete icon display modes */}\r\n                { !listDeliting\r\n                    &&<i className={'fa fa-close ' + styles.delete_button} \r\n                        onClick={this.deleteList} tabIndex='0' aria-label='delete list'/>\r\n                }\r\n                { listDeliting\r\n                    &&<i className={'fa fa-close ' + styles.delete_button} \r\n                        tabIndex='0' aria-label='delete list'/>\r\n                }\r\n\r\n                <ListTitle listId={listId} title={title} page={page} listTitles={listTitles}\r\n                    listDeliting={listDeliting} listProcessing={listProcessing} />\r\n                \r\n                {/* форма добавления задач */}\r\n                {totalTasksCount < maxTasksCount\r\n                    && <div className={styles.list_header_add_form}>\r\n                        <AddItemForm\r\n                            placeholder='Add new task'\r\n                            hint={addTaskHint}\r\n                            validationFunc={taskTitleValidation}\r\n                            addItem={this.addTask} />\r\n                        {taskIsAdding && <Preloader {...loaderStyle} />}\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mdtp = { addTask, addTaskActive, deleteList }\r\n\r\nexport default compose(\r\n    connect(null, mdtp),\r\n    withRouter\r\n)(ListHeader);\r\n\r\n","import React, { useState } from 'react'\r\nimport styles from './TaskPriority.module.css'\r\n\r\n\r\nconst TaskPriority = (props) => {\r\n\r\n    const [editMode, setMode ] = useState(false)\r\n    const [currentValue, setCurrentValue ] = useState('')\r\n\r\n    const setEditMode = (e) => {\r\n        setMode(true)\r\n        setCurrentValue(e.currentTarget.textContent.trim())\r\n    }\r\n    const setEditModeKey = (e) => {\r\n        if (e.keyCode === 13) setEditMode(e)\r\n    }\r\n    const resetEditMode = () => setMode(false)\r\n\r\n    const setTaskPriority = (e) => {\r\n        if (e.currentTarget.value !== currentValue) {\r\n            const priority = priorityArray.findIndex((prior) => prior === e.currentTarget.value);\r\n            props.updateTask({ priority });\r\n        }\r\n        resetEditMode()\r\n    }\r\n\r\n    const setPriorityOnKey = (e) => {\r\n        if (e.keyCode === 27) resetEditMode() \r\n        if (e.keyCode === 13) setTaskPriority(e)\r\n    }\r\n\r\n    const setPriorityClick = (e) => {\r\n        if (e.currentTarget.value !== currentValue) {\r\n            setTaskPriority(e)\r\n        }\r\n    }\r\n\r\n    \r\n    const getTaskPriority = () => priorityArray[props.priority]\r\n    const getTaskPriorityStyle = () => styles[ priorityArray[props.priority] ] + ' ' + styles.taskPriority\r\n    \r\n    const priorityArray = ['Low', 'Middle', 'High', 'Urgent', 'Later']\r\n\r\n    const priorityOptions = priorityArray.map(prior =>\r\n        <option key={prior} className={styles[prior]}>{prior}</option>)\r\n\r\n    if (!editMode) {\r\n        return (\r\n            <span tabIndex='0'\r\n                className={getTaskPriorityStyle()}\r\n                onClick={setEditMode}\r\n                onKeyDown={setEditModeKey} >\r\n                {getTaskPriority()} &nbsp;\r\n            </span>\r\n        )\r\n    } else {\r\n        return (\r\n            <select\r\n                defaultValue={getTaskPriority()}\r\n                className={getTaskPriorityStyle()}\r\n                onBlur={resetEditMode}\r\n                onKeyDown={setPriorityOnKey}\r\n                onClick={setPriorityClick}\r\n                autoFocus={true} >{priorityOptions}</select>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskPriority","import React, { useState } from 'react'\r\nimport styles from './TaskTitle.module.css'\r\nimport Tooltip from '../../../../Tooltip/Tooltip'\r\n\r\n\r\nconst TaskTitle = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [title, setTitle] = useState('')\r\n    const [inputError, setError] = useState(false)\r\n\r\n\r\n    const enableEditMode = () => {\r\n        setEditMode(true)\r\n        setTitle(props.title)\r\n    }\r\n\r\n    const enableEditModeKey = (e) => {\r\n        if (e.charCode === 13) enableEditMode()\r\n    }\r\n\r\n    const setDisplayMode = () => {\r\n        if (inputError) setError(false)\r\n        setEditMode(false)\r\n    }\r\n\r\n    const editTaskTitle = (e) => {\r\n        const newTitle = e.currentTarget.value;\r\n        if (inputError) setError(false)\r\n        if (newTitle.trim() === '' || newTitle.length > 100) {\r\n            setTitle(newTitle)\r\n            setError(true)\r\n        } else setTitle(newTitle)\r\n    }\r\n\r\n    const setTitleOnKey = (e) => {\r\n        const title = e.currentTarget.value;\r\n        if (e.key === 'Enter' && !inputError) {\r\n            props.updateTask({ title });\r\n            setDisplayMode()\r\n        }\r\n        if (e.keyCode === 27) {\r\n            setDisplayMode()\r\n            if (inputError) setError(false)\r\n        }\r\n    }\r\n\r\n    const taskTitleHint = \r\n            'Please, enter a title with length between 1 to 100 chars or press \"Esc\" to reset'\r\n\r\n\r\n    if (!editMode) {\r\n        return (\r\n            <span tabIndex='0'\r\n                className={styles.taskTitle}\r\n                onClick={enableEditMode} \r\n                onKeyPress={enableEditModeKey}>{props.title},&nbsp;</span>\r\n        )\r\n    } else {\r\n        return (\r\n            <span className={styles.taskTitle}>\r\n                <input type=\"text\"\r\n                    value={title}\r\n                    className={inputError ? styles.error : ''}\r\n                    onChange={editTaskTitle}\r\n                    autoFocus={true}\r\n                    onBlur={setDisplayMode}\r\n                    onKeyDown={setTitleOnKey} />\r\n                { inputError && <Tooltip hint={taskTitleHint} /> }\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskTitle","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './TaskOrder.module.css'\r\nimport { reorderTask } from '../../../../../Redux/appReducer'\r\n\r\n\r\nconst TaskOrder = ({ listId, taskId, tasksCount, renderIndex, reorderTask }) => {\r\n\r\n    const [selectMode, setMode] = useState(false)\r\n    const [currentOrder, setCurrentOrder] = useState(null)\r\n    \r\n    const enableSelect = (e) => {\r\n        setMode(true)\r\n        const currOrd = e.currentTarget.textContent\r\n            .split('')\r\n            .filter((el) => el\r\n            .match('^[0-9]$')).join('')\r\n        \r\n        setCurrentOrder(currOrd)\r\n        \r\n    }\r\n\r\n    const enableSelectKey = (e) => {\r\n        if (e.charCode === 13) enableSelect(e)\r\n    }\r\n\r\n    const disableSelect = () => setMode(false)\r\n\r\n    const setTaskOrder = (e) => {\r\n        const nextRenderPos = e.currentTarget.value\r\n            const currPos = renderIndex - 1\r\n            reorderTask(listId, taskId, currPos, nextRenderPos)\r\n            disableSelect()\r\n    }\r\n\r\n    const setOrderOnKey = (e) => {\r\n        if (e.keyCode === 27) disableSelect()\r\n        if (e.keyCode === 13) setTaskOrder(e)\r\n    }\r\n\r\n    const setOrderOnClick = (e) => {\r\n        if (e.currentTarget.value !== currentOrder) {\r\n            \r\n            setTaskOrder(e)\r\n        }\r\n    }\r\n\r\n    const getOptions = () => {\r\n        let optionArr = []\r\n        for (let i = 1; i <= tasksCount; i++) {\r\n            const el = <option value={i} key={i}>{i}</option>\r\n            optionArr.push(el)\r\n        }\r\n        return optionArr\r\n    }\r\n\r\n    const optionArr = getOptions()\r\n\r\n    if (selectMode) return (\r\n        <select autoFocus\r\n            onBlur={disableSelect}\r\n            onKeyDown={setOrderOnKey}\r\n            onClick={setOrderOnClick}\r\n            defaultValue={renderIndex}>{optionArr}</select>\r\n    )\r\n\r\n    else return (\r\n        <span tabIndex='0'\r\n            className={styles.taskOrder}\r\n            onClick={enableSelect}\r\n            onKeyPress={enableSelectKey}>&nbsp;{renderIndex}&nbsp;-&nbsp;</span>\r\n    )\r\n}\r\n\r\nexport default connect(null, { reorderTask })(TaskOrder)","import React from 'react'\r\nimport styles from './ListTask.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { delTaskFromPage, updateTask, statusObj } from '../../../../Redux/appReducer'\r\nimport Preloader from '../../../Preloader/Preloader'\r\nimport TaskPriority from './TaskPriority/TaskPriority';\r\nimport TaskTitle from './TaskTitle/TaskTitle';\r\nimport TaskOrder from './TaskOrder/TaskOrder';\r\n\r\n\r\n\r\nconst ListTask = (props) => {\r\n\r\n    const { id: taskId, status, renderIndex, priority, title, taskInProcess } = props.task\r\n    const { listId, tasksCount } = props\r\n\r\n\r\n    const deleteTask = () => props.delTaskFromPage(listId, taskId)\r\n\r\n    const updateTask = (updateObj) => props.updateTask(listId, taskId, updateObj)\r\n\r\n    const setTaskStatus = (e) => {\r\n        const completed = e.currentTarget.checked \r\n            ? statusObj.completed \r\n            : statusObj.active\r\n        updateTask({ status: completed })\r\n    }\r\n\r\n    const loaderStyle = { fill: 'rgb(85, 47, 11)', height: '8px' }\r\n\r\n    const delBtnOnClick = !taskInProcess ? deleteTask : null\r\n\r\n    return (\r\n        <div className={styles.todoList_task}>\r\n            <div className={status ? styles.taskIsDone : ''}>\r\n                {/* чекбокс */}\r\n                <input\r\n                    className={styles.isDoneCheck}\r\n                    onChange={setTaskStatus}\r\n                    type=\"checkbox\"\r\n                    checked={status} />\r\n                \r\n                <TaskOrder listId={listId} taskId={taskId} \r\n                    renderIndex={renderIndex} tasksCount={tasksCount}/>\r\n                <TaskTitle title={title} updateTask={updateTask} />\r\n                <TaskPriority priority={priority} updateTask={updateTask} />\r\n                <button className={'fa fa-close ' + styles.delete_button} onClick={delBtnOnClick} />\r\n\r\n                {taskInProcess && <Preloader {...loaderStyle} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, {updateTask, delTaskFromPage})(ListTask);\r\n\r\n","import React from 'react'\r\nimport styles from './ListTasks.module.css'\r\nimport ListTask from './ListTask/ListTask'\r\n\r\nconst ListTasks = ({ tasks, ...restProps}) => {\r\n\r\n    const tasksArray = tasks.map((task) => \r\n        <ListTask key={task.id} task={task} { ...restProps } /> \r\n    );\r\n\r\n\r\n    return (\r\n        <div className={styles.listTasks}>\r\n            {tasksArray}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ListTasks;\r\n\r\n","import React from 'react'\r\nimport styles from './ListOrder.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { reorderList } from '../../../../Redux/appReducer'\r\nimport onClickOutside from 'react-onclickoutside'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass ListOrder extends React.Component {\r\n\r\n    // configure the onClickOutside click handler\r\n    handleClickOutside = () => this.setState({ showOrder: false })\r\n\r\n    state = {\r\n        showOrder: false\r\n    }\r\n\r\n    toggleMode = () => this.setState({ showOrder: !this.state.showOrder })\r\n\r\n    reorderOnClick = (nextRenderPos) => {\r\n        const { listId, order: currPos, reorderList } = this.props\r\n        reorderList(listId, currPos, nextRenderPos)\r\n        this.toggleMode()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { listsCount, order } = this.props\r\n\r\n        const getPagesArr = () => {\r\n            let pagesArr = []\r\n            for (let i = 1; i <= listsCount; i++) {\r\n                const reorder = () => this.reorderOnClick(i)\r\n                const numberStyle = (i - 1) !== order\r\n                    ? styles.orderNumber : styles.orderNumber + ' ' + styles.active\r\n                const page = <button className={numberStyle} onClick={reorder} key={i}>{i}</button>\r\n                pagesArr.push(page)\r\n            }\r\n            return pagesArr\r\n        }\r\n        const pagesArr = getPagesArr()\r\n\r\n        const orderBtnStyle = this.state.showOrder ? styles.pressed : ''\r\n\r\n        return (\r\n            <div className={styles.listOrder}>\r\n                <button className={orderBtnStyle} onClick={this.toggleMode}>\r\n                    {order + 1 + '/' + listsCount}\r\n                </button>\r\n                {this.state.showOrder\r\n                    && < div className={styles.orderBox}>{pagesArr}</div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(null, { reorderList }),\r\n    onClickOutside\r\n)(ListOrder)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './StatusFilter.module.css'\r\nimport { setFilterValue, ALL_S, COMPLETED, ACTIVE } from '../../../../Redux/appReducer'\r\nimport onClickOutside from 'react-onclickoutside'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass StatusFilter extends React.Component {\r\n\r\n    // configure the onClickOutside click handler\r\n    handleClickOutside = () => this.setState({ isHidden: true })\r\n\r\n    state = {\r\n        isHidden: true\r\n    }\r\n\r\n    toggleOnClick = () => this.setState({ isHidden: !this.state.isHidden })\r\n\r\n    render() {\r\n\r\n        const { listId, filterValue, footerProcessing, setFilterValue } = this.props\r\n\r\n        const buttonAll = filterValue === ALL_S ? styles.pressed : ''\r\n        const buttonActive = filterValue === ACTIVE ? styles.pressed : ''\r\n        const buttonCompleted = filterValue === COMPLETED ? styles.pressed : ''\r\n\r\n        const filter = { ALL_S: 'All', COMPLETED: 'Completed', ACTIVE: 'Active' }\r\n\r\n        const getAllTasks = () => {\r\n            if (filterValue !== ALL_S) setFilterValue(listId, ALL_S)\r\n        }\r\n        const getCompletedTasks = () => {\r\n            if (filterValue !== COMPLETED) setFilterValue(listId, COMPLETED)\r\n        }\r\n        const getActiveTasks = () => {\r\n            if (filterValue !== ACTIVE) setFilterValue(listId, ACTIVE)\r\n        }\r\n\r\n        const filterButtonStyle =\r\n            this.state.isHidden ? styles.frontButton : styles.frontButton + ' ' + styles.pressed\r\n\r\n        return (\r\n            <div className={styles.statusFilter}>\r\n                <button className={filterButtonStyle} onClick={this.toggleOnClick}>\r\n                   {filter[filterValue]}</button>\r\n                {!this.state.isHidden &&\r\n                    <div className={styles.filterButtons}>\r\n                        <button onClick={getAllTasks}\r\n                            className={buttonAll} disabled={footerProcessing}>All</button>\r\n                        <button onClick={getCompletedTasks}\r\n                            className={buttonCompleted} disabled={footerProcessing}>Completed</button>\r\n                        <button onClick={getActiveTasks}\r\n                            className={buttonActive} disabled={footerProcessing}>Active</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(null, { setFilterValue }),\r\n    onClickOutside\r\n)(StatusFilter)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './PagesLinks.module.css'\r\nimport { setTasksPage } from '../../../../Redux/appReducer'\r\n\r\n\r\nconst PagesLinks = ({listId, filterValue, page, pagesCount, setTasksPage}) => {\r\n\r\n    // block the button immediately after clicking on it\r\n    const [disabled, setDisabled] = useState(false)\r\n    useEffect(() => setDisabled(false), [page])\r\n    \r\n    const getPagesLinks = () => {\r\n        const pagesLinks = []\r\n        for ( let i = 1; i <= pagesCount; i++ ) {\r\n            const onClick = () => {\r\n                setTasksPage(listId, filterValue, i)\r\n                setDisabled(true)\r\n            }\r\n            \r\n            const disabledValue = i === page || disabled ? true : false\r\n            const linkStyle = i === page ? `${styles.pageLink} ${styles.active}` : styles.pageLink\r\n            \r\n            const pageLink = \r\n                <button key={i} disabled={disabledValue}\r\n                    className={ linkStyle } onClick={ onClick } >{i}</button>\r\n            pagesLinks.push(pageLink)\r\n        }\r\n        return pagesLinks\r\n    }\r\n\r\n\r\n    return(\r\n        <div className={styles.tasksPagesLinks}>{ getPagesLinks() }</div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { setTasksPage })(PagesLinks)","import React from 'react'\r\nimport Preloader from '../../Preloader/Preloader'\r\nimport styles from './ListFooter.module.css'\r\nimport ListOrder from './ListOrder/ListOrder'\r\nimport StatusFilter from './StatusFilter/StatusFilter'\r\nimport PagesLinks from './PagesLinks/PagesLinks'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst ListFooter = (props) => {\r\n\r\n    const { listId, filterValue, listsCount, order,\r\n        totalCount, countOnPage, page, footerProcessing } = props\r\n\r\n    const loaderStyle = {\r\n        fill: 'rgb(85, 47, 11)', height: '10px', position: 'absolute', bottom: '5px', right: '45%'\r\n    }\r\n\r\n    const pagesCount = totalCount ? Math.ceil(totalCount / countOnPage) : 1\r\n\r\n    // define conditions to show/hide order button\r\n    const showOrder = props.history.location.pathname === '/' ? true : false\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.list_footer}>\r\n            { pagesCount > 1\r\n                && <PagesLinks page={page} pagesCount={pagesCount} \r\n                        listId={listId} filterValue={filterValue} />\r\n            }\r\n            \r\n            <StatusFilter listId={listId} filterValue={filterValue}\r\n                footerProcessing={footerProcessing} />\r\n            \r\n\r\n            {showOrder && listsCount !== 1\r\n                && <ListOrder order={order} listsCount={listsCount} listId={listId} />}\r\n            {footerProcessing && <Preloader {...loaderStyle} />}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withRouter(ListFooter)\r\n\r\n","import React from 'react'\r\nimport styles from './TodoList.module.css'\r\nimport ListHeader from './ListHeader/ListHeader'\r\nimport ListTasks from './ListTasks/ListTasks'\r\nimport ListFooter from './ListFooter/ListFooter'\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.restoreTasks(this.props.list.id)\r\n    }\r\n\r\n    \r\n    render = () => {\r\n        const { listsCount, listTitles, maxTasksCount } = this.props\r\n        const { title, id, page, totalCount, countOnPage, tasks, generalCount, \r\n            order, filterValue, listDeliting, listProcessing, taskIsAdding, \r\n            footerProcessing, tasksOrder } = this.props.list;\r\n        const tasksCount = tasksOrder ? tasksOrder.length : null\r\n\r\n\r\n        return (\r\n            <div className={styles.todoList}>\r\n                <section className={styles.todoList_wrapper}>\r\n                    <ListHeader\r\n                        title = { title } \r\n                        listId = { id }\r\n                        filterValue = { filterValue }\r\n                        page = { page }\r\n                        maxTasksCount={maxTasksCount}\r\n                        generalCount = {generalCount}\r\n                        totalCount={totalCount}\r\n                        listTitles={listTitles}\r\n                        listDeliting = {listDeliting}\r\n                        listProcessing={listProcessing} \r\n                        taskIsAdding={taskIsAdding} />\r\n                    <ListTasks\r\n                        tasks={tasks}\r\n                        listId={id}\r\n                        tasksCount={tasksCount}\r\n                    />\r\n                </section>\r\n                <ListFooter \r\n                    listId={id}\r\n                    page = {page}\r\n                    order={order}\r\n                    listsCount={listsCount}\r\n                    filterValue = { filterValue }\r\n                    countOnPage ={ countOnPage }\r\n                    totalCount={totalCount} \r\n                    footerProcessing={footerProcessing} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styles from './Error404.module.css';\r\n\r\n\r\nconst Error404 = (props) => {\r\n    return(\r\n        <div className={styles.error404}>\r\n            <h3>No match for <code>\"{props.location.pathname}\"</code>. Please, check URL.</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Error404);","import React, { useEffect } from 'react';\r\nimport styles from './CommonError.module.css';\r\n\r\n\r\nconst CommonError = ({message, resetError}) => {\r\n\r\n    useEffect(() => {\r\n        const timerId = setTimeout(resetError, 5000)\r\n        return () => clearTimeout(timerId)\r\n    },[resetError])\r\n\r\n    const keyReset = (e) => {\r\n        if (e.key === 'Enter') resetError()\r\n    }\r\n\r\n    return(\r\n        <div className={styles.error}>\r\n            {message}\r\n            {<span className={`fa fa-times ${styles.closeIcon}`} aria-hidden=\"true\" \r\n                onClick={resetError} tabIndex='0' onKeyPress={keyReset}\r\n                aria-label='close error'></span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommonError;","import React from 'react';\r\nimport styles from './App.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, Route, withRouter, Switch } from 'react-router-dom';\r\nimport TodoList from './TodoList/TodoList';\r\nimport AddItemForm from './AddItemForm/AddItemForm';\r\nimport Preloader from './Preloader/Preloader';\r\nimport {restoreLists, restoreTasks, addList} from '../Redux/appReducer';\r\nimport {resetErrorAC as resetError} from '../Redux/errorsReducer';\r\nimport book from '../Assets/img/book.png';\r\nimport { compose } from 'redux';\r\nimport Error404 from './Errors/Error404/Error404';\r\nimport CommonError from './Errors/CommonError/CommonError';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.restoreLists()\r\n    }\r\n\r\n\r\n    restoreTasks = (listId) => this.props.restoreTasks(listId)\r\n\r\n\r\n    render() {\r\n\r\n        const {lists, listsCount, maxListsCount, maxTasksCount, listId, listsLoading, \r\n            errors, resetError} = this.props;\r\n\r\n        const listTitles = lists.map((list) => ({title: list.title, id: list.id}) )\r\n\r\n        // generate list Routes for single list display\r\n        const listsRoutes = lists.map((list) =>{\r\n            const path = list.title.replace(/\\s|\\?|#/g, '-')\r\n            return (\r\n            <Route path={`/${path}`} exact key={list.id} render={() => \r\n                <TodoList list={list} key={list.id} maxTasksCount={maxTasksCount}\r\n                    restoreTasks={this.restoreTasks} listTitles={listTitles} />} \r\n            />) \r\n        })\r\n\r\n        // generate list Routes for lists general display\r\n        const allLists = lists.map((list) =>\r\n            <TodoList list={list} key={list.id} listTitles={listTitles} listsCount={listsCount}\r\n                restoreTasks={this.restoreTasks} maxTasksCount={maxTasksCount} />\r\n        )\r\n\r\n        const allListsLinks = lists.map( ( list ) => {\r\n            const link = list.title.replace(/\\s|\\?|#/g, '-')\r\n            return(\r\n                <li key={list.id}><NavLink to={`/${link}`}>{list.title}</NavLink></li>\r\n            )\r\n        } )\r\n\r\n        const listTitleValidation = (newTitle) => {\r\n            const equalTitles = listTitles.find((el) => {\r\n                return (el.title.toLowerCase() === newTitle.toLowerCase() && el.id !== listId)\r\n            })\r\n\r\n            if (newTitle.trim() === '' || newTitle.length > 100 || newTitle.match(/%/) || equalTitles) {\r\n                return true\r\n            }\r\n        }\r\n\r\n        const addList = (title) => {\r\n            this.props.addList(title)\r\n            if (this.props.history.location.pathname !== '/') {\r\n                this.props.history.push('/')\r\n            }\r\n        }\r\n\r\n        const preloaderStyles = {\r\n            position: 'absolute', height: '12px', top: '1.75em', right: '34%', fill: 'white'\r\n        }\r\n        \r\n        const errorsArr = errors.length\r\n            ? errors.map((error, index) =>\r\n                <CommonError message={error} resetError={resetError} key={index} />)\r\n            : null\r\n        \r\n        const addListHint = \r\n            'Please, check the % sign is missing and enter a unique title between 1 and 100 chars long, or press \"Esc\" to reset'\r\n\r\n        return (\r\n            <div className={styles.app}>\r\n                {(errors.length !== 0) && <div className={styles.errorsBlock}>{errorsArr}</div>}\r\n                \r\n                <div className={styles.app_header}>\r\n                    { listsLoading && <Preloader {...preloaderStyles}/> }\r\n                    <NavLink to='/' exact className={styles.app_title}>\r\n                        <h2>\r\n                            <img src={book} alt='book' className={styles.app_header_icon} />\r\n                            Tasks Manager\r\n                        </h2>\r\n                    </NavLink>\r\n                    {lists.length < maxListsCount \r\n                        && <div className={styles.app_addItemForm}>\r\n                                <AddItemForm addItem={addList} hint={addListHint}\r\n                                    validationFunc={listTitleValidation} placeholder='Add list' />\r\n                            </div>}\r\n                </div>\r\n                <nav className={styles.app_header_navigation}>\r\n                    <ul>{allListsLinks}</ul>\r\n                </nav>\r\n                <div className={styles.app_lists}>\r\n                    <Switch>\r\n                        {listsRoutes}\r\n                        <Route path='/' exact>{allLists}</Route>\r\n                        <Route component={Error404} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        lists: state.app.lists,\r\n        listsCount: state.app.lists.length,\r\n        listsLoading: state.app.listsProgress.listsLoading,\r\n        maxListsCount: state.app.maxListsCount,\r\n        maxTasksCount: state.app.maxTasksCount,\r\n        errors: state.errors.length ? state.errors.map((el) => el.message) : state.errors\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {restoreLists, restoreTasks ,addList, resetError}),\r\n    withRouter\r\n)(App);","import { createStore, combineReducers ,applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport appReducer from './appReducer';\r\nimport errorsReducer from './errorsReducer';\r\n\r\n\r\nconst storeReducer = combineReducers({\r\n    app: appReducer,\r\n    errors: errorsReducer\r\n})\r\n\r\n\r\nconst store = createStore(storeReducer, composeWithDevTools(applyMiddleware(ThunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './UI/App';\r\nimport store from './Redux/store';\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store = {store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}