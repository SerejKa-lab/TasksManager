{"version":3,"sources":["UI/App.module.css","UI/TodoList/ListFooter/StatusFilter/StatusFilter.module.css","UI/TodoList/ListFooter/ListOrder/ListOrder.module.css","UI/TodoList/ListTasks/ListTask/ListTask.module.css","UI/TodoList/ListHeader/ListHeader.module.css","UI/TodoList/ListFooter/PagesLinks/PagesLinks.module.css","UI/TodoList/ListHeader/ListTitle/ListTitle.module.css","UI/TodoList/ListTasks/ListTask/TaskPriority/TaskPriority.module.css","UI/TodoList/ListTasks/ListTask/TaskTitle/TaskTitle.module.css","UI/TodoList/TodoList.module.css","UI/AddItemForm/AddItemForm.module.css","UI/Tooltip/Tooltip.module.css","UI/TodoList/ListTasks/ListTasks.module.css","UI/TodoList/ListTasks/ListTask/TaskOrder/TaskOrder.module.css","UI/TodoList/ListFooter/ListFooter.module.css","Assets/img/book.png","UI/Error404/Error404.module.css","UI/Tooltip/Tooltip.js","UI/AddItemForm/AddItemForm.js","API/api.js","Redux/errorsReducer.js","Redux/appReducer.js","UI/Preloader/Preloader.js","UI/TodoList/ListHeader/ListTitle/ListTitle.js","UI/TodoList/ListHeader/ListHeader.js","UI/TodoList/ListTasks/ListTask/TaskPriority/TaskPriority.js","UI/TodoList/ListTasks/ListTask/TaskTitle/TaskTitle.js","UI/TodoList/ListTasks/ListTask/TaskOrder/TaskOrder.js","UI/TodoList/ListTasks/ListTask/ListTask.js","UI/TodoList/ListTasks/ListTasks.js","UI/TodoList/ListFooter/ListOrder/ListOrder.js","UI/TodoList/ListFooter/StatusFilter/StatusFilter.js","UI/TodoList/ListFooter/PagesLinks/PagesLinks.js","UI/TodoList/ListFooter/ListFooter.js","UI/TodoList/TodoList.js","UI/Error404/Error404.js","UI/App.js","Redux/store.js","index.js"],"names":["module","exports","Tooltip","props","useState","display","setDisplay","tooltipStyle","styles","tooltip","isHidden","className","onClick","hint","AddItemForm","state","inputError","itemTitle","setItemTitle","e","setState","currentTarget","value","newTitle","validationFunc","addItem","actionOnBlur","validationResult","actionOnKey","key","keyCode","newItemForm","this","error","onChange","onKeyDown","onBlur","autoFocus","type","placeholder","React","Component","instance","Axios","create","baseURL","withCredentials","headers","api","get","listId","title","put","post","putAfterItemId","delete","page","taskId","dataObj","initialState","errorsReducer","action","SET_ERROR","RESET_ERROR","setErrorAC","lists","listsOrder","listsProgress","listsLoading","maxTasksCount","maxListsCount","appReducer","countOnPage","renderBasis","RESTORE_LISTS","map","list","index","tasks","order","filterValue","ALL_S","footerProcessing","id","ADD_LIST","extendedList","UPDATE_LIST_TITLE","REORDER_LIST","reorderedLists","DELETE_LIST","filter","LIST_IS_LOADING","LIST_IN_PROCESS","process","SET_FILTER_VALUE","RESTORE_TASKS","totalCount","tasksOrder","task","renderIndex","SET_TASKS_PAGE","SET_TASKS_ORDER","DELETE_TASK","UPDATE_TASK","todoListId","TASK_IN_PROCESS","SET_FLTR_TASKS_PAGE","status","length","newTasksOrder","generalCount","DELETE_FLTR_TASK","SET_PREV_ACT_ID","prevActiveId","listIsLoadingAC","listInProcessAC","updateListTitleAC","deleteListAC","reorderListAC","restoreTasksAC","setTasksPageAC","deleteTask","taskInProcessAC","COMPLETED","statusObj","setFilterValueAC","setPrevActId","setFilteredPageAC","deleteFltrTask","setFilteredPage","dispatch","a","response","data","items","setAllTasksPage","getState","app","find","prevFilterVal","response_1","setTasksOrder","response_2","setTasksPage","Preloader","height","width","fill","userStyles","loaderStyle","slice","indexOf","svg","xmlns","xlink","version","viewBox","space","style","cx","cy","r","attributeName","dur","begin","repeatCount","keyTimes","values","ListTitle","editMode","updateListTitle","match","history","location","pathname","push","replace","setEditMode","setDisplayMode","editListTitle","equalTitles","listTitles","el","toLowerCase","trim","setTitleOnKey","list_title__input","list_title","listDeliting","titleUpdating","position","bottom","right","compose","connect","resultCode","withRouter","ListHeader","deleteList","then","addTask","taskIsAdding","addTaskActive","totalTasksCount","list_header","list_header_add_form","delete_button","mdtp","newTaskId","item","TaskPriority","setMode","priorityArray","priorityOptions","prior","getTaskPriority","priority","getTaskPriorityStyle","taskPriority","resetEditMode","defaultValue","findIndex","updateTask","TaskTitle","setTitle","setError","taskTitle","reorderTask","currPos","nextRenderPos","nextPos","undefined","targerList","getAfterId","getTasksOrder","currId","i","t","Math","ceil","tasksCount","selectMode","resetMode","optionArr","getOptions","taskOrder","updateObj","targetList","tasksLength","targetTask","updatedTask","delTaskFromPage","pagesCount","taskInProcess","todoList_task","taskIsDone","isDoneCheck","completed","checked","ListTasks","restProps","tasksArray","listTasks","ListOrder","handleClickOutside","showOrder","toggleMode","reorderOnClick","reorderList","listsCount","pagesArr","numberStyle","orderNumber","active","getPagesArr","orderBtnStyle","pressed","listOrder","orderBox","getReorderedLists","currList","onClickOutside","StatusFilter","toggleOnClick","setFilterValue","buttonAll","buttonActive","buttonCompleted","filterButtonStyle","frontButton","statusFilter","ACTIVE","filterButtons","disabled","l","setDisabled","useEffect","tasksPagesLinks","pagesLinks","disabledValue","linkStyle","pageLink","getPagesLinks","list_footer","TodoList","render","todoList","todoList_wrapper","restoreTasks","error404","App","restoreLists","listsRoutes","path","exact","allLists","allListsLinks","link","to","errorMessage","message","app_header","top","app_title","src","book","alt","app_header_icon","app_addItemForm","addList","app_header_navigation","app_lists","component","Error404","errors","storeReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ThunkMiddleware","ReactDOM","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,IAAM,iBAAiB,UAAY,uBAAuB,OAAS,oBAAoB,gBAAkB,6BAA6B,WAAa,wBAAwB,sBAAwB,mCAAmC,UAAY,yB,mBCA/RD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,QAAU,8BAA8B,cAAgB,sC,mBCA5HD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,2BAA2B,SAAW,4BAA4B,YAAc,+BAA+B,OAAS,4B,mBCA7LD,EAAOC,QAAU,CAAC,cAAgB,gCAAgC,WAAa,6BAA6B,cAAgB,gCAAgC,YAAc,gC,mBCA1KD,EAAOC,QAAU,CAAC,YAAc,gCAAgC,qBAAuB,yCAAyC,cAAgB,oC,mBCAhJD,EAAOC,QAAU,CAAC,gBAAkB,oCAAoC,SAAW,6BAA6B,OAAS,6B,mBCAzHD,EAAOC,QAAU,CAAC,kBAAoB,qCAAqC,MAAQ,yBAAyB,WAAa,gC,mBCAzHD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,OAAS,6BAA6B,IAAM,0BAA0B,KAAO,2BAA2B,OAAS,6BAA6B,MAAQ,8B,mBCA1ND,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,mBCAnED,EAAOC,QAAU,CAAC,iBAAmB,mCAAmC,SAAW,6B,mBCAnFD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,cAAgB,qC,mBCApHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,4B,mBCAhED,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,kC,mBCDhCD,EAAOC,QAAU,IAA0B,kC,mBCC3CD,EAAOC,QAAU,CAAC,SAAW,6B,sSCiBdC,EAdC,SAACC,GAAW,IAAD,EAEOC,oBAAS,GAFhB,mBAEhBC,EAFgB,KAEPC,EAFO,KAKjBC,EAAeF,EAAUG,IAAOC,QAAUD,IAAOE,SAEvD,OACI,yBAAKC,UAAWJ,EAAcK,QALd,kBAAMN,GAAW,KAM5BH,EAAMU,OCoDJC,E,2MA3DXC,MAAQ,CACJC,YAAY,EACZC,UAAW,I,EAGfC,aAAe,SAACC,GACR,EAAKJ,MAAMC,YAAY,EAAKI,SAAS,CAAEJ,YAAY,IACvD,EAAKI,SAAS,CAAEH,UAAWE,EAAEE,cAAcC,QAAS,WAChD,IAAMC,EAAW,EAAKR,MAAME,WACH,EAAKd,MAAMqB,eAC9B,EAAKrB,MAAMqB,eAAeD,GAAY,OAExC,EAAKH,SAAS,CAAEJ,YAAY,Q,EAIxCS,QAAU,WACuB,KAAzB,EAAKV,MAAME,UAAkB,EAAKG,SAAS,CAAEJ,YAAY,IAEpD,EAAKD,MAAMC,aACZ,EAAKb,MAAMsB,QAAQ,EAAKV,MAAME,WAC9B,EAAKG,SAAS,CAAEH,UAAW,O,EAIvCS,aAAe,WACX,IAAMC,EAAmB,EAAKxB,MAAMqB,eAC1B,EAAKrB,MAAMqB,eAAe,EAAKT,MAAME,WAAa,KACxD,EAAKF,MAAMC,aAAeW,GAC1B,EAAKP,SAAS,CAAEJ,YAAY,K,EAIpCY,YAAc,SAACT,GACG,UAAVA,EAAEU,KAAiB,EAAKJ,UACT,KAAdN,EAAEW,SACH,EAAKV,SAAS,CAAEH,UAAW,GAAID,YAAY,K,wEAK/C,OACI,yBAAKL,UAAWH,IAAOuB,aACnB,2BACIpB,UAAWqB,KAAKjB,MAAMC,WAAaR,IAAOyB,MAAQ,GAClDC,SAAUF,KAAKd,aACfiB,UAAWH,KAAKJ,YAChBQ,OAAQJ,KAAKN,aACbW,WAAW,EACXC,KAAK,OAAOC,YAAaP,KAAK7B,MAAMoC,YAAajB,MAAOU,KAAKjB,MAAME,YAEvE,4BAAQL,QAASoB,KAAKP,SAAtB,OAEEO,KAAKjB,MAAMC,YAAc,kBAAC,EAAD,CAASH,KAAMmB,KAAK7B,MAAMU,Y,GAvD3C2B,IAAMC,W,uECD1BC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,0DACTC,iBAAiB,EACjBC,QAAS,CAAE,UAAW,0CAGbC,EAAM,WAGX,OAAON,EAASO,IAAI,KAHfD,EAAM,SAMCE,EAAQC,GACpB,OAAOT,EAASU,IAAT,WAAiBF,GAAU,CAAEC,WAP/BH,EAAM,SAUPG,GACJ,OAAOT,EAASW,KAAK,GAAI,CAAEF,WAXtBH,EAAM,SAcHE,EAAQI,GAChB,OAAOZ,EAASU,IAAT,WAAiBF,EAAjB,YAAmC,CAAEI,oBAfvCN,EAAM,SAkBJE,GACP,OAAOR,EAASa,OAAT,WAAoBL,KAnBtBF,EAAM,SA0BHE,GACR,OAAOR,EAASO,IAAT,WAAiBC,EAAjB,sBA3BFF,EAAM,SA8BAE,GAAmB,IAAXM,EAAU,uDAAH,EAC1B,OAAOd,EAASO,IAAT,WAAiBC,EAAjB,gCAA+CM,KA/BjDR,EAAM,SAkCPE,EAAQC,GACZ,OAAOT,EAASW,KAAT,WAAkBH,EAAlB,UAAkC,CAAEC,WAnCtCH,EAAM,SAsCJE,EAAQO,EAAQC,GACvB,OAAOhB,EAASU,IAAT,WAAiBF,EAAjB,kBAAiCO,GAAjC,eAAgDC,KAvClDV,EAAM,SA0CJE,EAAQO,GACf,OAAOf,EAASa,OAAT,WAAoBL,EAApB,kBAAoCO,KA3CtCT,EAAM,SA8CHE,EAAQO,EAAQH,GACxB,OAAOZ,EAASU,IAAT,WAAiBF,EAAjB,kBAAiCO,EAAjC,YAAmD,CAAEH,oBCxD9DK,EAAe,CACjB1B,MAAO,MAwBI2B,EArBO,WAAmC,IAAlC7C,EAAiC,uDAAzB4C,EAAcE,EAAW,uCAEpD,OAAQA,EAAOvB,MAEX,KAAKwB,EACD,OAAO,eACA/C,EADP,CAEIkB,MAAO4B,EAAO5B,QAGtB,KAAK8B,EACD,OAAO,eACAhD,EADP,CAEIkB,MAAO,OAGf,QACI,OAAOlB,IAOb+C,EAAY,YACLE,EAAa,SAAC/B,GAAD,MAAY,CAAEK,KAAMwB,EAAW7B,MAAOA,IAG1D8B,EAAc,cC7BdJ,GAAgB,CAClBM,MAAO,GACPC,WAAY,GACZC,cAAe,CAAEC,cAAc,GAC/BC,cAAe,GACfC,cAAe,GACfrC,MAAO,MAsQIsC,GA1PI,WAAmC,IAAlCxD,EAAiC,uDAAzB4C,GAAcE,EAAW,uCAE3CW,EAAc,GACdC,GAAeZ,EAAOL,KAAO,GAAGgB,EAAa,EAEnD,OAAQX,EAAOvB,MAIX,KAAKoC,GACD,OAAO,eACA3D,EADP,CAEIkD,MAAOJ,EAAOI,MAAMU,KAAK,SAACC,EAAMC,GAC5B,OAAKD,EAAKE,MAIL,eACIF,EADJ,CACUG,MAAOF,EAAOrB,KAAM,EAAGgB,cAAaQ,YAAaC,GACxDC,kBAAkB,IANT,eACRN,EADQ,CACFG,MAAOF,EAAOrB,KAAM,EAAGgB,cAAaQ,YAAaC,GAAOH,MAAO,GACtEI,kBAAkB,OAO9BhB,WAAYL,EAAOI,MAAMU,KAAK,SAACC,GAAD,OAAUA,EAAKO,QAGrD,KAAKC,GACD,IAAMC,EAAY,eAAQxB,EAAOe,KAAf,CAAqBpB,KAAM,EAAGgB,cAAaQ,YAAaC,GAAOH,MAAO,KACxF,OAAO,eACA/D,EADP,CAEIkD,MAAO,CAAEoB,GAAF,mBAAmBtE,EAAMkD,QAAQU,KAAI,SAACC,EAAMC,GAAP,sBAAsBD,EAAtB,CAA4BG,MAAOF,SAGvF,KAAKS,GACD,OAAO,eACAvE,EADP,CAEIkD,MAAOlD,EAAMkD,MAAMU,KAAK,SAACC,GACrB,OAAIA,EAAKO,KAAOtB,EAAOX,OAAe,eAAM0B,EAAb,CAAmBzB,MAAOU,EAAOV,QACpDyB,OAIxB,KAAKW,GACD,OAAO,eACAxE,EADP,CAEIkD,MAAOJ,EAAO2B,eAAeb,KAAK,SAACC,EAAMC,GAAP,sBAAsBD,EAAtB,CAA4BG,MAAOF,OACrEX,WAAYL,EAAO2B,eAAeb,KAAI,SAACC,GAAD,OAAUA,EAAKO,QAG7D,KAAKM,GACD,OAAO,eACA1E,EADP,CAEIkD,MACIlD,EAAMkD,MACDyB,QAAO,SAACd,GAAD,OAAUA,EAAKO,KAAOtB,EAAOX,UACpCyB,KAAK,SAACC,EAAMC,GAAP,sBAAsBD,EAAtB,CAA4BG,MAAOF,SAGzD,KAAKc,GACD,OAAO,eACA5E,EADP,CAEIoD,cAAc,eAAKpD,EAAMoD,cAAZ,CAA2BC,aAAcP,EAAOvC,UAGrE,KAAKsE,GACD,OAAO,eACA7E,EADP,CAEIkD,MAAOlD,EAAMkD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKO,KAAOtB,EAAOX,OAAe,eAAK0B,EAAZ,eAAmBf,EAAOgC,QAAUhC,EAAOvC,QAC9DsD,OAIxB,KAAKkB,GACD,OAAO,eACA/E,EADP,CAEIkD,MAAOlD,EAAMkD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKO,KAAOtB,EAAOX,OAAe,eAAK0B,EAAZ,CAAkBI,YAAanB,EAAOvC,QACzDsD,OAQxB,KAAKmB,GACD,OAAO,eACAhF,EADP,CAEIkD,MAAOlD,EAAMkD,MAAMU,KAAI,SAAAC,GACpB,OAAIA,EAAKO,KAAOtB,EAAOX,OACX,eACA0B,EADP,CAEIoB,WAAYnC,EAAOmC,WACnBC,WAAapC,EAAOiB,MACdjB,EAAOiB,MAAMH,KAAI,SAACuB,GAAD,OAAUA,EAAKf,MADV,GAE5BL,MAAQjB,EAAOiB,MACTjB,EAAOiB,MAAMY,QAAQ,SAACQ,EAAMrB,GAAP,OAAiBA,EAAQL,KAC3CG,KAAK,SAACuB,EAAMrB,GAAP,sBAAsBqB,EAAtB,CAA4BC,YAAatB,EAAQ,OAFxC,KAInBD,OAIxB,KAAKwB,GACD,OAAO,eACArF,EADP,CAEIkD,MAAOlD,EAAMkD,MAAMU,KAAK,SAACC,GACrB,OAAIA,EAAKO,KAAOtB,EAAOX,OACZ,eACA0B,EADP,CAEIoB,WAAYnC,EAAOmC,WAAanC,EAAOmC,WAAapB,EAAKoB,WACzDxC,KAAMK,EAAOL,KACbsB,MAAOjB,EAAOiB,MACTH,KAAI,SAACuB,EAAMrB,GAAP,sBAAuBqB,EAAvB,CAA6BC,YAAa1B,EAAcI,SAE3DD,OAI1B,KAAKyB,GACD,OAAO,eACAtF,EADP,CAEIkD,MAAOlD,EAAMkD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKO,KAAOtB,EAAOX,OACZ,eAAK0B,EAAZ,CAAkBqB,WAAYpC,EAAOoC,aAC3BrB,OAK1B,KAAK0B,GACD,OAAO,eACAvF,EADP,CAEIkD,MAAOlD,EAAMkD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKO,KAAOtB,EAAOX,OACZ,eACA0B,EADP,CAEIoB,WAAYpB,EAAKoB,WAAW,EAC5BC,WAAYrB,EAAKqB,WAAWP,QAAO,SAACP,GAAD,OAAQA,IAAOtB,EAAOJ,UACzDqB,MACIF,EAAKE,MAAMY,QAAO,SAACQ,GAAD,OAAUA,EAAKf,KAAOtB,EAAOJ,UAC1CkB,KAAK,SAACuB,EAAMrB,GAAP,sBAAuBqB,EAAvB,CAA6BC,YAAa1B,EAAcI,SAEhED,OAI1B,KAAK2B,GAED,OAAO,eACAxF,EADP,CAEIkD,MAAOlD,EAAMkD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKO,KAAOtB,EAAOqC,KAAKM,WACjB,eACA5B,EADP,CAEIE,MAAOF,EAAKE,MAAMH,KAAI,SAACuB,GACnB,OAAIA,EAAKf,KAAOtB,EAAOqC,KAAKf,GACjB,eAAKe,EAAZ,GAAqBrC,EAAOqC,MAClBA,OAGZtB,OAI1B,KAAK6B,GACD,OAAO,eACA1F,EADP,CAEIkD,MAAOlD,EAAMkD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKO,KAAOtB,EAAOX,OACZ,eACA0B,EADP,CAEIE,MAAOF,EAAKE,MAAMH,KAAK,SAACuB,GACpB,OAAIA,EAAKf,KAAOtB,EAAOJ,OACZ,eAAIyC,EAAX,eAAkBrC,EAAOgC,QAAShC,EAAOvC,QAEjC4E,OAIZtB,OAQxB,KAAK8B,GACD,IAAMV,EACFnC,EAAOiB,MAAMY,QAAO,SAACQ,GAAD,OAAUA,EAAKS,SAAW9C,EAAO8C,UAAQC,OAC3DC,EAAgBhD,EAAOiB,MACxBY,QAAO,SAACQ,GAAD,OAAUA,EAAKS,SAAW9C,EAAO8C,UACxChC,KAAI,SAACuB,GAAD,OAAUA,EAAKf,MACxB,OAAO,eACApE,EADP,CAEIkD,MAAOlD,EAAMkD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKO,KAAOtB,EAAOX,OACZ,eACA0B,EADP,CAEIpB,KAAMK,EAAOL,KACbwC,aACAc,aAAcjD,EAAOiB,MAAM8B,OAC3BX,WAAYY,EACZ/B,MAAOjB,EAAOiB,MACTY,QAAO,SAACQ,GAAD,OAAUA,EAAKS,SAAW9C,EAAO8C,UACxChC,KAAI,SAACuB,EAAMrB,GAAP,sBAAuBqB,EAAvB,CAA6BC,YAAatB,EAAQ,OACtDa,QAAO,SAACQ,EAAMrB,GAAP,OACHA,IAAUhB,EAAOL,KAAO,GAAKgB,GAAeK,EAAQhB,EAAOL,KAAOgB,OAErEI,OAI1B,KAAKmC,GACD,OAAO,eACAhG,EADP,CAEIkD,MAAOlD,EAAMkD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKO,KAAOtB,EAAOX,OACZ,eACA0B,EADP,CAEIoB,WAAYpB,EAAKoB,WAAY,EAC7Bc,aAAclC,EAAKkC,aAAc,EACjCb,WAAYrB,EAAKqB,WAAWP,QAAO,SAACP,GAAD,OAAQA,IAAOtB,EAAOJ,UACzDqB,MAAOF,EAAKE,MAAMY,QAAO,SAACQ,GAAD,OAAUA,EAAKf,KAAOtB,EAAOJ,UACjDkB,KAAI,SAACuB,EAAMrB,GAAP,sBAAuBqB,EAAvB,CAA6BC,YAAa1B,EAAcI,SAE3DD,OAI1B,KAAKoC,GACD,OAAO,eACAjG,EADP,CAEIkD,MAAOlD,EAAMkD,MAAMU,KAAI,SAACC,GACpB,OAAIA,EAAKO,KAAOtB,EAAOX,OACZ,eACA0B,EADP,CAEIqC,aAAcpD,EAAOoD,eAEfrC,OAK1B,QAAS,OAAO7D,IAclB4E,GAAkB,kBAClBuB,GAAkB,SAAC5F,GAAD,MAAY,CAAEgB,KAAMqD,GAAiBrE,UAEvDsE,GAAkB,kBAClBuB,GAAkB,SAACjE,EAAQ2C,EAASvE,GACtC,MAAO,CAACgB,KAAMsD,GAAiB1C,SAAQ2C,UAASvE,UAI9CoD,GAAgB,gBAgBhBU,GAAW,WAeXE,GAAoB,oBACpB8B,GAAoB,SAAClE,EAAQC,GAAT,MAAoB,CAAEb,KAAMgD,GAAmBpC,SAAQC,UAiB3EsC,GAAc,cACd4B,GAAe,SAACnE,GAAD,MAAa,CAACZ,KAAMmD,GAAavC,WAkBhDqC,GAAe,eACf+B,GAAgB,SAAC9B,GAAD,MAAqB,CAAClD,KAAMiD,GAAcC,mBA6D1DO,GAAgB,gBAChBwB,GAAiB,SAACrE,EAAQ4B,EAAOkB,GAAhB,MAAgC,CAAE1D,KAAMyD,GAAe7C,SAAQ4B,QAAOkB,eAWvFI,GAAiB,iBACVoB,GAAiB,SAACtE,EAAQM,EAAMsB,EAAOkB,GAAtB,MACzB,CAAE1D,KAAM8D,GAAgBlD,SAAQM,OAAMsB,QAAOkB,eAE5CM,GAAc,cACPmB,GAAa,SAACvE,EAAQO,EAAQD,GAAjB,MAA2B,CAAElB,KAAMgE,GAAapD,SAAQO,SAAQD,SAEpF+C,GAAc,cAGdE,GAAkB,kBAClBiB,GAAkB,SAACxE,EAAQO,EAAQoC,EAASvE,GAA1B,MACf,CAACgB,KAAMmE,GAAiBvD,SAAQO,SAAQoC,UAASvE,UAO7C2D,GAAQ,QACR0C,GAAY,YAGZC,GAAwB,EAAxBA,GAAmC,EAG1C9B,GAAmB,mBACnB+B,GAAmB,SAAC3E,EAAQ5B,GAAT,MAAoB,CAACgB,KAAMwD,GAAkB5C,SAAQ5B,UA0BxE0F,GAAkB,kBAClBc,GAAe,SAAC5E,EAAQ+D,GAAT,MAA2B,CAAC3E,KAAM0E,GAAiB9D,SAAQ+D,iBAE1EP,GAAsB,sBACtBqB,GAAoB,SAAC7E,EAAQM,EAAMsB,EAAO6B,GAAtB,MACrB,CAAErE,KAAMoE,GAAqBxD,SAAQM,OAAMsB,QAAO6B,WAEjDI,GAAmB,mBACnBiB,GAAiB,SAAC9E,EAAQO,EAAQD,GAAjB,MAA2B,CAAElB,KAAMyE,GAAkB7D,SAAQO,SAAQD,SAKtFyE,GAAkB,SAAC/E,EAAQM,EAAMmD,GAAf,8CAA0B,WAAMuB,GAAN,iBAAAC,EAAA,+EAEnBnF,EAAgBE,GAFG,OAEpCkF,EAFoC,OAGpCtD,EAAQsD,EAASC,KAAKC,MAC5BJ,EAASH,GAAkB7E,EAAQM,EAAMsB,EAAO6B,IAJN,gDAM1CuB,EAASlE,EAAW,EAAD,KANuB,yDAA1B,uDAWlBuE,GAAkB,SAACrF,EAAQM,GAAT,8CAAkB,WAAM0E,EAAUM,GAAhB,qCAAAL,EAAA,wDAGCK,IAAWC,IAAIxE,MAAMyE,MAAK,SAAC9D,GAAD,OAAUA,EAAKO,KAAOjC,KAAlEyF,EAHiB,EAG9B3D,YAH8B,KAK9B2D,EAL8B,cAQ7BhB,GAR6B,EAxDpB,WAwDoB,gDAWD3E,EAAgBE,GAXf,cAWpB0F,EAXoB,OAYpB/B,EAAgB+B,EAAWP,KAAKC,MAAM3D,KAAI,SAACuB,GAAD,OAAUA,EAAKf,MAC/D+C,EAASW,GAAc3F,EAAQ2D,IAbL,UAeD7D,EAAmBE,EAAQM,GAf1B,eAepBsF,EAfoB,SAgBWA,EAAWT,KAAjCvD,EAhBW,EAgBlBwD,MAActC,EAhBI,EAgBJA,WACtBkC,EAASV,GAAetE,EAAQM,EAAMsB,EAAOkB,IAjBnB,8DAoB1BkC,EAASlE,EAAW,EAAD,KApBO,wDA2BHhB,EAAmBE,EAAQM,GA3BxB,QA2BpB4E,EA3BoB,SA4BWA,EAASC,KAA/BvD,EA5BW,EA4BlBwD,MAActC,EA5BI,EA4BJA,WACtBkC,EAASV,GAAetE,EAAQM,EAAMsB,EAAOkB,IA7BnB,mDA+B1BkC,EAASlE,EAAW,EAAD,KA/BO,kEAAlB,yDAqCX+E,GAAe,SAAC7F,EAAQ8B,EAAaxB,GAAtB,8CAA+B,WAAM0E,GAAN,eAAAC,EAAA,sDAEvDD,EAAUf,GAAgBjE,EAAQ,oBAAoB,IAElDyD,EAASiB,GAJ0C,KAK/C5C,EAL+C,OA7FrC,WA6FqC,cAY9C2C,GAZ8C,kCAQzCO,EAASD,GAAgB/E,EAAQM,EAAMmD,IARE,cAS/CuB,EAASf,GAAgBjE,EAAQ,oBAAoB,IATN,mCAa/CyD,EAASiB,GAbsC,UAczCM,EAASD,GAAgB/E,EAAQM,EAAMmD,IAdE,eAe/CuB,EAASf,GAAgBjE,EAAQ,oBAAoB,IAfN,8CAmBzCgF,EAASK,GAAgBrF,EAAQM,IAnBQ,QAoB/C0E,EAASf,GAAgBjE,EAAQ,oBAAoB,IApBN,4CAA/B,uDAyKtBmD,GAAkB,kBAClBwC,GAAgB,SAAC3F,EAAQ+C,GAAT,MAAyB,CAAE3D,KAAM+D,GAAiBnD,SAAQ+C,e,SCrqBjE+C,GAnCG,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAASC,EAAiB,0CAoBpDC,EAAW,eACVD,EADU,CAEbF,MAnBKA,KACCA,GAASD,EACwC,MAArCA,EAAOK,MAAM,EAAGL,EAAOM,QAAQ,MAChC,KAEXL,GAAUD,OAAhB,EAAgC,SAehCA,OAXKA,KACCA,GAAUC,EACqC,KAAnCA,EAAMI,MAAM,EAAGJ,EAAMK,QAAQ,MAC9B,KAEXN,GAAWC,OAAjB,EAAgC,UASpC,OACQ,yBAAKM,IAAI,6BAA6BC,MAAM,6BAA6BC,MAAM,+BAA+BC,QAAQ,MAAMC,QAAQ,aAAaC,MAAM,WAAWC,MAAOT,GACrK,2BAAG,4BAAQF,KAAMA,EAAMY,GAAG,OAAOC,GAAG,OAAOC,EAAE,SAAQ,6BAASC,cAAc,UAAUC,IAAI,QAAQC,MAAM,KAAKC,YAAY,aAAaC,SAAS,sBAAsBC,OAAO,qBAC5K,2BAAG,4BAAQpB,KAAMA,EAAMY,GAAG,QAAQC,GAAG,OAAOC,EAAE,SAAQ,6BAASC,cAAc,UAAUC,IAAI,QAAQC,MAAM,KAAKC,YAAY,aAAaC,SAAS,sBAAsBC,OAAO,qBAC7K,2BAAG,4BAAQpB,KAAMA,EAAMY,GAAG,KAAKC,GAAG,OAAOC,EAAE,SAAQ,6BAASC,cAAc,UAAUC,IAAI,QAAQC,MAAM,KAAKC,YAAY,aAAaC,SAAS,8BAA8BC,OAAO,2B,QCvB5LC,G,2MAEFzJ,MAAQ,CACJ0J,UAAU,EACVtH,MAAO,GACPnC,YAAY,G,EAGhB0J,gBAAkB,SAACvH,GACVA,EAAMwH,MAAM,OACb,EAAKxK,MAAMuK,gBAAgB,EAAKvK,MAAM+C,OAAQC,GACD,MAAzC,EAAKhD,MAAMyK,QAAQC,SAASC,UAC5B,EAAK3K,MAAMyK,QAAQG,KAAnB,WAA4B5H,EAAM6H,QAAQ,WAAY,S,EAKlEC,YAAc,kBAAM,EAAK7J,SAAS,CAAEqJ,UAAU,EAAMtH,MAAO,EAAKhD,MAAMgD,S,EACtE+H,eAAiB,WACT,EAAKnK,MAAMC,YAAY,EAAKI,SAAS,CAAEJ,YAAY,IACvD,EAAKI,SAAS,CAAEqJ,UAAU,K,EAG9BU,cAAgB,SAAChK,GACb,IAAMI,EAAWJ,EAAEE,cAAcC,MAC3B8J,EAAc,EAAKjL,MAAMkL,WAAW3C,MAAK,SAAC4C,GAC5C,OAAQA,EAAGnI,MAAMoI,gBAAkBhK,EAASgK,eAAiBD,EAAGnG,KAAO,EAAKhF,MAAM+C,UAGlF,EAAKnC,MAAMC,YAAY,EAAKI,SAAS,CAAEJ,YAAY,IAC/B,KAApBO,EAASiK,QAAiBjK,EAASqF,OAAS,KACzCrF,EAASoJ,MAAM,MAAQS,EAC1B,EAAKhK,SAAS,CAAE+B,MAAO5B,EAAUP,YAAY,IAC1C,EAAKI,SAAS,CAAE+B,MAAO5B,K,EAGlCkK,cAAgB,SAACtK,GACb,IAAMgC,EAAQhC,EAAEE,cAAcC,MAChB,UAAVH,EAAEU,KAAoB,EAAKd,MAAMC,aACjC,EAAKkK,iBACL,EAAKR,gBAAgBvH,IAEP,KAAdhC,EAAEW,UACF,EAAKoJ,iBACD,EAAKnK,MAAMC,YAAY,EAAKI,SAAS,CAAEJ,YAAY,M,wEAc3D,OAAIgB,KAAKjB,MAAM0J,SAEP,yBAAK9J,UAAWH,IAAOkL,mBACnB,2BAAOpJ,KAAK,OACRhB,MAAOU,KAAKjB,MAAMoC,MAClBxC,UAAWqB,KAAKjB,MAAMC,WAAaR,IAAOyB,MAAQ,GAClDC,SAAUF,KAAKmJ,cACf9I,WAAW,EACXD,OAAQJ,KAAKkJ,eACb/I,UAAWH,KAAKyJ,gBAElBzJ,KAAKjB,MAAMC,YAAc,kBAAC,EAAD,CAASH,KAb5C,uHAiBA,yBAAKF,UAAWH,IAAOmL,YACnB,0BAAM/K,QAASoB,KAAKiJ,aAAcjJ,KAAK7B,MAAMgD,QAC3CnB,KAAK7B,MAAMyL,cAAgB5J,KAAK7B,MAAM0L,gBACjC,kBAAC,GAzBI,CAChB1C,KAAM,kBAAmBF,OAAQ,OAAQ6C,SAAU,WAAYC,OAAQ,QAASC,MAAO,a,GApD3ExJ,IAAMC,WAmFfwJ,sBACXC,YAAQ,KAAM,CAAExB,gBFqOW,SAACxH,EAAQC,GAAT,8CAAmB,WAAM+E,GAAN,SAAAC,EAAA,sEAE1CD,EAASf,GAAgBjE,EAAQ,iBAAiB,IAFR,SAGnBF,EAAoBE,EAAQC,GAHT,OAIT,IAJS,OAI7BkF,KAAK8D,aACdjE,EAASd,GAAkBlE,EAAQC,IACnC+E,EAASf,GAAgBjE,EAAQ,iBAAiB,KANZ,gDAS1CgF,EAASlE,EAAW,EAAD,KACnBkE,EAASf,GAAgBjE,EAAQ,iBAAiB,IAVR,yDAAnB,yDEpO3BkJ,IAFWH,CAGbzB,ICtFI6B,G,2MAEFC,WAAa,WACT,EAAKnM,MAAMmM,WAAW,EAAKnM,MAAM+C,QAC5BqJ,MAAK,WAC2C,MAAzC,EAAKpM,MAAMyK,QAAQC,SAASC,UAC5B,EAAK3K,MAAMyK,QAAQG,KAAK,S,EAKxCyB,QAAU,SAACrJ,GAAW,IAAD,EAC6B,EAAKhD,MAA3C+C,EADS,EACTA,OAAQ8B,EADC,EACDA,YAAayH,EADZ,EACYA,aAEvBzH,IAAgB2C,IAAa3C,IAAgBC,IAAWwH,GAC1D,EAAKtM,MAAMqM,QAAQtJ,EAAQC,GH2ajB,WGxaV6B,GAA2ByH,GAC3B,EAAKtM,MAAMuM,cAAcxJ,EAAQC,I,wEAK/B,IAAD,EAG0DnB,KAAK7B,MAD7D+C,EAFF,EAEEA,OAAQC,EAFV,EAEUA,MAAOK,EAFjB,EAEiBA,KAAMwC,EAFvB,EAEuBA,WAAYhB,EAFnC,EAEmCA,YAAaqG,EAFhD,EAEgDA,WAAYhH,EAF5D,EAE4DA,cAC7DyC,EAHC,EAGDA,aAAc8E,EAHb,EAGaA,aAAcC,EAH3B,EAG2BA,cAAeY,EAH1C,EAG0CA,aAErCE,EAAkB3H,IAAgBC,GAAQe,EAAac,EAcjE,OACI,yBAAKnG,UAAWH,IAAOoM,aACnB,kBAAC,GAAD,CAAW1J,OAAQA,EAAQC,MAAOA,EAAOK,KAAMA,EAAM6H,WAAYA,EAC7DO,aAAcA,EAAcC,cAAeA,IAE9Cc,EAAkBtI,GACZ,yBAAK1D,UAAWH,IAAOqM,sBACtB,kBAAC,EAAD,CACItK,YAAY,eACZ1B,KAXhB,mFAYgBW,eAtBQ,SAACD,GACzB,GAAiB,KAAbA,GAAmBA,EAASqF,OAAS,KAA2B,KAApBrF,EAASiK,OACrD,OAAO,GAqBK/J,QAASO,KAAKwK,UACjBC,GAAgB,kBAAC,GAlBf,CACftD,KAAM,kBAAmBF,OAAQ,MAAO6C,SAAU,WAAYE,MAAO,MAAOD,OAAQ,YAqB7EH,GACG,uBAAGjL,UAAW,eAAiBH,IAAOsM,cAAelM,QAASoB,KAAKsK,aAEvEV,GACI,uBAAGjL,UAAW,eAAiBH,IAAOsM,qB,GA/DnCtK,IAAMC,WAwEzBsK,GAAO,CAAEP,QHweQ,SAACtJ,EAAQC,GAAT,8CAAmB,WAAM+E,EAAUM,GAAhB,qBAAAL,EAAA,6DAGhClC,EAAauC,IAAWC,IAAIxE,MAAMyE,MAAK,SAAC9D,GAAD,OAAUA,EAAKO,KAAOjC,KAAQ+C,WAE3EiC,EAASf,GAAgBjE,EAAQ,gBAAgB,IALX,kBAOXF,EAAYE,EAAQC,GAPT,UAQD,KAD3BiF,EAP4B,QAQrBC,KAAK8D,WARgB,wBASxBa,EAAY5E,EAASC,KAAKA,KAAK4E,KAAK9H,GACpC0B,EAVwB,CAUPmG,GAVO,mBAUO/G,IACrCiC,EAASW,GAAc3F,EAAQ2D,IAXD,UAYxBqB,EAASK,GAAgBrF,EAAQ,IAZT,QAa9BgF,EAASL,GAAiB3E,EAAQ+B,KAClCiD,EAASf,GAAgBjE,EAAQ,gBAAgB,IAdnB,0DAiBlCgF,EAASlE,EAAW,EAAD,KACnBkE,EAASf,GAAgBjE,EAAQ,gBAAgB,IAlBf,0DAAnB,yDGxeCwJ,cH+fK,SAACxJ,EAAQC,GAAT,8CAAmB,WAAM+E,EAAUM,GAAhB,2BAAAL,EAAA,6DAGtClC,EAAauC,IAAWC,IAAIxE,MAAMyE,MAAK,SAAC9D,GAAD,OAAUA,EAAKO,KAAOjC,KAAQ+C,WAE3EiC,EAAUf,GAAgBjE,EAAQ,gBAAgB,IALN,kBAOfF,EAAYE,EAAQC,GAPL,UAQL,KAD7ByF,EAPkC,QAQzBP,KAAK8D,WARoB,wBAS9Ba,EAAYpE,EAAWP,KAAKA,KAAK4E,KAAK9H,GACtC0B,EAV8B,CAUbmG,GAVa,mBAUC/G,IACrCiC,EAASW,GAAc3F,EAAQ2D,IAXK,UAYX7D,EAAgBE,GAZL,QAY9B4F,EAZ8B,OAa9BnC,EAASiB,GACT9C,EAAQgE,EAAWT,KAAKC,MAC9BJ,EAASH,GAAkB7E,EAAQ,EAAG4B,EAAO6B,IAC7CuB,EAASf,GAAgBjE,EAAQ,gBAAgB,IAhBb,0DAmBxCgF,EAASlE,EAAW,EAAD,KACnBkE,EAASf,GAAgBjE,EAAQ,gBAAgB,IApBT,0DAAnB,yDG/fUoJ,WHmQb,SAACpJ,GAAD,8CAAY,WAAMgF,GAAN,SAAAC,EAAA,sEAE9BD,EAASf,GAAgBjE,EAAQ,gBAAgB,IAFnB,SAGPF,EAAeE,GAHR,UAIG,IAJH,OAIjBmF,KAAK8D,WAJY,gCAKpBjE,EAASb,GAAanE,IALF,OAO9BgF,EAASf,GAAgBjE,EAAQ,gBAAgB,IAPnB,kDAU9BgF,EAASlE,EAAW,EAAD,KACnBkE,EAASf,GAAgBjE,EAAQ,gBAAgB,IAXnB,0DAAZ,wDGjQX+I,sBACXC,YAAQ,KAAMa,IACdX,IAFWH,CAGbI,I,4DCzCaa,GA1CM,SAAC/M,GAAW,IAAD,EAECC,oBAAS,GAFV,mBAErBqK,EAFqB,KAEX0C,EAFW,KAUtBC,EAAgB,CAAC,MAAO,SAAU,OAAQ,SAAU,SAEpDC,EAAkBD,EAAczI,KAAI,SAAA2I,GAAK,OAC3C,4BAAQ3M,UAAWH,KAAO8M,GAAQzL,IAAKyL,GAASA,MAE9CC,EAAkB,kBAAMH,EAAcjN,EAAMqN,WAC5CC,EAAuB,kBAAMjN,KAAQ4M,EAAcjN,EAAMqN,WAAc,IAAMhN,KAAOkN,cAGpFC,EAAgB,kBAAMR,GAAQ,IAIpC,OAAK1C,EAQG,4BACImD,aAAcL,IACd5M,UAAW8M,IACXvL,SA9BY,SAACf,GACrB,IAAMqM,EAAWJ,EAAcS,WAAU,SAACP,GAAD,OAAWA,IAAUnM,EAAEE,cAAcC,SAC9EnB,EAAM2N,WAAW,CAAEN,aACnBG,KA4BQvL,OAAQuL,EACRxL,UAfU,SAAChB,GAA0B,KAAdA,EAAEW,SAAgB6L,KAgBzCtL,WAAW,GANf,IAMwBgL,EANxB,KANA,0BAAMzM,QAPM,kBAAMuM,GAAQ,IAOExM,UAAW8M,KAClCF,IADL,U,oBCsCGQ,GA9DG,SAAC5N,GAAW,IAAD,EAEOC,oBAAS,GAFhB,mBAElBqK,EAFkB,KAERQ,EAFQ,OAGC7K,mBAAS,IAHV,mBAGlB+C,EAHkB,KAGX6K,EAHW,OAIM5N,oBAAS,GAJf,mBAIlBY,EAJkB,KAINiN,EAJM,KAYnB/C,EAAiB,WACflK,GAAYiN,GAAS,GACzBhD,GAAY,IA4BhB,OAAKR,EAMG,0BAAM9J,UAAWH,KAAO0N,WACpB,2BAAO5L,KAAK,OACRhB,MAAO6B,EACPxC,UAAWK,EAAaR,KAAOyB,MAAQ,GACvCC,SAnCM,SAACf,GACnB,IAAMI,EAAWJ,EAAEE,cAAcC,MAC7BN,GAAYiN,GAAS,GACD,KAApB1M,EAASiK,QAAiBjK,EAASqF,OAAS,KAC5CoH,EAASzM,GACT0M,GAAS,IACND,EAASzM,IA8BJc,WAAW,EACXD,OAAQ8I,EACR/I,UA7BM,SAAChB,GACnB,IAAMgC,EAAQhC,EAAEE,cAAcC,MAChB,UAAVH,EAAEU,KAAoBb,IACtBb,EAAM2N,WAAW,CAAE3K,UACnB+H,KAEc,KAAd/J,EAAEW,UACFoJ,IACIlK,GAAYiN,GAAS,OAsBnBjN,GAAc,kBAAC,EAAD,CAASH,KAjB7B,sFAKA,0BAAMD,QArCW,WACrBqK,GAAY,GACZ+C,EAAS7N,EAAMgD,QAmCsBxC,UAAWH,KAAO0N,WAAY/N,EAAMgD,MAArE,O,oBCPG+I,eAAQ,KAAM,CAAEiC,YNoqBJ,SAACjL,EAAQO,EAAQ2K,EAASC,GAA1B,8CAA4C,WAAMnG,EAAUM,GAAhB,mCAAAL,EAAA,yDAE7DmG,OAAqCC,IAA3BF,GAAyCA,EAAgB,EAAI,KACvEG,EAAahG,IAAWC,IAAIxE,MAAMyE,MAAK,SAAC9D,GAAD,OAAUA,EAAKO,KAAOjC,KAE7DuL,EAAa,WAAO,IACdzJ,EAA8BwJ,EAA9BxJ,YAAaiC,EAAiBuH,EAAjBvH,aAGrB,OAAgB,OAAZqH,GAAgC,IAAZF,EAAsB,KAC9B,OAAZE,EAAyBE,EAAWvI,WAAWmI,EAAU,GAGzDpJ,IAAgB2C,IAAyB,IAAZ2G,EAAsBrH,EACvC,IAAZqH,EAAsB,KACtBA,IAAYF,EAAgBI,EAAWvI,WAAWqI,EAAU,GAC5DA,GAAWF,EAAgBI,EAAWvI,WAAWqI,QAArD,GAGEI,EAAgB,WAClB,IAAMzI,EAAU,YAAOuI,EAAWvI,YAClC,GAAIqI,EAAUF,EAAS,CAEnB,IADA,IAAMO,EAAS1I,EAAWmI,GACjBQ,EAAIR,EAAU,EAAGQ,GAAKN,EAASM,IACpC3I,EAAW2I,EAAI,GAAK3I,EAAW2I,GAGnC,OADA3I,EAAWqI,GAAWK,EACf1I,EAEX,GAAIqI,EAAUF,EAAS,CAEnB,IADA,IAAMO,EAAS1I,EAAWmI,GACjBQ,EAAIR,EAASQ,EAAIN,EAASM,IAC/B3I,EAAW2I,GAAK3I,EAAW2I,EAAI,GAGnC,OADA3I,EAAWqI,GAAWK,EACf1I,EAEX,OAAOA,GAKK,OAAZqI,GAAoBA,KAAaF,EA1C8B,wBA2CzD9K,EAAiBmL,IACfjK,EAA6BgK,EAA7BhK,YAAaQ,EAAgBwJ,EAAhBxJ,YA5C0C,EA8C5CwJ,EAAW1J,MAAM4D,MAAK,SAACmG,GAAD,OAAOA,EAAE1J,KAAO1B,KAAjDkD,EA9CuD,EA8CvDA,OACFV,EAAayI,IAEblL,EAAO6K,EAAgBS,KAAKC,KAAKV,EAAgB7J,GAAe,EAGtE0D,EAASf,GAAgBjE,EAAQ,gBAAgB,IApDc,oBAsDpCF,EAAgBE,EAAQO,EAAQH,GAtDI,WAuD1B,IAvD0B,OAuD9C+E,KAAK8D,WAvDyC,oBAwDnDnH,IAAgBC,GAxDmC,kCAyD7CiD,EAASK,GAAgBrF,EAAQM,IAzDY,QA0DnD0E,EAASW,GAAc3F,EAAQ+C,IAC/BiC,EAASf,GAAgBjE,EAAQ,gBAAgB,IA3DE,WA1QjD,WAuUF8B,GAA0BA,IAAgB2C,GA7DS,kCA8D7CO,EAASD,GAAgB/E,EAAQM,EAAMmD,IA9DM,QAgEnDuB,EAASf,GAAgBjE,EAAQ,gBAAgB,IAhEE,2DAoE3DgF,EAASlE,EAAW,EAAD,KACnBkE,EAASf,GAAgBjE,EAAQ,gBAAgB,IArEU,2DAA5C,0DMpqBZgJ,EApCG,SAAC,GAA8D,IAA5DhJ,EAA2D,EAA3DA,OAAQO,EAAmD,EAAnDA,OAAQuL,EAA2C,EAA3CA,WAAY7I,EAA+B,EAA/BA,YAAagI,EAAkB,EAAlBA,YAAkB,EAE9C/N,oBAAS,GAFqC,mBAErE6O,EAFqE,KAEzD9B,EAFyD,KAItE+B,EAAY,kBAAM/B,GAAQ,IAmB1BgC,EATa,WAEf,IADA,IAAIA,EAAY,GACPP,EAAI,EAAGA,GAAKI,EAAYJ,IAAK,CAClC,IAAMtD,EAAK,4BAAQhK,MAAOsN,EAAG/M,IAAK+M,GAAIA,GACtCO,EAAUpE,KAAKO,GAEnB,OAAO6D,EAGOC,GAElB,OAAIH,EACA,4BAAQ5M,WAAS,EACbD,OAAQ8M,EACR/M,UAvBW,SAAChB,GAA0B,KAAdA,EAAEW,SAAgBoN,KAwB1ChN,SAtBgB,SAACf,GACrB,IAAMkN,EAAgBlN,EAAEE,cAAcC,MAEtC6M,EAAYjL,EAAQO,EADJ0C,EAAc,EACOkI,GACrCa,KAmBItB,aAAczH,GAAcgJ,GAG7B,0BAAMxO,UAAWH,KAAO6O,UAAWzO,QA9BxB,kBAAMuM,GAAQ,KA8BzB,IAAyDhH,EAAzD,UCoBI+F,eAAQ,KAAM,CAAC4B,WPqmBJ,SAAC5K,EAAQO,EAAQ6L,GAAjB,8CAA+B,WAAMpH,EAAUM,GAAhB,iCAAAL,EAAA,6DAG/CoH,EAAa/G,IAAWC,IAAIxE,MAAMyE,MAAM,SAACuE,GAAD,OAAUA,EAAK9H,KAAOjC,KAC5DM,EAAsB+L,EAAtB/L,KAAMwB,EAAgBuK,EAAhBvK,YACRwK,EAAcD,EAAWzK,MAAM8B,OAC/B6I,EAAaF,EAAWzK,MAAM4D,MAAM,SAACuE,GAAD,OAAUA,EAAK9H,KAAO1B,KAC1DiM,EAP+C,eAO5BD,EAP4B,GAObH,GAExCpH,EAAUR,GAAgBxE,EAAOO,EAAQ,iBAAiB,IATL,kBAYxBT,EAAeE,EAAQO,EAAQiM,GAZP,UAad,KAD7B9G,EAZ2C,QAalCP,KAAK8D,WAb6B,oBAczCnH,IAAgBC,GAdyB,iBAezCiD,GAxPMhC,EAwPgB0C,EAAWP,KAAKA,KAAK4E,KAxP3B,CAAC3K,KAAMiE,GAAaL,UAyOK,yCAiBhBlD,EAAgBE,GAjBA,YAiBnC4F,EAjBmC,QAkBzBT,KAAKpG,MAlBoB,oBAmB/B6C,EAAQgE,EAAWT,KAAKC,MACxB3B,EAAS3B,IAAgB2C,GACzBC,GACAA,GAEc,IAAhB4H,GAA8B,IAAThM,QAAmC+K,IAArBe,EAAU3I,OAxBZ,iBAyBjCuB,EAASH,GAAkB7E,EAAQM,EAAO,EAAGsB,EAAO6B,IAzBnB,2BA0BV,IAAhB6I,GAA8B,IAAThM,QAAmC+K,IAArBe,EAAU3I,OA1BnB,kCA2B3BuB,EAASK,GAAgBrF,EAAQ,IA3BN,QA4BjCgF,EAASL,GAAiB3E,EAAQ+B,KA5BD,wBA8BjCiD,EAASH,GAAkB7E,EAAQM,EAAMsB,EAAO6B,IA9Bf,QAkCjDuB,EAASR,GAAgBxE,EAAQO,EAAQ,iBAAiB,IAlCT,kDAoCjDyE,EAASlE,EAAW,EAAD,KACnBkE,EAASR,GAAgBxE,EAAQO,EAAQ,iBAAiB,IArCT,kCAzOpC,IAACyC,IAyOmC,qBAA/B,yDOrmBgByJ,gBP8iBX,SAACzM,EAAQO,GAAT,8CAAoB,WAAMyE,EAAUM,GAAhB,+BAAAL,EAAA,6DAGzCoH,EAAa/G,IAAWC,IAAIxE,MAAMyE,MAAM,SAACuE,GAAD,OAAUA,EAAK9H,KAAOjC,KAC7DM,EAA8C+L,EAA9C/L,KAAMwB,EAAwCuK,EAAxCvK,YAAagB,EAA2BuJ,EAA3BvJ,WAAYxB,EAAe+K,EAAf/K,YAChCgL,EAAcD,EAAWzK,MAAM8B,OAC/BgJ,EAAa5J,EAAa8I,KAAKC,KAAK/I,EAAWxB,GAAe,EAEpE0D,EAAUR,GAAgBxE,EAAOO,EAAQ,iBAAiB,IARX,kBAUpBT,EAAeE,EAAQO,GAVH,UAWV,IAXU,OAW9B4E,KAAK8D,WAXyB,sBAanB,KAAhBqD,GAAsBhM,EAAOoM,GAbM,oBAc/B5K,IAAgBC,GAde,kCAezBiD,EAASK,GAAgBrF,EAAQM,IAfR,uCAiBzBmD,EAAS3B,IAAgB2C,GACzBC,GACAA,GAnByB,UAoBzBM,EAASD,GAAgB/E,EAAQM,EAAMmD,IApBd,WAwBnB,IAAhB6I,GAA8B,IAAThM,EAxBc,oBAyB/BwB,IAAgBC,GAzBe,kCA0BzBiD,EAASK,GAAgBrF,EAAQM,EAAO,IA1Bf,uCA4BzBmD,EAAS3B,IAAgB2C,GACzBC,GACAA,GA9ByB,UA+BzBM,EAASD,GAAgB/E,EAAQM,EAAO,EAAGmD,IA/BlB,WAoCnB,IAAhB6I,GAA8B,IAAThM,GAAcwB,IAAgBC,GApChB,kCAqC7BiD,EAASK,GAAgBrF,EAAQ,IArCJ,QAsCnCgF,EAASL,GAAiB3E,EAAQ+B,KAtCC,WAyCnCD,IAAgBC,GAzCmB,kCA0C7BiD,EAAST,GAAWvE,EAAQO,EAAQD,IA1CP,iDA4C7B0E,EAASF,GAAe9E,EAAQO,EAAQD,IA5CX,QA+CvC0E,EAASR,GAAgBxE,EAAQO,EAAQ,iBAAiB,IA/CnB,kDAiD3CyE,EAASlE,EAAW,EAAD,KACnBkE,EAASR,GAAgBxE,EAAQO,EAAQ,iBAAiB,IAlDf,0DAApB,0DO9iBhByI,EAhDE,SAAC/L,GAAW,IAAD,EAEoDA,EAAM+F,KAAtEzC,EAFY,EAEhB0B,GAAYwB,EAFI,EAEJA,OAAQR,EAFJ,EAEIA,YAAaqH,EAFjB,EAEiBA,SAAUrK,EAF3B,EAE2BA,MAAO0M,EAFlC,EAEkCA,cAClD3M,EAAuB/C,EAAvB+C,OAAQ8L,EAAe7O,EAAf6O,WAKVlB,EAAa,SAACwB,GAAD,OAAenP,EAAM2N,WAAW5K,EAAQO,EAAQ6L,IAWnE,OACI,yBAAK3O,UAAWH,KAAOsP,eACnB,yBAAKnP,UAAWgG,EAASnG,KAAOuP,WAAa,IAEzC,2BACIpP,UAAWH,KAAOwP,YAClB9N,SAfM,SAACf,GACnB,IAAM8O,EAAY9O,EAAEE,cAAc6O,QAC5BtI,GACAA,GACNkG,EAAW,CAAEnH,OAAQsJ,KAYT3N,KAAK,WACL4N,QAASvJ,IAEb,kBAAC,GAAD,CAAWzD,OAAQA,EAAQO,OAAQA,EAC/B0C,YAAaA,EAAa6I,WAAYA,IAC1C,kBAAC,GAAD,CAAW7L,MAAOA,EAAO2K,WAAYA,IACrC,kBAAC,GAAD,CAAcN,SAAUA,EAAUM,WAAYA,KAG5C+B,GACK,uBAAIlP,UAAW,eAAiBH,KAAOsM,cAAelM,QA9BtD,kBAAMT,EAAMwP,gBAAgBzM,EAAQO,MA+B1CoM,GACM,uBAAIlP,UAAW,eAAiBH,KAAOsM,iBACvC,kBAAC,GAtBA,CAAE3D,KAAM,kBAAmBF,OAAQ,aCT5CkH,GAfG,SAAC,GAA4B,IAA1BrL,EAAyB,EAAzBA,MAAUsL,EAAe,0BAEpCC,EAAavL,EAAMH,KAAI,SAACuB,GAAD,OACzB,kBAAC,GAAD,eAAUrE,IAAKqE,EAAKf,GAAIe,KAAMA,GAAWkK,OAI7C,OACI,yBAAKzP,UAAWH,KAAO8P,WAClBD,I,iDCLPE,G,2MAGFC,mBAAqB,kBAAM,EAAKpP,SAAS,CAAEqP,WAAW,K,EAEtD1P,MAAQ,CACJ0P,WAAW,G,EAGfC,WAAa,kBAAM,EAAKtP,SAAS,CAAEqP,WAAY,EAAK1P,MAAM0P,a,EAE1DE,eAAiB,SAACtC,GAAmB,IAAD,EACgB,EAAKlO,MAA7C+C,EADwB,EACxBA,OAAekL,EADS,EAChBrJ,OAChB6L,EAFgC,EACAA,aACpB1N,EAAQkL,EAASC,GAC7B,EAAKqC,c,wEAIC,IAAD,SAEyB1O,KAAK7B,MAA3B0Q,EAFH,EAEGA,WAAY9L,EAFf,EAEeA,MAad+L,EAXc,WAEhB,IADA,IAAIA,EAAW,GADO,WAEblC,GACL,IACMmC,EAAenC,EAAI,IAAO7J,EAC1BvE,KAAOwQ,YAAcxQ,KAAOwQ,YAAc,IAAMxQ,KAAOyQ,OACvDzN,EAAO,4BAAQ7C,UAAWoQ,EAAanQ,QAH7B,kBAAM,EAAK+P,eAAe/B,IAGqB/M,IAAK+M,GAAIA,GACxEkC,EAAS/F,KAAKvH,IALToL,EAAI,EAAGA,GAAKiC,EAAYjC,IAAM,EAA9BA,GAOT,OAAOkC,EAEMI,GAEXC,EAAgBnP,KAAKjB,MAAM0P,UAAYjQ,KAAO4Q,QAAU,GAE9D,OACI,yBAAKzQ,UAAWH,KAAO6Q,WACnB,4BAAQ1Q,UAAWwQ,EAAevQ,QAASoB,KAAK0O,YAC3C3L,EAAQ,EAAI,IAAM8L,GAEtB7O,KAAKjB,MAAM0P,WACL,yBAAM9P,UAAWH,KAAO8Q,UAAWR,Q,GA3ClCtO,IAAMC,WAkDfwJ,sBACXC,YAAQ,KAAM,CAAE0E,YT6SO,SAAC1N,EAAQkL,EAASC,GAAlB,8CAAoC,WAAMnG,EAAUM,GAAhB,uBAAAL,EAAA,yDAIrDsG,EAAa,WAGf,OAAgB,OAAZH,GAAgC,IAAZF,EAAsB,KAC9B,OAAZE,EAAyB9F,IAAWC,IAAIvE,WAAWkK,EAAQ,GAG/C,IAAZE,EAAsB,KACtBA,IAAYF,EAAgB5F,IAAWC,IAAIvE,WAAWoK,EAAQ,GAC9DA,GAAWF,EAAgB5F,IAAWC,IAAIvE,WAAWoK,QAAzD,GAGEiD,EAAoB,WACtB,IAAMtN,EAAK,YAAOuE,IAAWC,IAAIxE,OACjC,GAAIqK,EAAUF,EAAS,CAEnB,IADA,IAAMoD,EAAWvN,EAAMmK,GACdQ,EAAIR,EAAQ,EAAGQ,GAAKN,EAASM,IAClC3K,EAAM2K,EAAE,GAAK3K,EAAM2K,GAGvB,OADA3K,EAAMqK,GAAWkD,EACVvN,EAEX,GAAIqK,EAAUF,EAAS,CAEnB,IADA,IAAMoD,EAAWvN,EAAMmK,GACdQ,EAAIR,EAASQ,EAAIN,EAASM,IAC/B3K,EAAM2K,GAAK3K,EAAM2K,EAAE,GAGvB,OADA3K,EAAMqK,GAAWkD,EACVvN,EAEX,OAAOA,GAGM,QAnCXqK,OAAsCC,IAA5BF,GAA2CA,EAAgB,EAAI,OAmCtDC,KAAaF,EArCqB,wBAsCjD9K,EAAiBmL,IACjBjJ,EAAiB+L,IAvCgC,SA0CnDrJ,EAAShB,IAAgB,IA1C0B,UA2C5BlE,EAAgBE,EAAQI,GA3CI,QA4ClB,IA5CkB,OA4CtC+E,KAAK8D,aACdjE,EAASZ,GAAc9B,IACvB0C,EAAShB,IAAgB,KA9CsB,kDAiDnDgB,EAASlE,EAAW,EAAD,KACnBkE,EAAShB,IAAgB,IAlD0B,0DAApC,2DS5SvBuK,KAFWxF,CAGbsE,I,oBCrDImB,G,2MAGFlB,mBAAqB,kBAAM,EAAKpP,SAAS,CAAEV,UAAU,K,EAErDK,MAAQ,CACJL,UAAU,G,EAGdiR,cAAgB,kBAAM,EAAKvQ,SAAS,CAAEV,UAAW,EAAKK,MAAML,Y,wEAElD,IAAD,EAE6DsB,KAAK7B,MAA/D+C,EAFH,EAEGA,OAAQ8B,EAFX,EAEWA,YAAaE,EAFxB,EAEwBA,iBAAkB0M,EAF1C,EAE0CA,eAEzCC,EAAY7M,IAAgBC,GAAQzE,KAAO4Q,QAAU,GACrDU,EV4aQ,WU5aO9M,EAAyBxE,KAAO4Q,QAAU,GACzDW,EAAkB/M,IAAgB2C,GAAYnH,KAAO4Q,QAAU,GAc/DY,EACFhQ,KAAKjB,MAAML,SAAWF,KAAOyR,YAAczR,KAAOyR,YAAc,IAAMzR,KAAO4Q,QAEjF,OACI,yBAAKzQ,UAAWH,KAAO0R,cACnB,4BAAQvR,UAAWqR,EAAmBpR,QAASoB,KAAK2P,eAjB7C,CAAE1M,MAAO,MAAO0C,UAAW,YAAawK,OAAQ,UAkB5CnN,KACThD,KAAKjB,MAAML,UACT,yBAAKC,UAAWH,KAAO4R,eACnB,4BAAQxR,QAnBJ,WACZoE,IAAgBC,IAAO2M,EAAe1O,EAAQ+B,KAmBlCtE,UAAWkR,EAAWQ,SAAUnN,GADpC,OAEA,4BAAQtE,QAlBE,WAClBoE,IAAgB2C,IAAWiK,EAAe1O,EAAQyE,KAkBtChH,UAAWoR,EAAiBM,SAAUnN,GAD1C,aAEA,4BAAQtE,QAjBD,WViaT,WUhaNoE,GAAwB4M,EAAe1O,EVgajC,WU/YMvC,UAAWmR,EAAcO,SAAUnN,GADvC,gB,GA5CG1C,IAAMC,WAsDlBwJ,sBACXC,YAAQ,KAAM,CAAE0F,eV6YU,SAAC1O,EAAQ8B,GAAT,OAAyB,SAACkD,EAAUM,GAI9D,IAAM+G,EAAa/G,IAAWC,IAAIxE,MAAMyE,MAAK,SAAC4J,GAAD,OAAOA,EAAEnN,KAAOjC,KAG7D,GAFmBqM,EAAWvK,cAEX2C,GAAW,CAC1B,IACMV,EAAkC,IADlBsI,EAAWzK,MAAM+I,WAAU,SAACgB,GAAD,OAAOA,EAAElI,SAAWiB,OACI,IAA5B2H,EAAWzK,MAAM8B,OACxD,KACA2I,EAAWzK,MAAM,GAAGK,GAC1B+C,EAASJ,GAAa5E,EAAQ+D,IAIlCiB,EAASa,GAAa7F,EAAQ8B,EAAa,IAI3CkD,EAAUL,GAAiB3E,EAAQ8B,QUhanCyM,KAFWxF,CAGbyF,I,oBC5BaxF,eAAQ,KAAM,CAAEnD,iBAAhBmD,EA/BI,SAAC,GAA2D,IAA1DhJ,EAAyD,EAAzDA,OAAQ8B,EAAiD,EAAjDA,YAAaxB,EAAoC,EAApCA,KAAMoM,EAA8B,EAA9BA,WAAY7G,EAAkB,EAAlBA,aAAkB,EAG1C3I,oBAAS,GAHiC,mBAGnEiS,EAHmE,KAGzDE,EAHyD,KAI1EC,qBAAU,kBAAMD,GAAY,KAAQ,CAAC/O,IAsBrC,OACI,yBAAK7C,UAAWH,KAAOiS,iBArBL,WAElB,IADA,IAAMC,EAAa,GADK,WAEd9D,GACN,IAKM+D,IAAgB/D,IAAMpL,IAAQ6O,GAC9BO,EAAYhE,IAAMpL,EAAN,UAAgBhD,KAAOqS,SAAvB,YAAmCrS,KAAOyQ,QAAWzQ,KAAOqS,SAExEA,EACF,4BAAQhR,IAAK+M,EAAGyD,SAAUM,EACtBhS,UAAYiS,EAAYhS,QAVhB,WACZmI,EAAa7F,EAAQ8B,EAAa4J,GAClC2D,GAAY,KAQsC3D,GACtD8D,EAAW3H,KAAK8H,IAZVjE,EAAI,EAAGA,GAAKgB,EAAYhB,IAAO,EAA/BA,GAcV,OAAO8D,EAKmCI,OCYnC1G,gBApCI,SAACjM,GAAW,IAEnB+C,EACgD/C,EADhD+C,OAAQ8B,EACwC7E,EADxC6E,YAAa6L,EAC2B1Q,EAD3B0Q,WAAY9L,EACe5E,EADf4E,MACrCiB,EAAoD7F,EAApD6F,WAAYxB,EAAwCrE,EAAxCqE,YAAahB,EAA2BrD,EAA3BqD,KAAM0B,EAAqB/E,EAArB+E,iBAM7B0K,EAAa5J,EAAa8I,KAAKC,KAAK/I,EAAaxB,GAAe,EAGhEiM,EAAgD,MAApCtQ,EAAMyK,QAAQC,SAASC,SAIzC,OACI,yBAAKnK,UAAWH,KAAOuS,aACjBnD,EAAa,GACR,kBAAC,GAAD,CAAYpM,KAAMA,EAAMoM,WAAYA,EAC/B1M,OAAQA,EAAQ8B,YAAaA,IAGzC,kBAAC,GAAD,CAAc9B,OAAQA,EAAQ8B,YAAaA,EACvCE,iBAAkBA,IAGrBuL,GAA4B,IAAfI,GACP,kBAAC,GAAD,CAAW9L,MAAOA,EAAO8L,WAAYA,EAAY3N,OAAQA,IAC/DgC,GAAoB,kBAAC,GAxBV,CAChBiE,KAAM,kBAAmBF,OAAQ,OAAQ6C,SAAU,WAAYC,OAAQ,MAAOC,MAAO,YCyC9EgH,G,2MA3CXC,OAAS,WAAO,IAAD,EACuC,EAAK9S,MAA/C0Q,EADG,EACHA,WAAYxF,EADT,EACSA,WAAYhH,EADrB,EACqBA,cADrB,EAI0B,EAAKlE,MAAMyE,KAFxCzB,EAFG,EAEHA,MAAOgC,EAFJ,EAEIA,GAAI3B,EAFR,EAEQA,KAAMwC,EAFd,EAEcA,WAAYxB,EAF1B,EAE0BA,YAAaM,EAFvC,EAEuCA,MAAOgC,EAF9C,EAE8CA,aACrD/B,EAHO,EAGPA,MAAOC,EAHA,EAGAA,YAAa4G,EAHb,EAGaA,aAAcC,EAH3B,EAG2BA,cAAeY,EAH1C,EAG0CA,aACjDvH,EAJO,EAIPA,iBAAkBe,EAJX,EAIWA,WAChB+I,EAAa/I,EAAaA,EAAWW,OAAS,KAGpD,OACI,yBAAKjG,UAAWH,IAAO0S,UACnB,6BAASvS,UAAWH,IAAO2S,kBACvB,kBAAC,GAAD,CACIhQ,MAAUA,EACVD,OAAWiC,EACXH,YAAgBA,EAChBxB,KAASA,EACTa,cAAeA,EACfyC,aAAgBA,EAChBd,WAAYA,EACZqF,WAAYA,EACZO,aAAgBA,EAChBC,cAAeA,EACfY,aAAcA,IAClB,kBAAC,GAAD,CACI3H,MAAOA,EACP5B,OAAQiC,EACR6J,WAAYA,KAGpB,kBAAC,GAAD,CACI9L,OAAQiC,EACR3B,KAAQA,EACRuB,MAAOA,EACP8L,WAAYA,EACZ7L,YAAgBA,EAChBR,YAAeA,EACfwB,WAAYA,EACZd,iBAAkBA,M,mFAzC9BlD,KAAK7B,MAAMiT,aAAapR,KAAK7B,MAAMyE,KAAKO,Q,GAHzB3C,IAAMC,W,wCCOd2J,gBARE,SAACjM,GACd,OACI,yBAAKQ,UAAWH,KAAO6S,UACnB,4CAAiB,kCAAQlT,EAAM0K,SAASC,SAAvB,KAAjB,4BCKNwI,G,2MAOFF,aAAe,SAAClQ,GAAD,OAAY,EAAK/C,MAAMiT,aAAalQ,I,mFAJ/ClB,KAAK7B,MAAMoT,iB,+BAOL,IAAD,OAEClI,EAAarJ,KAAK7B,MAAM8D,MAAMU,KAAI,SAACC,GAAD,MAAW,CAACzB,MAAOyB,EAAKzB,MAAOgC,GAAIP,EAAKO,OAG1EqO,EAAcxR,KAAK7B,MAAM8D,MAAMU,KAAI,SAACC,GAAS,IACvCP,EAAkB,EAAKlE,MAAvBkE,cACFoP,EAAO7O,EAAKzB,MAAM6H,QAAQ,WAAY,KAC5C,OACA,kBAAC,IAAD,CAAOyI,KAAI,WAAMA,GAAQC,OAAK,EAAC7R,IAAK+C,EAAKO,GAAI8N,OAAQ,kBACjD,kBAAC,GAAD,CAAUrO,KAAMA,EAAM/C,IAAK+C,EAAKO,GAAId,cAAeA,EAC/C+O,aAAc,EAAKA,aAAc/H,WAAYA,UAKnDsI,EAAW3R,KAAK7B,MAAM8D,MAAMU,KAAI,SAACC,GAAU,IAAD,EACN,EAAKzE,MAAnC0Q,EADoC,EACpCA,WAAYxM,EADwB,EACxBA,cACpB,OACI,kBAAC,GAAD,CAAUO,KAAMA,EAAM/C,IAAK+C,EAAKO,GAAIkG,WAAYA,EAAYwF,WAAYA,EACpEuC,aAAc,EAAKA,aAAc/O,cAAeA,OAItDuP,EAAgB5R,KAAK7B,MAAM8D,MAAMU,KAAK,SAAEC,GAC1C,IAAMiP,EAAOjP,EAAKzB,MAAM6H,QAAQ,WAAY,KAC5C,OACI,wBAAInJ,IAAK+C,EAAKO,IAAI,kBAAC,IAAD,CAAS2O,GAAE,WAAMD,IAASjP,EAAKzB,WA0BnD4Q,EAAe/R,KAAK7B,MAAM8B,MAAQD,KAAK7B,MAAM8B,MAAM+R,QAAU,WAKnE,OACI,yBAAKrT,UAAWH,IAAOiI,KACnB,yBAAK9H,UAAWH,IAAOyT,YAClBjS,KAAK7B,MAAM8B,OAAS,0BAAMtB,UAAWH,IAAOyB,OAAQ8R,GACnD/R,KAAK7B,MAAMiE,cAAgB,kBAAC,GAblB,CACpB0H,SAAU,WAAY7C,OAAQ,OAAQiL,IAAK,SAAUlI,MAAO,MAAO7C,KAAM,UAcjE,kBAAC,IAAD,CAAS2K,GAAG,IAAIJ,OAAK,EAAC/S,UAAWH,IAAO2T,WACpC,4BACI,yBAAKC,IAAKC,KAAMC,IAAI,OAAO3T,UAAWH,IAAO+T,kBADjD,kBAKHvS,KAAK7B,MAAM8D,MAAM2C,OAAS5E,KAAK7B,MAAMmE,eAC/B,yBAAK3D,UAAWH,IAAOgU,iBAClB,kBAAC,EAAD,CAAa/S,QA9BrB,SAAC0B,GACb,EAAKhD,MAAMsU,QAAQtR,GAC0B,MAAzC,EAAKhD,MAAMyK,QAAQC,SAASC,UAC5B,EAAK3K,MAAMyK,QAAQG,KAAK,MA2BuBlK,KAhBnD,qHAiBwBW,eA1CA,SAACD,GAEzB,IAAM6J,EAAcC,EAAW3C,MAAK,SAAC4C,GACjC,OAAQA,EAAGnI,MAAMoI,gBAAkBhK,EAASgK,eAAiBD,EAAGnG,KAAO,EAAKhF,MAAM+C,UAGtF,GAAwB,KAApB3B,EAASiK,QAAiBjK,EAASqF,OAAS,KAAOrF,EAASoJ,MAAM,MAAQS,EAC1E,OAAO,GAmCkD7I,YAAY,eAGrE,yBAAK5B,UAAWH,IAAOkU,uBACnB,4BAAKd,IAET,yBAAKjT,UAAWH,IAAOmU,WACnB,kBAAC,IAAD,KACKnB,EACD,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GAAEC,GACvB,kBAAC,IAAD,CAAOiB,UAAWC,Y,GA7FxBrS,IAAMC,WAkHTwJ,sBACXC,aAdoB,SAACnL,GACrB,MAAO,CACHkD,MAAOlD,EAAM0H,IAAIxE,MACjB4M,WAAY9P,EAAM0H,IAAIxE,MAAM2C,OAC5BxC,aAAcrD,EAAM0H,IAAItE,cAAcC,aACtCE,cAAevD,EAAM0H,IAAInE,cACzBD,cAAetD,EAAM0H,IAAIpE,cACzBpC,MAAOlB,EAAM+T,OAAO7S,SAOC,CAACsR,afoKF,yDAAM,WAAMrL,GAAN,eAAAC,EAAA,sEAE1BD,EAAShB,IAAgB,IAFC,SAGHlE,IAHG,OAGpBoF,EAHoB,OAI1BF,GANgBjE,EAMQmE,EAASC,KANN,CAAE/F,KAAMoC,GAAeT,WAOlDiE,EAAShB,IAAgB,IALC,gDAO1BgB,EAASlE,EAAW,EAAD,KACnBkE,EAAShB,IAAgB,IARC,kCAFX,IAACjD,IAEU,oBAAN,uDepKgBmP,afsShB,SAAClQ,GAAD,8CAAY,WAAMgF,GAAN,eAAAC,EAAA,+EAETnF,EAAgBE,GAFP,OAE1BkF,EAF0B,OAGhCF,EAASX,GAAerE,EAAQkF,EAASC,KAAKC,MAAOF,EAASC,KAAKrC,aAHnC,gDAKhCkC,EAASlE,EAAW,EAAD,KALa,yDAAZ,uDetS8ByQ,QfoLnC,SAACtR,GAAD,8CAAW,WAAM+E,GAAN,eAAAC,EAAA,sEAE1BD,EAAShB,IAAgB,IAFC,SAGHlE,EAAYG,GAHT,OAGpBiF,EAHoB,OAI1BF,GANWtD,EAMQwD,EAASC,KAAKA,KAAK4E,KANjB,CAAC3K,KAAM8C,GAAUR,UAOtCsD,EAAShB,IAAgB,IALC,gDAO1BgB,EAASlE,EAAW,EAAD,KACnBkE,EAAShB,IAAgB,IARC,kCAFhB,IAACtC,IAEe,oBAAX,yDenLnBwH,IAFWH,CAGbqH,I,kBC3HIyB,GAAeC,2BAAgB,CACjCvM,IAAKlE,GACLuQ,OAAQlR,IAMGqR,GAFDC,uBAAYH,GAAcI,+BAAoBC,2BAAgBC,QCJ5EC,IAASrC,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUgC,MAASA,IACf,kBAAC,GAAD,QAEOM,SAASC,eAAe,W","file":"static/js/main.fc856300.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"App_error__24151\",\"app\":\"App_app__3Uwog\",\"app_title\":\"App_app_title___CSMS\",\"active\":\"App_active__2jTm6\",\"app_addItemForm\":\"App_app_addItemForm__3kjE9\",\"app_header\":\"App_app_header__2ML7u\",\"app_header_navigation\":\"App_app_header_navigation__2sBXL\",\"app_lists\":\"App_app_lists__XJiJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusFilter\":\"StatusFilter_statusFilter__3SB93\",\"pressed\":\"StatusFilter_pressed__1w_GI\",\"filterButtons\":\"StatusFilter_filterButtons__2KFkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listOrder\":\"ListOrder_listOrder__3DpKe\",\"pressed\":\"ListOrder_pressed__2Ajuu\",\"orderBox\":\"ListOrder_orderBox__1W92q\",\"orderNumber\":\"ListOrder_orderNumber__SESdU\",\"active\":\"ListOrder_active__1HKTR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList_task\":\"ListTask_todoList_task__3IMxd\",\"taskIsDone\":\"ListTask_taskIsDone__2i1Al\",\"delete_button\":\"ListTask_delete_button__2ymOr\",\"isDoneCheck\":\"ListTask_isDoneCheck__2OTrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_header\":\"ListHeader_list_header__zEOiY\",\"list_header_add_form\":\"ListHeader_list_header_add_form__24FzJ\",\"delete_button\":\"ListHeader_delete_button__1N4Pl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksPagesLinks\":\"PagesLinks_tasksPagesLinks__2PUSo\",\"pageLink\":\"PagesLinks_pageLink__10VUZ\",\"active\":\"PagesLinks_active__T9EFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_title__input\":\"ListTitle_list_title__input__3Aoo0\",\"error\":\"ListTitle_error__3wcGy\",\"list_title\":\"ListTitle_list_title__s4OXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskPriority\":\"TaskPriority_taskPriority__2ACAr\",\"Middle\":\"TaskPriority_Middle__1hwuy\",\"Low\":\"TaskPriority_Low__3JO7V\",\"High\":\"TaskPriority_High__3FfI-\",\"Urgent\":\"TaskPriority_Urgent__2y1eq\",\"Later\":\"TaskPriority_Later__NpmW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskTitle\":\"TaskTitle_taskTitle__2cTEe\",\"error\":\"TaskTitle_error__3WKI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList_wrapper\":\"TodoList_todoList_wrapper__17l1B\",\"todoList\":\"TodoList_todoList__XmGvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newItemForm\":\"AddItemForm_newItemForm__3gOv1\",\"error\":\"AddItemForm_error__3PDJ1\",\"delete_button\":\"AddItemForm_delete_button__2221V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Tooltip_tooltip__2Bqiy\",\"isHidden\":\"Tooltip_isHidden__3Glcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listTasks\":\"ListTasks_listTasks__q-a1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskOrder\":\"TaskOrder_taskOrder__13iIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_footer\":\"ListFooter_list_footer__qaFYD\"};","module.exports = __webpack_public_path__ + \"static/media/book.6d8795b6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404\":\"Error404_error404__1VnlC\"};","import React, { useState } from 'react'\r\nimport styles from './Tooltip.module.css'\r\n\r\n\r\nconst Tooltip = (props) => {\r\n\r\n    const [display, setDisplay] = useState(true)\r\n    const hideToollip = () => setDisplay(false)\r\n\r\n    const tooltipStyle = display ? styles.tooltip : styles.isHidden\r\n\r\n    return(\r\n        <div className={tooltipStyle} onClick={hideToollip}>\r\n            {props.hint}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tooltip","import React from 'react'\r\nimport styles from './AddItemForm.module.css'\r\nimport Tooltip from '../Tooltip/Tooltip';\r\n\r\nclass AddItemForm extends React.Component {\r\n\r\n    state = {\r\n        inputError: false,\r\n        itemTitle: ''\r\n    }\r\n\r\n    setItemTitle = (e) => {\r\n        if (this.state.inputError) this.setState({ inputError: false });\r\n        this.setState({ itemTitle: e.currentTarget.value }, () => {\r\n            const newTitle = this.state.itemTitle\r\n            const validationResult = this.props.validationFunc \r\n                ? this.props.validationFunc(newTitle) : null\r\n            if (validationResult)\r\n                this.setState({ inputError: true })\r\n        });\r\n    }\r\n\r\n    addItem = () => {\r\n        if (this.state.itemTitle === '') this.setState({ inputError: true })\r\n        else\r\n            if (!this.state.inputError) {\r\n                this.props.addItem(this.state.itemTitle);\r\n                this.setState({ itemTitle: '' })\r\n            }\r\n    }\r\n\r\n    actionOnBlur = () => {\r\n        const validationResult = this.props.validationFunc \r\n                ? this.props.validationFunc(this.state.itemTitle) : null\r\n        if (this.state.inputError && !validationResult) {\r\n            this.setState({ inputError: false })\r\n        }\r\n    }\r\n\r\n    actionOnKey = (e) => { \r\n        if (e.key === 'Enter') this.addItem()\r\n        if ( e.keyCode === 27 ) {\r\n            this.setState({ itemTitle: '', inputError: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.newItemForm}>\r\n                <input\r\n                    className={this.state.inputError ? styles.error : ''}\r\n                    onChange={this.setItemTitle}\r\n                    onKeyDown={this.actionOnKey}\r\n                    onBlur={this.actionOnBlur}\r\n                    autoFocus={true}\r\n                    type=\"text\" placeholder={this.props.placeholder} value={this.state.itemTitle} />\r\n\r\n                <button onClick={this.addItem} >Add</button>\r\n                \r\n                { this.state.inputError && <Tooltip hint={this.props.hint} /> }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItemForm;","import Axios from 'axios';\r\n\r\n\r\nconst instance = Axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/todo-lists',\r\n    withCredentials: true,\r\n    headers: { 'API-KEY': '077e296e-5c11-448c-9cff-a20ca6e66ed1' }\r\n})\r\n\r\nexport const api = {\r\n\r\n    restoreLists() {\r\n        return instance.get('')\r\n    },\r\n\r\n    updateListTitle(listId, title) {\r\n        return instance.put(`/${listId}`, { title })\r\n    },\r\n\r\n    addList(title) {\r\n        return instance.post('', { title })\r\n    },\r\n\r\n    reorderList(listId, putAfterItemId) {\r\n        return instance.put(`/${listId}/reorder`, { putAfterItemId })\r\n    },\r\n\r\n    deleteList(listId) {\r\n        return instance.delete(`/${listId}`)\r\n    },\r\n\r\n    getTasks(listId, count = 10) {\r\n        return instance.get(`/${listId}/tasks?count=${count}`)\r\n    },\r\n\r\n    getAllTasks(listId) {\r\n        return instance.get(`/${listId}/tasks?count=100`)\r\n    },\r\n\r\n    getTasksOnPage(listId, page = 1) {\r\n        return instance.get(`/${listId}/tasks?count=10&page=${page}`)\r\n    },\r\n\r\n    addTask(listId, title) {\r\n        return instance.post(`/${listId}/tasks`, { title })\r\n    },\r\n\r\n    updateTask(listId, taskId, dataObj) {\r\n        return instance.put(`/${listId}/tasks/${taskId}`, { ...dataObj })\r\n    },\r\n\r\n    deleteTask(listId, taskId) {\r\n        return instance.delete(`/${listId}/tasks/${taskId}`)\r\n    },\r\n\r\n    reorderTask(listId, taskId, putAfterItemId) {\r\n        return instance.put(`/${listId}/tasks/${taskId}/reorder`, { putAfterItemId })\r\n    }\r\n}","const initialState = {\r\n    error: null\r\n}\r\n\r\nconst errorsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n\r\n        case RESET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default errorsReducer;\r\n\r\n\r\nconst SET_ERROR = 'SET_ERROR'\r\nexport const setErrorAC = (error) => ({ type: SET_ERROR, error: error })\r\n\r\n\r\nconst RESET_ERROR = 'RESET_ERROR'\r\nexport const resetErrorAC = () => ({ type: RESET_ERROR })","import {api} from '../API/api'\r\nimport { setErrorAC } from './errorsReducer';\r\n\r\nconst initialState =  {\r\n    lists: [],  \r\n    listsOrder: [],\r\n    listsProgress: { listsLoading: false },\r\n    maxTasksCount: 33,\r\n    maxListsCount: 10,\r\n    error: null\r\n    /* lists: [\r\n        {\r\n            id: 0, title: 'Спорт', nextTaskId: 2, totalCount: 1, countOnPage: 10, filterValue: ALL_S,\r\n            page: 1, titleUpdating: false, taskIsAdding: false, listDeliting: false, footerProcessing: false,\r\n            tasksOrder: [], prevActiveID: 'some_id'\r\n            tasks: [{ id: 1, title: 'CSS', status: 0, priority: 'Middle', taskDeliting: false}]\r\n        }\r\n    ] */\r\n    };\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    const countOnPage = 10;\r\n    const renderBasis = (action.page - 1)*countOnPage +1;\r\n\r\n    switch (action.type) {\r\n\r\n  // ---------------------------List Reducers -------------------------------\r\n        \r\n        case RESTORE_LISTS:\r\n            return {\r\n                ...state,\r\n                lists: action.lists.map( (list, index) => {\r\n                    if (!list.tasks) return(\r\n                        { ...list, order: index, page: 1, countOnPage, filterValue: ALL_S, tasks: [],\r\n                            footerProcessing: false } \r\n                    )\r\n                    else return (\r\n                        { ...list, order: index, page: 1, countOnPage, filterValue: ALL_S,\r\n                            footerProcessing: false }\r\n                    )\r\n                } ),\r\n                listsOrder: action.lists.map( (list) => list.id )\r\n            }\r\n\r\n        case ADD_LIST:\r\n            const extendedList = { ...action.list, page: 1, countOnPage, filterValue: ALL_S, tasks: [] };\r\n            return {\r\n                ...state,\r\n                lists: [ extendedList, ...state.lists ].map((list, index) => ({...list, order: index}))\r\n            }\r\n\r\n        case UPDATE_LIST_TITLE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( (list) => {\r\n                    if (list.id === action.listId) return ({ ...list, title: action.title })\r\n                    else return list\r\n                } )\r\n            }\r\n\r\n        case REORDER_LIST:\r\n            return {\r\n                ...state,\r\n                lists: action.reorderedLists.map( (list, index) => ({...list, order: index }) ),\r\n                listsOrder: action.reorderedLists.map((list) => list.id)\r\n            }\r\n\r\n        case DELETE_LIST:\r\n            return {\r\n                ...state,\r\n                lists: \r\n                    state.lists\r\n                        .filter((list) => list.id !== action.listId)\r\n                        .map( (list, index) => ({...list, order: index}) )  // change list order\r\n            }\r\n\r\n        case LIST_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                listsProgress: {...state.listsProgress, listsLoading: action.value}\r\n            }\r\n\r\n        case LIST_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) return { ...list, [action.process]: action.value }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n        case SET_FILTER_VALUE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) return { ...list, filterValue: action.value }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n\r\n // ---------------------------Tasks Reducers-------------------------------\r\n       \r\n\r\n        case RESTORE_TASKS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(list => {\r\n                   if (list.id === action.listId)\r\n                        return {\r\n                            ...list,\r\n                            totalCount: action.totalCount,\r\n                            tasksOrder: !action.tasks ? [] \r\n                                : action.tasks.map((task) => task.id),\r\n                            tasks: !action.tasks ? [] \r\n                                : action.tasks.filter( (task, index) => index < countOnPage )\r\n                                    .map( (task, index) => ({...task, renderIndex: index + 1 }) )\r\n                        }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n        case SET_TASKS_PAGE:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map( (list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: action.totalCount ? action.totalCount : list.totalCount,\r\n                            page: action.page,\r\n                            tasks: action.tasks\r\n                                .map((task, index) => ({ ...task, renderIndex: renderBasis + index }))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case SET_TASKS_ORDER:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return { ...list, tasksOrder: action.tasksOrder }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: list.totalCount-1,\r\n                            tasksOrder: list.tasksOrder.filter((id) => id !== action.taskId),\r\n                            tasks:\r\n                                list.tasks.filter((task) => task.id !== action.taskId)\r\n                                    .map( (task, index) => ({ ...task, renderIndex: renderBasis + index })  )\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case UPDATE_TASK:\r\n\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.task.todoListId) {\r\n                        return {\r\n                            ...list,\r\n                            tasks: list.tasks.map((task) => {\r\n                                if (task.id === action.task.id) {\r\n                                    return { ...task, ...action.task }\r\n                                } else return task\r\n                            })\r\n                        }\r\n                    } else return list;\r\n                })\r\n            }\r\n        \r\n        case TASK_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            tasks: list.tasks.map( (task) => {\r\n                                if (task.id === action.taskId) { \r\n                                    return {...task, [action.process]:action.value}\r\n                                }\r\n                                else return task\r\n                            } )\r\n                        }\r\n                    }\r\n                    else return list\r\n                })\r\n            }\r\n\r\n\r\n// ------------------------ Filtered Tasks Reducers --------------------\r\n\r\n\r\n        case SET_FLTR_TASKS_PAGE:\r\n            const totalCount =          // get tasks count on filtered page\r\n                action.tasks.filter((task) => task.status === action.status).length;\r\n            const newTasksOrder = action.tasks\r\n                .filter((task) => task.status === action.status)\r\n                .map((task) => task.id)\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            page: action.page,\r\n                            totalCount, \r\n                            generalCount: action.tasks.length,  // general tasks count\r\n                            tasksOrder: newTasksOrder,\r\n                            tasks: action.tasks\r\n                                .filter((task) => task.status === action.status)\r\n                                .map((task, index) => ({ ...task, renderIndex: index + 1}))\r\n                                .filter((task, index) =>\r\n                                    (index >= (action.page - 1) * countOnPage && index < action.page * countOnPage))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case DELETE_FLTR_TASK:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            totalCount: list.totalCount -1,\r\n                            generalCount: list.generalCount -1,\r\n                            tasksOrder: list.tasksOrder.filter((id) => id !== action.taskId) ,\r\n                            tasks: list.tasks.filter((task) => task.id !== action.taskId)\r\n                                .map((task, index) => ({ ...task, renderIndex: renderBasis + index }))\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n        case SET_PREV_ACT_ID:\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map((list) => {\r\n                    if (list.id === action.listId) {\r\n                        return {\r\n                            ...list,\r\n                            prevActiveId: action.prevActiveId\r\n                        }\r\n                    } else return list\r\n                })\r\n            }\r\n\r\n            \r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport default appReducer;\r\n\r\n// ------------------------------ TEMPORARY ----------------------------------\r\n\r\n\r\n\r\n// --------------------------- Lists Actions -----------------------------------\r\n\r\n\r\nconst LIST_IS_LOADING = 'LIST_IS_LOADING'\r\nconst listIsLoadingAC = (value) => ({ type: LIST_IS_LOADING, value })\r\n\r\nconst LIST_IN_PROCESS = 'LIST_IN_PROCESS'\r\nconst listInProcessAC = (listId, process, value) => {\r\n    return({type: LIST_IN_PROCESS, listId, process, value})\r\n}\r\n\r\n\r\nconst RESTORE_LISTS = 'RESTORE-LISTS';\r\nconst restoreListsAC = (lists) => ({ type: RESTORE_LISTS, lists })\r\n\r\nexport const restoreLists = () => async(dispatch) => {\r\n    try {\r\n        dispatch(listIsLoadingAC(true))\r\n        const response = await api.restoreLists()\r\n        dispatch(restoreListsAC(response.data));\r\n        dispatch(listIsLoadingAC(false))\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n        dispatch(listIsLoadingAC(false))\r\n    }\r\n}\r\n\r\n\r\nconst ADD_LIST = 'ADD_LIST';\r\nconst addListAC = (list) => ({type: ADD_LIST, list})\r\n\r\nexport const addList = (title) => async(dispatch) => {\r\n    try {\r\n        dispatch(listIsLoadingAC(true))\r\n        const response = await api.addList(title)\r\n        dispatch(addListAC(response.data.data.item))\r\n        dispatch(listIsLoadingAC(false))\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n        dispatch(listIsLoadingAC(false))\r\n    }\r\n}\r\n\r\nconst UPDATE_LIST_TITLE = 'UPDATE_LIST_TITLE';\r\nconst updateListTitleAC = (listId, title) => ({ type: UPDATE_LIST_TITLE, listId, title })\r\n\r\nexport const updateListTitle = (listId, title) => async(dispatch) => {\r\n    try {\r\n        dispatch(listInProcessAC(listId, 'titleUpdating', true))\r\n        const response = await api.updateListTitle(listId, title)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(updateListTitleAC(listId, title))\r\n            dispatch(listInProcessAC(listId, 'titleUpdating', false))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n        dispatch(listInProcessAC(listId, 'titleUpdating', false))\r\n    }\r\n}\r\n\r\n\r\nconst DELETE_LIST = 'DELETE_LIST';\r\nconst deleteListAC = (listId) => ({type: DELETE_LIST, listId})\r\n\r\nexport const deleteList = (listId) => async(dispatch) => {\r\n    try {\r\n        dispatch(listInProcessAC(listId, 'listDeliting', true))\r\n        const response = await api.deleteList(listId)\r\n        if (response.data.resultCode === 0) {\r\n            await dispatch(deleteListAC(listId))\r\n        }\r\n        dispatch(listInProcessAC(listId, 'listDeliting', false))\r\n        \r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n        dispatch(listInProcessAC(listId, 'listDeliting', false))\r\n    }\r\n}\r\n\r\n\r\nconst REORDER_LIST = 'REORDER_LIST'\r\nconst reorderListAC = (reorderedLists) => ({type: REORDER_LIST, reorderedLists })\r\n\r\nexport const reorderList = (listId, currPos, nextRenderPos) => async(dispatch, getState) => {\r\n    \r\n    const nextPos = nextRenderPos !== ( null || undefined ) ? +nextRenderPos - 1 : null   //define next element position\r\n   \r\n    const getAfterId = () => {\r\n        // if nextRenderPos undefined or null element position should'n change\r\n        // this is insurence check or for case of using reorderListAC\r\n        if (nextPos === null && currPos === 0) return null\r\n        if (nextPos === null) return getState().app.listsOrder[currPos-1]\r\n        \r\n        // if next position defined find 'put after element' Id\r\n        if (nextPos === 0) return null\r\n        if (nextPos <= +currPos) return getState().app.listsOrder[nextPos-1]\r\n        if (nextPos > +currPos) return getState().app.listsOrder[nextPos]\r\n    }\r\n    \r\n    const getReorderedLists = () => {\r\n        const lists = [...getState().app.lists]\r\n        if (nextPos < currPos) {\r\n            const currList = lists[currPos]\r\n            for (let i = currPos-1; i >= nextPos; i--) {\r\n                lists[i+1] = lists[i]\r\n            }\r\n            lists[nextPos] = currList\r\n            return lists\r\n        }\r\n        if (nextPos > currPos) {\r\n            const currList = lists[currPos]\r\n            for (let i = currPos; i < nextPos; i++) {\r\n                lists[i] = lists[i+1]\r\n            }\r\n            lists[nextPos] = currList\r\n            return lists\r\n        }\r\n        return lists    // default value for unchanged lists ---> insurance check\r\n    }\r\n\r\n    if ( nextPos !== null && nextPos !== +currPos ) {\r\n        const putAfterItemId = getAfterId()              // get putAfterItemId for API request\r\n        const reorderedLists = getReorderedLists()       // get reordered lists for dispatch\r\n\r\n        try {\r\n            dispatch(listIsLoadingAC(true))\r\n            const response = await api.reorderList(listId, putAfterItemId)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(reorderListAC(reorderedLists))\r\n                dispatch(listIsLoadingAC(false))\r\n            }\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error))\r\n            dispatch(listIsLoadingAC(false))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// --------------------------- Tasks Actions -----------------------------------\r\n\r\n\r\nconst RESTORE_TASKS = 'RESTORE_TASKS';\r\nconst restoreTasksAC = (listId, tasks, totalCount) => ({ type: RESTORE_TASKS, listId, tasks, totalCount })\r\n\r\nexport const restoreTasks = (listId) => async(dispatch) => {\r\n    try {\r\n        const response = await api.getAllTasks(listId)\r\n        dispatch(restoreTasksAC(listId, response.data.items, response.data.totalCount))\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n    }\r\n}\r\n\r\nconst SET_TASKS_PAGE = 'SET_TASKS_PAGE';\r\nexport const setTasksPageAC = (listId, page, tasks, totalCount) =>\r\n    ({ type: SET_TASKS_PAGE, listId, page, tasks, totalCount })\r\n\r\nconst DELETE_TASK = 'DELETE_TASK';\r\nexport const deleteTask = (listId, taskId, page) => ({ type: DELETE_TASK, listId, taskId, page })\r\n\r\nconst UPDATE_TASK = 'UPDATE_TASK';\r\nconst updateTaskAC = (task) => ({type: UPDATE_TASK, task })\r\n\r\nconst TASK_IN_PROCESS = 'TASK_IN_PROCESS'\r\nconst taskInProcessAC = (listId, taskId, process, value) => \r\n        ({type: TASK_IN_PROCESS, listId, taskId, process, value})\r\n\r\n\r\n// ------------------------ Filtered Tasks Actions ----------------------\r\n\r\n\r\n// status filter values\r\nexport const ALL_S = 'ALL_S'\r\nexport const COMPLETED = 'COMPLETED'\r\nexport const ACTIVE = 'ACTIVE'\r\n\r\nexport const statusObj = {completed: 1, active: 0}\r\n\r\n\r\nconst SET_FILTER_VALUE = 'SET_FILTER_VALUE'\r\nconst setFilterValueAC = (listId, value) => ({type: SET_FILTER_VALUE, listId, value})\r\n\r\nexport const setFilterValue = (listId, filterValue) => (dispatch, getState) => {\r\n    \r\n    // get tasks id before the first completed task in list and save it to state\r\n    // for reorderTasks in case of filterValue === COMPLETED\r\n    const targetList = getState().app.lists.find((l) => l.id === listId)\r\n    const currFilter = targetList.filterValue\r\n\r\n    if (currFilter !== COMPLETED) {\r\n        const firstComplInd = targetList.tasks.findIndex((t) => t.status === statusObj.completed)\r\n        const prevActiveId = (firstComplInd === 0 || targetList.tasks.length === 0)\r\n            ? null\r\n            : targetList.tasks[0].id\r\n        dispatch(setPrevActId(listId, prevActiveId))\r\n    }\r\n    // <-----\r\n    \r\n    dispatch(setTasksPage(listId, filterValue, 1))  \r\n    // !!! dispatch(setTasksPage(...)) must be called before dispatch(setFelterValueAC(...))\r\n    // to get correct current filterValue in setAllTasksPage call\r\n    \r\n    dispatch( setFilterValueAC(listId, filterValue) )\r\n}\r\n\r\n\r\nconst SET_PREV_ACT_ID = 'SET_PREV_ACT_ID'\r\nconst setPrevActId = (listId, prevActiveId) => ({type: SET_PREV_ACT_ID, listId, prevActiveId})\r\n\r\nconst SET_FLTR_TASKS_PAGE = 'SET_FLTR_TASKS_PAGE';\r\nconst setFilteredPageAC = (listId, page, tasks, status) =>\r\n    ({ type: SET_FLTR_TASKS_PAGE, listId, page, tasks, status })\r\n\r\nconst DELETE_FLTR_TASK = 'DELETE_FLTR_TASK';\r\nconst deleteFltrTask = (listId, taskId, page) => ({ type: DELETE_FLTR_TASK, listId, taskId, page })\r\n\r\n\r\n\r\n// set tasks page on \"Active\" or \"Completed\" filter mode\r\nconst setFilteredPage = (listId, page, status) => async(dispatch) => {\r\n    try {\r\n        const response = await api.getAllTasks(listId)\r\n        const tasks = response.data.items;\r\n        dispatch(setFilteredPageAC(listId, page, tasks, status))\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n    }\r\n}\r\n\r\n// set tasks page on \"All\" filter mode\r\nconst setAllTasksPage = (listId, page) => async(dispatch, getState) => {\r\n    \r\n    //  get previous filterValue\r\n    const { filterValue: prevFilterVal } = getState().app.lists.find((list) => list.id === listId)\r\n\r\n    switch (prevFilterVal) {\r\n\r\n        // if previous filter was 'Active' or 'Completed' --> set new tasksOrder\r\n        case COMPLETED:\r\n        case ACTIVE:\r\n            try {\r\n                const response_1 = await api.getAllTasks(listId)\r\n                const newTasksOrder = response_1.data.items.map((task) => task.id)\r\n                dispatch(setTasksOrder(listId, newTasksOrder))\r\n                \r\n                const response_2 = await api.getTasksOnPage(listId, page)\r\n                const { items: tasks, totalCount } = response_2.data;\r\n                dispatch(setTasksPageAC(listId, page, tasks, totalCount))\r\n                break\r\n            } catch (error) {\r\n                dispatch(setErrorAC(error))\r\n                break\r\n            }\r\n\r\n\r\n        default:      // case previous filterValue === ALL_S\r\n            try {\r\n                const response = await api.getTasksOnPage(listId, page)\r\n                const { items: tasks, totalCount } = response.data;\r\n                dispatch(setTasksPageAC(listId, page, tasks, totalCount))\r\n            } catch (error) {\r\n                dispatch(setErrorAC(error))\r\n            }\r\n    }\r\n}\r\n\r\n\r\nexport const setTasksPage = (listId, filterValue, page) => async(dispatch) => {\r\n    \r\n    dispatch( listInProcessAC(listId, 'footerProcessing', true) )\r\n\r\n    let status = statusObj.active\r\n    switch (filterValue) {\r\n        \r\n        case ACTIVE:\r\n            await dispatch(setFilteredPage(listId, page, status))\r\n            dispatch(listInProcessAC(listId, 'footerProcessing', false))\r\n        break\r\n\r\n        case COMPLETED:\r\n            status = statusObj.completed\r\n            await dispatch(setFilteredPage(listId, page, status))\r\n            dispatch(listInProcessAC(listId, 'footerProcessing', false))\r\n        break\r\n\r\n        default:    //case filterValue === ALL_S\r\n            await dispatch(setAllTasksPage(listId, page))\r\n            dispatch(listInProcessAC(listId, 'footerProcessing', false))\r\n    }\r\n}\r\n\r\n\r\nexport const addTask = (listId, title) => async(dispatch, getState) => {\r\n\r\n    // get current tasksOrder\r\n    const tasksOrder = getState().app.lists.find((list) => list.id === listId).tasksOrder\r\n\r\n    dispatch(listInProcessAC(listId, 'taskIsAdding', true))\r\n    try {\r\n        const response = await api.addTask(listId, title)\r\n        if (response.data.resultCode === 0) {\r\n            const newTaskId = response.data.data.item.id\r\n            const newTasksOrder = [newTaskId, ...tasksOrder]\r\n            dispatch(setTasksOrder(listId, newTasksOrder))\r\n            await dispatch(setAllTasksPage(listId, 1))\r\n            dispatch(setFilterValueAC(listId, ALL_S))\r\n            dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n        dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n    }\r\n}\r\n\r\n\r\nexport const addTaskActive = (listId, title) => async(dispatch, getState) => {\r\n\r\n    // get current tasksOrder\r\n    const tasksOrder = getState().app.lists.find((list) => list.id === listId).tasksOrder\r\n\r\n    dispatch( listInProcessAC(listId, 'taskIsAdding', true) )\r\n    try {\r\n        const response_1 = await api.addTask(listId, title)\r\n        if (response_1.data.resultCode === 0) {\r\n            const newTaskId = response_1.data.data.item.id\r\n            const newTasksOrder = [newTaskId, ...tasksOrder]\r\n            dispatch(setTasksOrder(listId, newTasksOrder))\r\n            const response_2 = await api.getAllTasks(listId)\r\n            const status = statusObj.active\r\n            const tasks = response_2.data.items;\r\n            dispatch(setFilteredPageAC(listId, 1, tasks, status))\r\n            dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n        dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n    }\r\n}\r\n\r\nexport const delTaskFromPage = (listId, taskId) => async(dispatch, getState) => {\r\n    \r\n    // extract the target object from lists array & get all required parametrs\r\n    const targetList = getState().app.lists.find( (item) => item.id === listId )\r\n    const {page, filterValue, totalCount, countOnPage} = targetList\r\n    const tasksLength = targetList.tasks.length\r\n    const pagesCount = totalCount ? Math.ceil(totalCount/countOnPage) : 1\r\n    \r\n    dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', true) )\r\n    try {\r\n        const response = await api.deleteTask(listId, taskId)\r\n        if (response.data.resultCode === 0) {\r\n            // delete task from not last page\r\n            if (tasksLength === 10 && page < pagesCount) {\r\n                if (filterValue === ALL_S) {\r\n                    await dispatch(setAllTasksPage(listId, page))\r\n                } else {\r\n                    const status = filterValue === COMPLETED\r\n                        ? statusObj.completed\r\n                        : statusObj.active\r\n                    await dispatch(setFilteredPage(listId, page, status))\r\n                }\r\n            }\r\n            // delete last task from not first page\r\n            if (tasksLength === 1 && page !== 1) {\r\n                if (filterValue === ALL_S) {\r\n                    await dispatch(setAllTasksPage(listId, page - 1))\r\n                } else {\r\n                    const status = filterValue === COMPLETED\r\n                        ? statusObj.completed\r\n                        : statusObj.active\r\n                    await dispatch(setFilteredPage(listId, page - 1, status))\r\n                }\r\n\r\n            }\r\n            // delete last task from first page\r\n            if (tasksLength === 1 && page === 1 && filterValue !== ALL_S) {\r\n                await dispatch(setAllTasksPage(listId, 1))\r\n                dispatch(setFilterValueAC(listId, ALL_S))\r\n            }\r\n            // regular delete task case -> must be located at the end of chain\r\n            if (filterValue === ALL_S) {\r\n                await dispatch(deleteTask(listId, taskId, page))\r\n            } else {\r\n                await dispatch(deleteFltrTask(listId, taskId, page))\r\n            }\r\n        }\r\n            dispatch(taskInProcessAC(listId, taskId, 'taskInProcess', false))\r\n    } catch(error) {\r\n        dispatch(setErrorAC(error))\r\n        dispatch(taskInProcessAC(listId, taskId, 'taskInProcess', false))\r\n    }\r\n}\r\n\r\n\r\nexport const updateTask = (listId, taskId, updateObj) => async(dispatch, getState) => {\r\n\r\n    // extract the target object from lists array & get all required parametrs\r\n    const targetList = getState().app.lists.find( (item) => item.id === listId )\r\n    const { page, filterValue } = targetList\r\n    const tasksLength = targetList.tasks.length\r\n    const targetTask = targetList.tasks.find( (item) => item.id === taskId )\r\n    const updatedTask = { ...targetTask, ...updateObj }\r\n    \r\n    dispatch( taskInProcessAC(listId,taskId, 'taskInProcess', true) )\r\n  \r\n    try {\r\n        const response_1 = await api.updateTask(listId, taskId, updatedTask)\r\n        if (response_1.data.resultCode === 0) {\r\n            if (filterValue === ALL_S) {\r\n                dispatch(updateTaskAC(response_1.data.data.item))\r\n            } else {\r\n                const response_2 = await api.getAllTasks(listId)\r\n                if (!response_2.data.error) {\r\n                    const tasks = response_2.data.items;\r\n                    const status = filterValue === COMPLETED\r\n                        ? statusObj.completed\r\n                        : statusObj.active\r\n                    // set previous filtered page\r\n                    if (tasksLength === 1 && page !== 1 && updateObj.status !== undefined) {\r\n                        dispatch(setFilteredPageAC(listId, page - 1, tasks, status))\r\n                    } else if (tasksLength === 1 && page === 1 && updateObj.status !== undefined) {\r\n                        await dispatch(setAllTasksPage(listId, 1))\r\n                        dispatch(setFilterValueAC(listId, ALL_S))\r\n                    } else\r\n                        dispatch(setFilteredPageAC(listId, page, tasks, status))\r\n                }\r\n            }\r\n        }\r\n        dispatch(taskInProcessAC(listId, taskId, 'taskInProcess', false))\r\n    } catch (error) {\r\n        dispatch(setErrorAC(error))\r\n        dispatch(taskInProcessAC(listId, taskId, 'taskInProcess', false))\r\n    }\r\n}\r\n\r\n\r\nconst SET_TASKS_ORDER = 'SET_TASKS_ORDER'\r\nconst setTasksOrder = (listId, tasksOrder) => ({ type: SET_TASKS_ORDER, listId, tasksOrder })\r\n\r\n\r\nexport const reorderTask = (listId, taskId, currPos, nextRenderPos) => async(dispatch, getState) => {\r\n\r\n    const nextPos = nextRenderPos !== (null || undefined) ? +nextRenderPos - 1 : null   //define next element position\r\n    const targerList = getState().app.lists.find((list) => list.id === listId)\r\n\r\n    const getAfterId = () => {\r\n        const { filterValue, prevActiveId } = targerList\r\n        // if nextRenderPos undefined or null element position should'n change\r\n        // this is insurence check or for case of using reorderTaskAC\r\n        if (nextPos === null && currPos === 0) return null\r\n        if (nextPos === null) return targerList.tasksOrder[currPos - 1]\r\n\r\n        // if next position defined find 'put after element' Id\r\n        if (filterValue === COMPLETED && nextPos === 0) return prevActiveId\r\n        if (nextPos === 0) return null\r\n        if (nextPos <= +currPos) return targerList.tasksOrder[nextPos - 1]\r\n        if (nextPos > +currPos) return targerList.tasksOrder[nextPos]\r\n    }\r\n\r\n    const getTasksOrder = () => {\r\n        const tasksOrder = [...targerList.tasksOrder]\r\n        if (nextPos < currPos) {\r\n            const currId = tasksOrder[currPos]\r\n            for (let i = currPos - 1; i >= nextPos; i--) {\r\n                tasksOrder[i + 1] = tasksOrder[i]\r\n            }\r\n            tasksOrder[nextPos] = currId\r\n            return tasksOrder\r\n        }\r\n        if (nextPos > currPos) {\r\n            const currId = tasksOrder[currPos]\r\n            for (let i = currPos; i < nextPos; i++) {\r\n                tasksOrder[i] = tasksOrder[i + 1]\r\n            }\r\n            tasksOrder[nextPos] = currId\r\n            return tasksOrder\r\n        }\r\n        return tasksOrder    // default value for unchanged lists ---> insurance check\r\n    }\r\n\r\n\r\n    // reorder functional block\r\n    if (nextPos !== null && nextPos !== +currPos) {\r\n        const putAfterItemId = getAfterId()              // get putAfterItemId for API request\r\n        const { countOnPage, filterValue } = targerList\r\n        // determine status of filtered tasks for dispatch(setFilteredPage(...))\r\n        const { status } = targerList.tasks.find((t) => t.id === taskId )\r\n        const tasksOrder = getTasksOrder()               // determine new tasksOrder\r\n\r\n        const page = nextRenderPos ? Math.ceil(nextRenderPos / countOnPage) : 1\r\n        // determine which page will appear on after the reorder\r\n\r\n        dispatch(listInProcessAC(listId, 'taskIsAdding', true))\r\n        try {\r\n            const response = await api.reorderTask(listId, taskId, putAfterItemId)\r\n            if (response.data.resultCode === 0) {\r\n                if (filterValue === ALL_S) {\r\n                    await dispatch(setAllTasksPage(listId, page))\r\n                    dispatch(setTasksOrder(listId, tasksOrder))\r\n                    dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n                }\r\n                if (filterValue === ACTIVE || filterValue === COMPLETED) {\r\n                    await dispatch(setFilteredPage(listId, page, status))\r\n                    // dispatch(setTasksOrder(listId, tasksOrder))\r\n                    dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n                }\r\n            }\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error))\r\n            dispatch(listInProcessAC(listId, 'taskIsAdding', false))\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nconst Preloader = ({ height, width, fill, ...userStyles }) => {\r\n\r\n    const currentWidth = () => {\r\n        if ( width ) return width\r\n        if ( !width && height ) {\r\n            const wNum = +height.slice(0, height.indexOf('p'))*3.65\r\n            return (wNum+'px')\r\n        }\r\n        if ( !width && !height ) return '252px'\r\n    }\r\n    \r\n    const currentHeight = () => {\r\n        if ( height ) return height\r\n        if ( !height && width ) {\r\n            const hNum = +width.slice(0, width.indexOf('p'))*0.27\r\n            return (hNum+'px')\r\n        }\r\n        if ( !height && !width ) return '69px'\r\n    }\r\n\r\n    const loaderStyle = {\r\n        ...userStyles,\r\n        width: currentWidth(),\r\n        height: currentHeight()\r\n    };\r\n      \r\n    return(\r\n            <svg svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" version=\"1.0\" viewBox=\"0 0 128 35\" space=\"preserve\" style={loaderStyle}>\r\n                <g><circle fill={fill} cx=\"17.5\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.167;0.5;0.668;1\" values=\"0.3;1;1;0.3;0.3\"/></g>\r\n                <g><circle fill={fill} cx=\"110.5\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.334;0.5;0.835;1\" values=\"0.3;0.3;1;1;0.3\"/></g>\r\n                <g><circle fill={fill} cx=\"64\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"900ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.167;0.334;0.668;0.835;1\" values=\"0.3;0.3;1;1;0.3;0.3\"/></g>\r\n            </svg>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './ListTitle.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { updateListTitle } from '../../../../Redux/appReducer';\r\nimport Preloader from '../../../Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Tooltip from '../../../Tooltip/Tooltip';\r\n\r\n\r\nclass ListTitle extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: '',\r\n        inputError: false,\r\n    }\r\n\r\n    updateListTitle = (title) => {\r\n        if (!title.match(/%/)) {\r\n            this.props.updateListTitle(this.props.listId, title)\r\n            if (this.props.history.location.pathname !== '/') {\r\n                this.props.history.push(`/${title.replace(/\\s|\\?|#/g, '-')}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    setEditMode = () => this.setState({ editMode: true, title: this.props.title })\r\n    setDisplayMode = () => {\r\n        if (this.state.inputError) this.setState({ inputError: false })\r\n        this.setState({ editMode: false })\r\n    }\r\n\r\n    editListTitle = (e) => {\r\n        const newTitle = e.currentTarget.value;\r\n        const equalTitles = this.props.listTitles.find((el) => {\r\n            return (el.title.toLowerCase() === newTitle.toLowerCase() && el.id !== this.props.listId)\r\n        })\r\n        \r\n        if (this.state.inputError) this.setState({ inputError: false });\r\n        if (newTitle.trim() === '' || newTitle.length > 100 \r\n            || newTitle.match(/%/) || equalTitles) {\r\n            this.setState({ title: newTitle, inputError: true })\r\n        } else this.setState({ title: newTitle })\r\n    }\r\n\r\n    setTitleOnKey = (e) => {\r\n        const title = e.currentTarget.value;\r\n        if (e.key === 'Enter' && !this.state.inputError) {\r\n            this.setDisplayMode()\r\n            this.updateListTitle(title);\r\n        }\r\n        if (e.keyCode === 27) {\r\n            this.setDisplayMode()\r\n            if (this.state.inputError) this.setState({ inputError: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const loaderStyle = {\r\n            fill: 'rgb(85, 47, 11)', height: '10px', position: 'absolute', bottom: '-12px', right: '43%'\r\n        }\r\n\r\n        const listTitleHint = \r\n            'Please, check the % sign is missing and enter a unique title between 1 and 100 chars long, or press \"Esc\" to exit'\r\n\r\n        if (this.state.editMode) {\r\n            return (\r\n                <div className={styles.list_title__input}>\r\n                    <input type=\"text\"\r\n                        value={this.state.title}\r\n                        className={this.state.inputError ? styles.error : ''}\r\n                        onChange={this.editListTitle}\r\n                        autoFocus={true}\r\n                        onBlur={this.setDisplayMode}\r\n                        onKeyDown={this.setTitleOnKey} />\r\n                    \r\n                    { this.state.inputError && <Tooltip hint={listTitleHint} /> }\r\n                </div>\r\n            )\r\n        } else return (\r\n            <div className={styles.list_title}>\r\n                <span onClick={this.setEditMode}>{this.props.title}</span>\r\n                {(this.props.listDeliting || this.props.titleUpdating)\r\n                    && <Preloader {...loaderStyle} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(null, { updateListTitle }),\r\n    withRouter\r\n)(ListTitle)","import React from 'react';\r\nimport styles from './ListHeader.module.css'\r\nimport { connect } from 'react-redux';\r\nimport AddItemForm from '../../AddItemForm/AddItemForm';\r\nimport ListTitle from './ListTitle/ListTitle';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport { addTask, addTaskActive, deleteList, ALL_S, COMPLETED, ACTIVE } from '../../../Redux/appReducer';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ListHeader extends React.Component {\r\n\r\n    deleteList = () => {\r\n        this.props.deleteList(this.props.listId)\r\n            .then(() => {\r\n                if (this.props.history.location.pathname !== '/') {\r\n                    this.props.history.push('/')\r\n                }\r\n            })\r\n    }\r\n\r\n    addTask = (title) => {\r\n        const { listId, filterValue, taskIsAdding } = this.props;\r\n\r\n        if ( (filterValue === COMPLETED || filterValue === ALL_S) && !taskIsAdding )  {\r\n            this.props.addTask(listId, title)\r\n        }\r\n\r\n        if (filterValue === ACTIVE && !taskIsAdding) {\r\n            this.props.addTaskActive(listId, title)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {listId, title, page, totalCount, filterValue, listTitles, maxTasksCount,\r\n            generalCount, listDeliting, titleUpdating, taskIsAdding} = this.props\r\n        \r\n            const totalTasksCount = filterValue === ALL_S ? totalCount : generalCount\r\n\r\n        const taskTitleValidation = (newTitle) => {\r\n            if (newTitle === '' || newTitle.length > 100 || newTitle.trim() === '') {\r\n                return true\r\n            }\r\n        }\r\n\r\n        const loaderStyle ={\r\n            fill: 'rgb(85, 47, 11)', height: '8px', position: 'absolute', right: '50%', bottom: '-14px'}\r\n\r\n            const addTaskHint = \r\n            'Please, enter a title with length between 1 to 100 chars or press \"Esc\" to reset'\r\n\r\n        return (\r\n            <div className={styles.list_header}>\r\n                <ListTitle listId={listId} title={title} page={page} listTitles={listTitles}\r\n                    listDeliting={listDeliting} titleUpdating={titleUpdating} />\r\n                {/* форма добавления задач */}\r\n                {totalTasksCount < maxTasksCount\r\n                    && <div className={styles.list_header_add_form}>\r\n                        <AddItemForm\r\n                            placeholder='Add new task'\r\n                            hint={addTaskHint}\r\n                            validationFunc={taskTitleValidation}\r\n                            addItem={this.addTask} />\r\n                        {taskIsAdding && <Preloader {...loaderStyle} />}\r\n                    </div>}\r\n                \r\n                {/*delete icon display modes */}\r\n                { !listDeliting\r\n                    &&<i className={'fa fa-close ' + styles.delete_button} onClick={this.deleteList} />\r\n                }\r\n                { listDeliting\r\n                    &&<i className={'fa fa-close ' + styles.delete_button}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mdtp = { addTask, addTaskActive, deleteList }\r\n\r\nexport default compose (\r\n    connect(null, mdtp ),\r\n    withRouter\r\n)(ListHeader);\r\n\r\n","import React, { useState } from 'react'\r\nimport styles from './TaskPriority.module.css'\r\n\r\n\r\nconst TaskPriority = (props) => {\r\n\r\n    const [editMode, setMode ] = useState(false)\r\n\r\n    const setTaskPriority = (e) => {\r\n        const priority = priorityArray.findIndex((prior) => prior === e.currentTarget.value);\r\n        props.updateTask({ priority });\r\n        resetEditMode()\r\n    }\r\n\r\n    const priorityArray = ['Low', 'Middle', 'High', 'Urgent', 'Later']\r\n\r\n    const priorityOptions = priorityArray.map(prior =>\r\n        <option className={styles[prior]} key={prior} >{prior}</option>)\r\n\r\n    const getTaskPriority = () => priorityArray[props.priority]\r\n    const getTaskPriorityStyle = () => styles[ priorityArray[props.priority] ] + ' ' + styles.taskPriority\r\n\r\n    const setEditMode = () => setMode(true)\r\n    const resetEditMode = () => setMode(false)\r\n\r\n    const priorityOnKey = (e) => { if (e.keyCode === 27) resetEditMode() }\r\n\r\n    if (!editMode) {\r\n        return (\r\n            <span onClick={setEditMode} className={getTaskPriorityStyle()}>\r\n                {getTaskPriority()} &nbsp;\r\n            </span>\r\n        )\r\n    } else {\r\n        return (\r\n            <select\r\n                defaultValue={getTaskPriority()}\r\n                className={getTaskPriorityStyle()}\r\n                onChange={setTaskPriority}\r\n                onBlur={resetEditMode}\r\n                onKeyDown={priorityOnKey}\r\n                autoFocus={true} > {priorityOptions} </select>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskPriority","import React, { useState } from 'react'\r\nimport styles from './TaskTitle.module.css'\r\nimport Tooltip from '../../../../Tooltip/Tooltip'\r\n\r\n\r\nconst TaskTitle = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [title, setTitle] = useState('')\r\n    const [inputError, setError] = useState(false)\r\n\r\n\r\n    const setTitleEditMode = () => {\r\n        setEditMode(true)\r\n        setTitle(props.title)\r\n    }\r\n\r\n    const setDisplayMode = () => {\r\n        if (inputError) setError(false)\r\n        setEditMode(false)\r\n    }\r\n\r\n    const editTaskTitle = (e) => {\r\n        const newTitle = e.currentTarget.value;\r\n        if (inputError) setError(false)\r\n        if (newTitle.trim() === '' || newTitle.length > 100) {\r\n            setTitle(newTitle)\r\n            setError(true)\r\n        } else setTitle(newTitle)\r\n    }\r\n\r\n    const setTitleOnKey = (e) => {\r\n        const title = e.currentTarget.value;\r\n        if (e.key === 'Enter' && !inputError) {\r\n            props.updateTask({ title });\r\n            setDisplayMode()\r\n        }\r\n        if (e.keyCode === 27) {\r\n            setDisplayMode()\r\n            if (inputError) setError(false)\r\n        }\r\n    }\r\n\r\n    const taskTitleHint = \r\n            'Please, enter a title with length between 1 to 100 chars or press \"Esc\" to reset'\r\n\r\n\r\n    if (!editMode) {\r\n        return (\r\n            <span onClick={setTitleEditMode} className={styles.taskTitle}>{props.title}, </span>\r\n        )\r\n    } else {\r\n        return (\r\n            <span className={styles.taskTitle}>\r\n                <input type=\"text\"\r\n                    value={title}\r\n                    className={inputError ? styles.error : ''}\r\n                    onChange={editTaskTitle}\r\n                    autoFocus={true}\r\n                    onBlur={setDisplayMode}\r\n                    onKeyDown={setTitleOnKey} />\r\n                { inputError && <Tooltip hint={taskTitleHint} /> }\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskTitle","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './TaskOrder.module.css'\r\nimport { reorderTask } from '../../../../../Redux/appReducer'\r\n\r\n\r\nconst TaskOrder = ({ listId, taskId, tasksCount, renderIndex, reorderTask }) => {\r\n\r\n    const [selectMode, setMode] = useState(false)\r\n    const setOnMode = () => setMode(true)\r\n    const resetMode = () => setMode(false)\r\n    const resetOnKey = (e) => { if (e.keyCode === 27) resetMode() }\r\n\r\n    const reorderOnSelect = (e) => {\r\n        const nextRenderPos = e.currentTarget.value\r\n        const currPos = renderIndex - 1\r\n        reorderTask(listId, taskId, currPos, nextRenderPos)\r\n        resetMode()\r\n    }\r\n\r\n    const getOptions = () => {\r\n        let optionArr = []\r\n        for (let i = 1; i <= tasksCount; i++) {\r\n            const el = <option value={i} key={i}>{i}</option>\r\n            optionArr.push(el)\r\n        }\r\n        return optionArr\r\n    }\r\n\r\n    const optionArr = getOptions()\r\n\r\n    if (selectMode) return (\r\n        <select autoFocus\r\n            onBlur={resetMode}\r\n            onKeyDown={resetOnKey}\r\n            onChange={reorderOnSelect}\r\n            defaultValue={renderIndex}>{optionArr}</select>\r\n    )\r\n\r\n    return <span className={styles.taskOrder} onClick={setOnMode}> {renderIndex} - </span>\r\n}\r\n\r\nexport default connect(null, { reorderTask })(TaskOrder)","import React from 'react'\r\nimport styles from './ListTask.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { delTaskFromPage, updateTask, statusObj } from '../../../../Redux/appReducer'\r\nimport Preloader from '../../../Preloader/Preloader'\r\nimport TaskPriority from './TaskPriority/TaskPriority';\r\nimport TaskTitle from './TaskTitle/TaskTitle';\r\nimport TaskOrder from './TaskOrder/TaskOrder';\r\n\r\n\r\n\r\nconst ListTask = (props) => {\r\n\r\n    const { id: taskId, status, renderIndex, priority, title, taskInProcess } = props.task\r\n    const { listId, tasksCount } = props\r\n\r\n\r\n    const deleteTask = () => props.delTaskFromPage(listId, taskId)\r\n\r\n    const updateTask = (updateObj) => props.updateTask(listId, taskId, updateObj)\r\n\r\n    const setTaskStatus = (e) => {\r\n        const completed = e.currentTarget.checked \r\n            ? statusObj.completed \r\n            : statusObj.active\r\n        updateTask({ status: completed })\r\n    }\r\n\r\n    const loaderStyle = { fill: 'rgb(85, 47, 11)', height: '8px' }\r\n\r\n    return (\r\n        <div className={styles.todoList_task}>\r\n            <div className={status ? styles.taskIsDone : ''}>\r\n                {/* чекбокс */}\r\n                <input\r\n                    className={styles.isDoneCheck}\r\n                    onChange={setTaskStatus}\r\n                    type=\"checkbox\"\r\n                    checked={status} />\r\n                \r\n                <TaskOrder listId={listId} taskId={taskId} \r\n                    renderIndex={renderIndex} tasksCount={tasksCount}/>\r\n                <TaskTitle title={title} updateTask={updateTask} />\r\n                <TaskPriority priority={priority} updateTask={updateTask} />\r\n\r\n                {/* кнопка delete */}\r\n                {!taskInProcess\r\n                    && < i className={'fa fa-close ' + styles.delete_button} onClick={deleteTask}/> }\r\n                {taskInProcess\r\n                    && < i className={'fa fa-close ' + styles.delete_button}/> \r\n                    && <Preloader {...loaderStyle} /> }\r\n                 {/* {taskInProcess && <Preloader {...loaderStyle} />} */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, {updateTask, delTaskFromPage})(ListTask);\r\n\r\n","import React from 'react'\r\nimport styles from './ListTasks.module.css'\r\nimport ListTask from './ListTask/ListTask'\r\n\r\nconst ListTasks = ({ tasks, ...restProps}) => {\r\n\r\n    const tasksArray = tasks.map((task) => \r\n        <ListTask key={task.id} task={task} { ...restProps } /> \r\n    );\r\n\r\n\r\n    return (\r\n        <div className={styles.listTasks}>\r\n            {tasksArray}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ListTasks;\r\n\r\n","import React from 'react'\r\nimport styles from './ListOrder.module.css'\r\nimport { connect } from 'react-redux'\r\nimport { reorderList } from '../../../../Redux/appReducer'\r\nimport onClickOutside from 'react-onclickoutside'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass ListOrder extends React.Component {\r\n\r\n    // configure the onClickOutside click handler\r\n    handleClickOutside = () => this.setState({ showOrder: false })\r\n\r\n    state = {\r\n        showOrder: false\r\n    }\r\n\r\n    toggleMode = () => this.setState({ showOrder: !this.state.showOrder })\r\n\r\n    reorderOnClick = (nextRenderPos) => {\r\n        const { listId, order: currPos, reorderList } = this.props\r\n        reorderList(listId, currPos, nextRenderPos)\r\n        this.toggleMode()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { listsCount, order } = this.props\r\n\r\n        const getPagesArr = () => {\r\n            let pagesArr = []\r\n            for (let i = 1; i <= listsCount; i++) {\r\n                const reorder = () => this.reorderOnClick(i)\r\n                const numberStyle = (i - 1) !== order\r\n                    ? styles.orderNumber : styles.orderNumber + ' ' + styles.active\r\n                const page = <button className={numberStyle} onClick={reorder} key={i}>{i}</button>\r\n                pagesArr.push(page)\r\n            }\r\n            return pagesArr\r\n        }\r\n        const pagesArr = getPagesArr()\r\n\r\n        const orderBtnStyle = this.state.showOrder ? styles.pressed : ''\r\n\r\n        return (\r\n            <div className={styles.listOrder}>\r\n                <button className={orderBtnStyle} onClick={this.toggleMode}>\r\n                    {order + 1 + '/' + listsCount}\r\n                </button>\r\n                {this.state.showOrder\r\n                    && < div className={styles.orderBox}>{pagesArr}</div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(null, { reorderList }),\r\n    onClickOutside\r\n)(ListOrder)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './StatusFilter.module.css'\r\nimport { setFilterValue, ALL_S, COMPLETED, ACTIVE } from '../../../../Redux/appReducer'\r\nimport onClickOutside from 'react-onclickoutside'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass StatusFilter extends React.Component {\r\n\r\n    // configure the onClickOutside click handler\r\n    handleClickOutside = () => this.setState({ isHidden: true })\r\n\r\n    state = {\r\n        isHidden: true\r\n    }\r\n\r\n    toggleOnClick = () => this.setState({ isHidden: !this.state.isHidden })\r\n\r\n    render() {\r\n\r\n        const { listId, filterValue, footerProcessing, setFilterValue } = this.props\r\n\r\n        const buttonAll = filterValue === ALL_S ? styles.pressed : ''\r\n        const buttonActive = filterValue === ACTIVE ? styles.pressed : ''\r\n        const buttonCompleted = filterValue === COMPLETED ? styles.pressed : ''\r\n\r\n        const filter = { ALL_S: 'All', COMPLETED: 'Completed', ACTIVE: 'Active' }\r\n\r\n        const getAllTasks = () => {\r\n            if (filterValue !== ALL_S) setFilterValue(listId, ALL_S)\r\n        }\r\n        const getCompletedTasks = () => {\r\n            if (filterValue !== COMPLETED) setFilterValue(listId, COMPLETED)\r\n        }\r\n        const getActiveTasks = () => {\r\n            if (filterValue !== ACTIVE) setFilterValue(listId, ACTIVE)\r\n        }\r\n\r\n        const filterButtonStyle =\r\n            this.state.isHidden ? styles.frontButton : styles.frontButton + ' ' + styles.pressed\r\n\r\n        return (\r\n            <div className={styles.statusFilter}>\r\n                <button className={filterButtonStyle} onClick={this.toggleOnClick}>\r\n                   {filter[filterValue]}</button>\r\n                {!this.state.isHidden &&\r\n                    <div className={styles.filterButtons}>\r\n                        <button onClick={getAllTasks}\r\n                            className={buttonAll} disabled={footerProcessing}>All</button>\r\n                        <button onClick={getCompletedTasks}\r\n                            className={buttonCompleted} disabled={footerProcessing}>Completed</button>\r\n                        <button onClick={getActiveTasks}\r\n                            className={buttonActive} disabled={footerProcessing}>Active</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(null, { setFilterValue }),\r\n    onClickOutside\r\n)(StatusFilter)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './PagesLinks.module.css'\r\nimport { setTasksPage } from '../../../../Redux/appReducer'\r\n\r\n\r\nconst PagesLinks = ({listId, filterValue, page, pagesCount, setTasksPage}) => {\r\n\r\n    // block the button immediately after clicking on it\r\n    const [disabled, setDisabled] = useState(false)\r\n    useEffect(() => setDisabled(false), [page])\r\n    \r\n    const getPagesLinks = () => {\r\n        const pagesLinks = []\r\n        for ( let i = 1; i <= pagesCount; i++ ) {\r\n            const onClick = () => {\r\n                setTasksPage(listId, filterValue, i)\r\n                setDisabled(true)\r\n            }\r\n            \r\n            const disabledValue = i === page || disabled ? true : false\r\n            const linkStyle = i === page ? `${styles.pageLink} ${styles.active}` : styles.pageLink\r\n            \r\n            const pageLink = \r\n                <button key={i} disabled={disabledValue}\r\n                    className={ linkStyle } onClick={ onClick } >{i}</button>\r\n            pagesLinks.push(pageLink)\r\n        }\r\n        return pagesLinks\r\n    }\r\n\r\n\r\n    return(\r\n        <div className={styles.tasksPagesLinks}>{ getPagesLinks() }</div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { setTasksPage })(PagesLinks)","import React from 'react'\r\nimport Preloader from '../../Preloader/Preloader'\r\nimport styles from './ListFooter.module.css'\r\nimport ListOrder from './ListOrder/ListOrder'\r\nimport StatusFilter from './StatusFilter/StatusFilter'\r\nimport PagesLinks from './PagesLinks/PagesLinks'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst ListFooter = (props) => {\r\n\r\n    const { listId, filterValue, listsCount, order,\r\n        totalCount, countOnPage, page, footerProcessing } = props\r\n\r\n    const loaderStyle = {\r\n        fill: 'rgb(85, 47, 11)', height: '10px', position: 'absolute', bottom: '5px', right: '45%'\r\n    }\r\n\r\n    const pagesCount = totalCount ? Math.ceil(totalCount / countOnPage) : 1\r\n\r\n    // define conditions to show/hide order button\r\n    const showOrder = props.history.location.pathname === '/' ? true : false\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.list_footer}>\r\n            { pagesCount > 1\r\n                && <PagesLinks page={page} pagesCount={pagesCount} \r\n                        listId={listId} filterValue={filterValue} />\r\n            }\r\n            \r\n            <StatusFilter listId={listId} filterValue={filterValue}\r\n                footerProcessing={footerProcessing} />\r\n            \r\n\r\n            {showOrder && listsCount !== 1\r\n                && <ListOrder order={order} listsCount={listsCount} listId={listId} />}\r\n            {footerProcessing && <Preloader {...loaderStyle} />}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withRouter(ListFooter)\r\n\r\n","import React from 'react'\r\nimport styles from './TodoList.module.css'\r\nimport ListHeader from './ListHeader/ListHeader'\r\nimport ListTasks from './ListTasks/ListTasks'\r\nimport ListFooter from './ListFooter/ListFooter'\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.restoreTasks(this.props.list.id)\r\n    }\r\n\r\n    \r\n    render = () => {\r\n        const { listsCount, listTitles, maxTasksCount } = this.props\r\n        const { title, id, page, totalCount, countOnPage, tasks, generalCount, \r\n            order, filterValue, listDeliting, titleUpdating, taskIsAdding, \r\n            footerProcessing, tasksOrder } = this.props.list;\r\n        const tasksCount = tasksOrder ? tasksOrder.length : null\r\n\r\n\r\n        return (\r\n            <div className={styles.todoList}>\r\n                <section className={styles.todoList_wrapper}>\r\n                    <ListHeader\r\n                        title = { title } \r\n                        listId = { id }\r\n                        filterValue = { filterValue }\r\n                        page = { page }\r\n                        maxTasksCount={maxTasksCount}\r\n                        generalCount = {generalCount}\r\n                        totalCount={totalCount}\r\n                        listTitles={listTitles}\r\n                        listDeliting = {listDeliting}\r\n                        titleUpdating={titleUpdating} \r\n                        taskIsAdding={taskIsAdding} />\r\n                    <ListTasks\r\n                        tasks={tasks}\r\n                        listId={id}\r\n                        tasksCount={tasksCount}\r\n                    />\r\n                </section>\r\n                <ListFooter \r\n                    listId={id}\r\n                    page = {page}\r\n                    order={order}\r\n                    listsCount={listsCount}\r\n                    filterValue = { filterValue }\r\n                    countOnPage ={ countOnPage }\r\n                    totalCount={totalCount} \r\n                    footerProcessing={footerProcessing} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styles from './Error404.module.css'\r\n\r\n\r\nconst Error404 = (props) => {\r\n    return(\r\n        <div className={styles.error404}>\r\n            <h3>No match for <code>\"{props.location.pathname}\"</code>. Please, check URL.</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Error404);","import React from 'react';\r\nimport styles from './App.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, Route, withRouter, Switch } from 'react-router-dom';\r\nimport TodoList from './TodoList/TodoList';\r\nimport AddItemForm from './AddItemForm/AddItemForm';\r\nimport Preloader from './Preloader/Preloader';\r\nimport {restoreLists, restoreTasks, addList} from '../Redux/appReducer';\r\nimport book from '../Assets/img/book.png';\r\nimport { compose } from 'redux';\r\nimport Error404 from './Error404/Error404';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.restoreLists()\r\n    }\r\n\r\n\r\n    restoreTasks = (listId) => this.props.restoreTasks(listId)\r\n\r\n\r\n    render() {\r\n\r\n        const listTitles = this.props.lists.map((list) => ({title: list.title, id: list.id}) )\r\n\r\n        // generate list Routes for single list display\r\n        const listsRoutes = this.props.lists.map((list) =>{\r\n            const { maxTasksCount } = this.props\r\n            const path = list.title.replace(/\\s|\\?|#/g, '-')\r\n            return (\r\n            <Route path={`/${path}`} exact key={list.id} render={() => \r\n                <TodoList list={list} key={list.id} maxTasksCount={maxTasksCount}\r\n                    restoreTasks={this.restoreTasks} listTitles={listTitles} />} \r\n            />) \r\n        })\r\n\r\n        // generate list Routes for lists general display\r\n        const allLists = this.props.lists.map((list) => {\r\n            const { listsCount, maxTasksCount } = this.props\r\n            return( \r\n                <TodoList list={list} key={list.id} listTitles={listTitles} listsCount={listsCount}\r\n                    restoreTasks={this.restoreTasks} maxTasksCount={maxTasksCount}/>\r\n            )}\r\n        )\r\n\r\n        const allListsLinks = this.props.lists.map( ( list ) => {\r\n            const link = list.title.replace(/\\s|\\?|#/g, '-')\r\n            return(\r\n                <li key={list.id}><NavLink to={`/${link}`}>{list.title}</NavLink></li>\r\n            )\r\n        } )\r\n\r\n        const listTitleValidation = (newTitle) => {\r\n\r\n            const equalTitles = listTitles.find((el) => {\r\n                return (el.title.toLowerCase() === newTitle.toLowerCase() && el.id !== this.props.listId)\r\n            })\r\n\r\n            if (newTitle.trim() === '' || newTitle.length > 100 || newTitle.match(/%/) || equalTitles) {\r\n                return true\r\n            }\r\n        }\r\n\r\n        const addList = (title) => {\r\n            this.props.addList(title)\r\n            if (this.props.history.location.pathname !== '/') {\r\n                this.props.history.push('/')\r\n            }\r\n        }\r\n\r\n        const preloaderStyles = {\r\n            position: 'absolute', height: '12px', top: '1.75em', right: '34%', fill: 'white'\r\n        }\r\n        \r\n        const errorMessage = this.props.error ? this.props.error.message : 'Error!!!'\r\n        \r\n        const addListHint = \r\n            'Please, check the % sign is missing and enter a unique title between 1 and 100 chars long, or press \"Esc\" to reset'\r\n\r\n        return (\r\n            <div className={styles.app}>\r\n                <div className={styles.app_header}>\r\n                    {this.props.error && <span className={styles.error}>{errorMessage}</span>}\r\n                    { this.props.listsLoading && <Preloader {...preloaderStyles}/>\r\n                    }\r\n                    <NavLink to='/' exact className={styles.app_title}>\r\n                        <h2>\r\n                            <img src={book} alt='book' className={styles.app_header_icon} />\r\n                            Tasks Manager\r\n                        </h2>\r\n                    </NavLink>\r\n                    {this.props.lists.length < this.props.maxListsCount \r\n                        && <div className={styles.app_addItemForm}>\r\n                                <AddItemForm addItem={addList} hint={addListHint}\r\n                                    validationFunc={listTitleValidation} placeholder='Add list' />\r\n                            </div>}\r\n                </div>\r\n                <nav className={styles.app_header_navigation}>\r\n                    <ul>{allListsLinks}</ul>\r\n                </nav>\r\n                <div className={styles.app_lists}>\r\n                    <Switch>\r\n                        {listsRoutes}\r\n                        <Route path='/' exact>{allLists}</Route>\r\n                        <Route component={Error404} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        lists: state.app.lists,\r\n        listsCount: state.app.lists.length,\r\n        listsLoading: state.app.listsProgress.listsLoading,\r\n        maxListsCount: state.app.maxListsCount,\r\n        maxTasksCount: state.app.maxTasksCount,\r\n        error: state.errors.error\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {restoreLists, restoreTasks ,addList}),\r\n    withRouter\r\n)(App);","import { createStore, combineReducers ,applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport appReducer from './appReducer';\r\nimport errorsReducer from './errorsReducer';\r\n\r\n\r\nconst storeReducer = combineReducers({\r\n    app: appReducer,\r\n    errors: errorsReducer\r\n})\r\n\r\n\r\nconst store = createStore(storeReducer, composeWithDevTools(applyMiddleware(ThunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './UI/App';\r\nimport store from './Redux/store';\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store = {store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}